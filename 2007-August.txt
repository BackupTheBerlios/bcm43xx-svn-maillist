From mansour77 at ownmail.net  Sun Aug  5 03:19:29 2007
From: mansour77 at ownmail.net (Mansour)
Date: Sat, 04 Aug 2007 22:19:29 -0300
Subject: how to add support for a new card
Message-ID: <46B525A1.1050904@ownmail.net>

Hello everyone:
I am wondering if there's a way to add support for a new Broadcom card.
Is there any documentation or I have to read the source code ??
If there's no docs, then what would be the shortest way to achieve this? 
Just edit fwcutter_list.h or I need to edit some where else ??




From tuxbuesch at mail.berlios.de  Wed Aug  8 15:59:04 2007
From: tuxbuesch at mail.berlios.de (tuxbuesch at BerliOS)
Date: Wed, 8 Aug 2007 15:59:04 +0200
Subject: r1227 - trunk/sprom
Message-ID: <200708081359.l78Dx4Br009319@sheep.berlios.de>

Author: tuxbuesch
Date: 2007-08-08 15:59:04 +0200 (Wed, 08 Aug 2007)
New Revision: 1227

Removed:
   trunk/sprom/sprommod.sh
Log:
Remove sprommod.sh



Deleted: trunk/sprom/sprommod.sh
===================================================================
--- trunk/sprom/sprommod.sh	2007-05-07 23:29:31 UTC (rev 1226)
+++ trunk/sprom/sprommod.sh	2007-08-08 13:59:04 UTC (rev 1227)
@@ -1,48 +0,0 @@
-#!/bin/bash
-
-if [ "$1" == "--help" ] || [ "$1" == "-h" ]; then
-	echo "Usage: $0 DEVICE [OPTIONS]"
-	echo ""
-	echo "DEVICE is the wireless device (eth0, wlan0, wlan0.11, ...)"
-	echo "OPTIONS are the options to bcm43xx-sprom"
-	exit 1
-fi
-
-device="$1"
-shift
-
-args="$@"
-if [ "$1" = "--all" ]; then
-	shift
-	args="`bcm43xx-sprom --help 2>&1| sed 's/  \(--[^ ]*\).*/\1 GET/;t;d' | tr '\n' ' '` $@"
-fi
-
-if [ -z "$device" ]; then
-	echo "No DEVICE given"
-	exit 1
-fi
-
-orig_data="$(iwpriv "$device" read_sprom)"
-err=$?
-if [ $err -ne 0 ]; then
-	echo "Could not read SPROM ($err)"
-	exit 1
-fi
-mod_data="$(echo "$orig_data" | bcm43xx-sprom $args)"
-err=$?
-if [ $err -ne 0 ]; then
-	echo "Could not modify SPROM data ($err)"
-	exit 1
-fi
-if [ -z "$mod_data" ]; then
-	echo "No data. Not modified?"
-	exit 1
-fi
-iwpriv "$device" write_sprom "$mod_data"
-err=$?
-if [ $err -ne 0 ]; then
-	echo "Could not write SPROM data ($err)"
-	exit 1
-fi
-
-exit 0



From tuxbuesch at mail.berlios.de  Wed Aug 15 19:26:34 2007
From: tuxbuesch at mail.berlios.de (tuxbuesch at BerliOS)
Date: Wed, 15 Aug 2007 19:26:34 +0200
Subject: r1228 - trunk/fwcutter
Message-ID: <200708151726.l7FHQYCt018198@sheep.berlios.de>

Author: tuxbuesch
Date: 2007-08-15 19:26:29 +0200 (Wed, 15 Aug 2007)
New Revision: 1228

Modified:
   trunk/fwcutter/Makefile
   trunk/fwcutter/README
   trunk/fwcutter/fwcutter.c
   trunk/fwcutter/fwcutter.h
   trunk/fwcutter/fwcutter_list.h
   trunk/fwcutter/md5.c
Log:
From: Johannes Berg

Rewrite



Modified: trunk/fwcutter/Makefile
===================================================================
--- trunk/fwcutter/Makefile	2007-08-08 13:59:04 UTC (rev 1227)
+++ trunk/fwcutter/Makefile	2007-08-15 17:26:29 UTC (rev 1228)
@@ -1,7 +1,5 @@
-VERSION = 007
+VERSION = 008
 
-FIRMWARE_INSTALL_DIR ?= /lib/firmware
-
 CC ?= cc
 PREFIX ?= /usr/local
 CFLAGS ?= -O2 -fomit-frame-pointer
@@ -16,21 +14,17 @@
 all: fwcutter
 
 fwcutter: $(OBJECTS)
-	$(CC) $(CFLAGS) -o bcm43xx-fwcutter $(OBJECTS) $(LDFLAGS)
+	$(CC) $(CFLAGS) -o b43-fwcutter $(OBJECTS) $(LDFLAGS)
 
 install: all
 	-install -d -o 0 -g 0 -m 755 $(PREFIX)/bin/
-	-install -o 0 -g 0 -m 755 bcm43xx-fwcutter $(PREFIX)/bin/
+	-install -o 0 -g 0 -m 755 b43-fwcutter $(PREFIX)/bin/
 	-install -d -o 0 -g 0 -m 755 $(PREFIX)/man/man1/
-	-install -o 0 -g 0 -m 644 bcm43xx-fwcutter.1 $(PREFIX)/man/man1/
+	-install -o 0 -g 0 -m 644 b43-fwcutter.1 $(PREFIX)/man/man1/
 
 clean:
-	-rm -f *~ *.o *.orig *.rej *.fw bcm43xx-fwcutter
+	-rm -f *~ *.o *.orig *.rej *.fw b43-fwcutter
 
-installfw:
-	-if ! [ -d $(FIRMWARE_INSTALL_DIR) ]; then mkdir -p $(FIRMWARE_INSTALL_DIR); fi
-	-install -o 0 -g 0 -m 600 bcm43xx_*.fw $(FIRMWARE_INSTALL_DIR)
-
 # dependencies
 fwcutter.o: fwcutter.h md5.h fwcutter_list.h
 md5.o: md5.h

Modified: trunk/fwcutter/README
===================================================================
--- trunk/fwcutter/README	2007-08-08 13:59:04 UTC (rev 1227)
+++ trunk/fwcutter/README	2007-08-15 17:26:29 UTC (rev 1228)
@@ -5,7 +5,7 @@
 About this software
 -------------------
 
-bcm43xx-fwcutter is a tool which can extract firmware from various source files.
+b43-fwcutter is a tool which can extract firmware from various source files.
 It's written for BCM43xx driver files.
 
 The project page is http://bcm43xx.berlios.de/
@@ -14,111 +14,34 @@
 Usage
 -----
 
-bcm43xx-fwcutter FILE		extracts the firmware from a source FILE to .
-bcm43xx-fwcutter -i FILE        identify the driver file. Print information, but don't extract.
-bcm43xx-fwcutter -w /tmp FILE	extract and write firmware to /tmp.
-bcm43xx-fwcutter -l		prints a list of supported driver source files.
+b43-fwcutter FILE		extracts the firmware from a source FILE to
+				the current directory, creating a directory
+				"b43" or "b43legacy" with files in it.
+b43-fwcutter -i FILE		identify the driver file; print information
+				but don't extract.
+b43-fwcutter -w /tmp FILE	extract and write firmware to /tmp.
+b43-fwcutter -l			prints a list of supported driver source files.
 
-After extraction, run make installfw which will copy bcm43xx_*.fw to 
-FIRMWARE_INSTALL_DIR (which defaults to /lib/firmware) for
-usage by the bcm43xx driver. An alternative way is using the -w option.
+After extraction, copy the "b43" or "b43legacy" directory to your firmware
+directory (usually /lib/firmware or similar, see below). Alternatively you
+can use the -w option to b43-fwcutter.
 
-Different distributions use different target directories for the firmware 
-files. If the driver complains about missing firmware files look for the 
-correct directory. For some distributions you have to use 
-/lib/hotplug/firmware or /usr/lib/hotplug/firmware for FIRMWARE_INSTALL_DIR,
-but other directories are also possible.
+Different distributions use different directories to load firmware from.
+If the driver complains about missing firmware files look for the correct
+directory. For some distributions you have to use /lib/hotplug/firmware
+or /usr/lib/hotplug/firmware but other directories are also possible.
 
-Extraction doesn't depend on the system you're using. You can even 
-extract firmware on ppc from a mips driver. Cross-extraction is allowed.
+Because firmware file are stored in big endian, extraction doesn't depend
+on the system you're using. You can use extracted firmware from any driver
+on any system and also copy the extracted files to any other system (e.g.
+if extraction on the target system isn't feasible.)
 
 
 Where can I find some driver source files?
 ------------------------------------------
 
-AppleAirPort2
--------------
-You can find the Apple Airport Extreme driver in your Mac OS X system at
-/System/Library/Extensions/AppleAirPort2.kext/Contents/MacOS/AppleAirPort2
-(Note that not all versions of the MacOSX driver are supported.)
+Please check the references at
+http://www.linuxwireless.org/en/users/Drivers/bcm43xx#devicefirmware
 
-AppleAirPortBrcm4311
---------------------
-AppleAirPortBrcm4311 only seems to be available on Intel based machines.
-System/Library/Extensions/IO80211Family.kext/Contents/PlugIns/AppleAirPortBrcm4311.kext/Contents/MacOS/AppleAirPortBrcm4311
-
-bcmwl5.sys	Link
--------------   -------------------------------------------------------
-3.20.23.0	http://nicolas.bonifas.free.fr/inspiron/bcmwl5.sys
-		http://www.fujitsupc.com/downloads/Wireless_Broadcom_802.11g_WPA_V3.20.23.0_XP_2K.exe
-		http://files.codykrieger.com/mn720drivers/bcmwl5.sys
-3.30.15.0	ftp://ftp.asus.com.tw/pub/ASUS/wireless/WL-100g-03/Driver_330150.zip
-		http://web.belkin.com/support/download/files/F5D7010-v2.4.4.exe
-		http://www.belkin.com/support/download/downloaddetails.asp?file_id=1425
-		http://communications.siemens.com/repository/1135/113557/pccard54_V11200_eng.exe
-3.30.15.1	http://www.buffalo-technology.com/downloads/CBG54_30_15.zip
-3.40.20.0	http://broadband.motorola.com/consumers/products/WN825g/downloads/WN-WPCI-Web-Update-v1.1.exe
-		http://broadband.motorola.com/consumers/products/WPCI810g/downloads/WN-WPCI-Web-Update-v1.1.exe
-3.40.25.3	http://www.silfreed.net/download/hpzt3000cto/SP23107A.tar.gz
-3.40.65.0	http://ftp.us.dell.com/network/R74091jp.EXE
-3.40.69.0	http://metahusky.net/~gavin/home/bcmwl5.sys
-3.40.73.0	http://ftp.us.dell.com/network/R83097.EXE
-		ftp://ftp.us.dell.com/network/R83097.EXE
-3.40.100.0	ftp://ftp.wildpackets.com/pub/outgoing/brcmDvr340rc100a~@.zip
-3.50.21.10	http://www.buffalo-technology.com/downloads/CBG54_3.50.21.10_Driver_rev.zip
-3.60.7.0	ftp://ftp.asus.com.tw/pub/ASUS/wireless/WL-100g-03/Driver_3607.zip
-3.60.7.5	http://www2.melcoinc.co.jp/pub/lan/wdrv_660.exe
-3.70.12.0	http://files.wl500g.info/asus/wl120g/drivers/3.70.12.0.rar
-		ftp://ftp.compaq.com/pub/softpaq/sp28001-28500/sp28198.exe
-3.70.17.0	ftp://ftp.compaq.com/pub/softpaq/sp28501-29000/SP28538.exe
-3.90.16.0	http://www.usr.com/support/5421/5421-files/5421-na.exe
-3.90.41.1	http://www2.melcoinc.co.jp/pub/lan/wdrv_661.exe
-3.94.41.1	http://www.buffalo-technology.com/downloads/WLI2-PCI-G54S.zip
-		http://www.buffalo-technology.com/downloads/WLI-CB-G54S.3.104.64.50.zip
-3.94.41.2	http://www2.melcoinc.co.jp/pub/lan/wdrv_810.exe
-3.100.35.1	http://ftp.us.dell.com/network/R94826.EXE
-3.100.46.0	ftp://ftp.support.acer-euro.com/notebook/aspire_3020_5020/driver/80211g.zip
-		http://www.linksys.com/servlet/Satellite?blobcol=urldata&blobheadername1=Content-Type&blobheadername2=Content-Disposition&blobheadervalue1=application%2Fx-msdownload&blobheadervalue2=inline%3B+filename%3DWMP54GSv1.1_20050428.exe&blobkey=id&blobtable=MungoBlobs&blobwhere=1124848568427&ssbinary=true
-		ftp://ftp.compaq.com/pub/softpaq/sp29501-30000/SP29845.exe
-3.100.64.0	ftp://ftp.compaq.com/pub/softpaq/sp30501-31000/SP30676.exe
-3.100.64.50	http://www2.melcoinc.co.jp/pub/lan/wdrv_661.exe
-3.100.65.1	ftp://ftp.hp.com/pub/softlib/software5/COL3601/ob-31557-1/SP30379.exe
-3.104.64.50	http://www.buffalo-technology.com/downloads/WLI2-PCI-G54S.zip
-		http://www.buffalo-technology.com/downloads/WLI-CB-G54S.3.104.64.50.zip
-3.104.64.52	http://www2.melcoinc.co.jp/pub/lan/wdrv_810.exe
-3.120.27.0	ftp://ftp.us.dell.com/network/R102318.EXE
-3.140.16.0	http://files.techlabs.by/getfile.php?id=1844
-4.10.40.0	http://rapidshare.de/files/11458737/Broadcom_4.10.40.0_Drivers.cab.html
-4.10.40.1	http://images.lunarpages.com/12002219.cab
-
-bcmwl564.sys	Link
--------------   -------------------------------------------------------
-3.70.17.5	http://ubuntuforums.org/attachment.php?attachmentid=186
-3.100.64.0	ftp://ftp.support.acer-euro.com/notebook/aspire_3020_5020/driver/winxp64bit/80211g.zip
-
-bcmwl5a.sys	Link
--------------   -------------------------------------------------------
-3.90.16.0	http://www.linksys.com/servlet/Satellite?blobcol=urldata&blobheadername1=Content-Type&blobheadername2=Content-Disposition&blobheadervalue1=application%2Fx-msdownload&blobheadervalue2=inline%3B+filename%3DWMP54GSv1.1_20050428.exe&blobkey=id&blobtable=MungoBlobs&blobwhere=1124848568427&ssbinary=true
-
-d11ucode.o	Link
--------------   -------------------------------------------------------
-3.50.21.10      ftp://ftp.gpl-devices.org/pub/vendors/Motorola/WE800G/v4.04/WE800G_V4.04_GPL.tgz
-3.60.7.0	http://files.wl500g.info/asus/wl500g/gpl/broadcom/src/wl/linux/ap_d11ucode.o
-3.60.13.0	http://arch.crans.org/bernat at luffy.cx--2005-public/wrt54g--crans--0--base-0/wl/linux/sta_d11ucode.o?download
-3.90.7.0	http://dune.hu/gpl_tarballs/asus/broadcom/src/wl.orig/linux/ap_d11ucode.o
-
-wl.o		Link
--------------   -------------------------------------------------------
-3.50.21.0	http://nthill.free.fr/openwrt/sources/wl/wl-2.02.7.tar.bz2
-3.50.21.10	ftp://ftp.gpl-devices.org/pub/vendors/Motorola/WE800G/v4.04/WE800G_V4.04_GPL.tgz
-3.60.13.0	http://nthill.free.fr/openwrt/sources/wl/wl-2.09.1.tar.bz2
-		http://nthill.free.fr/openwrt/sources/wl/wl-3.37.6.tar.bz2
-		http://arch.crans.org/bernat at luffy.cx--2005-public/wrt54g--crans--0--base-0/wl/linux/wl.o?download
-3.90.37.0	http://openwrt.inf.fh-brs.de/~nbd/wl1.o
-
-wl_apsta.o	Link
--------------   -------------------------------------------------------
-3.31.16.0	http://puma.ttc.cz/~jaha2x/openwrt/modules/drivers/net/wl/wl_apsta/wl_apsta.o
-		http://jak.kvalitne.cz/pub/puma.habrova.jarov.czf/~jaha2x/wl500/wl_apsta.o
-3.130.20.0	http://openwrt.inf.fh-brs.de/~nbd/wl_apsta.o
-4.80.53.0	http://downloads.openwrt.org/sources/broadcom-wl-4.80.53.0.tar.bz2
+It is recommended that you extract firmware for both b43 and b43legacy in
+order to support both types of cards on your system.

Modified: trunk/fwcutter/fwcutter.c
===================================================================
--- trunk/fwcutter/fwcutter.c	2007-08-08 13:59:04 UTC (rev 1227)
+++ trunk/fwcutter/fwcutter.c	2007-08-15 17:26:29 UTC (rev 1228)
@@ -4,6 +4,7 @@
  * Copyright (c) 2005 Martin Langer <martin-langer at gmx.de>,
  *               2005 Michael Buesch <mbuesch at freenet.de>
  *		 2005 Alex Beregszaszi
+ *		 2007 Johannes Berg <johannes at sipsolutions.net>
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -21,470 +22,242 @@
  * Boston, MA 02110-1301, USA.
  */
 
+#include <stdlib.h>
+#include <ctype.h>
+#include <string.h>
+#include <stdio.h>
+#include <byteswap.h>
+#include <errno.h>
+#include <sys/stat.h>
+#include <sys/types.h>
+
 #include "md5.h"
 #include "fwcutter.h"
 #include "fwcutter_list.h"
 
 
 static struct cmdline_args cmdargs;
-int big_endian_cpu;
 
-static void write_little_endian(FILE *f, byte *buffer, int len, uint8_t flags) 
+/* tiny disassembler */
+static void print_ucode_version(struct insn *insn)
 {
-	byte swapbuf[4];
+	int val;
 
-	while (len > 0) {
-		swapbuf[0] = buffer[3]; swapbuf[1] = buffer[2];
-		swapbuf[2] = buffer[1]; swapbuf[3] = buffer[0];
-		fwrite(swapbuf, 4, 1, f);
-		buffer = buffer + 4;
-		len  = len - 4;
+	/*
+	 * The instruction we're looking for is a store to memory
+	 * offset insn->op3 of the constant formed like `val' below.
+	 * 0x2de00 is the opcode for type 1, 0x378 is the opcode
+	 * for type 2 and 3.
+	 */
+	if (insn->opcode != 0x378 && insn->opcode != 0x2de00)
+		return;
 
-		if (flags & OLD_VERSION_STYLE_3_8)
-			buffer = buffer + 8;
-		if (flags & OLD_VERSION_STYLE_3_10)
-			buffer = buffer + 4;
-	}
-}
+	val = ((0xFF & insn->op1) << 8) | (0xFF & insn->op2);
 
-static void write_big_endian(FILE *f, byte *buffer, int len) 
-{
-	while (len > 0) {
-		fwrite(buffer, 4, 1, f);
-		buffer = buffer + 4;
-		len  = len - 4;
+	/*
+	 * Memory offsets are word-offsets, for the meaning
+	 * see http://bcm-v4.sipsolutions.net/802.11/ObjectMemory
+	 */
+	switch (insn->op3) {
+	case 0:
+		printf("  ucode version:  %d\n", val);
+		break;
+	case 1:
+		printf("  ucode revision: %d\n", val);
+		break;
+	case 2:
+		printf("  ucode date:     %.4d-%.2d-%.2d\n",
+		       2000 + (val >> 12), (val >> 8) & 0xF, val & 0xFF);
+		break;
+	case 3:
+		printf("  ucode time:     %.2d:%.2d:%.2d\n",
+		       val >> 11, (val >> 5) & 0x3f, val & 0x1f);
+		break;
 	}
 }
 
-static void write_fw(const char *outfilename, uint8_t flags, 
-		     byte *data, int len)
+static void disasm_ucode_1(uint64_t in, struct insn *out)
 {
-	FILE* fw;
-	char outfile[2048];
+	/* xxyyyzzz00oooooX -> ooooo Xxx yyy zzz
+	 * if we swap the upper and lower 32-bits first it becomes easier:
+	 * 00oooooxxxyyyzzz -> ooooo xxx yyy zzz
+	 */
+	in = (in >> 32) | (in << 32);
 
-	snprintf(outfile, sizeof(outfile),
-		 "%s/%s", cmdargs.target_dir, outfilename);
-
-	fw = fopen(outfile, "w");
-	if (!fw) {
-		perror(outfile);
-		exit(1);
-	}
-
-	if (flags & BYTE_ORDER_LITTLE_ENDIAN)
-		write_little_endian(fw, data, len, flags);
-	else if (flags & BYTE_ORDER_BIG_ENDIAN)
-		write_big_endian(fw, data, len);
-	else
-		printf("unknown byteorder...\n");
-
-	fflush(fw);
-	fclose(fw);
+	out->op3	= in & 0xFFF;
+	out->op2	= (in >> 12) & 0xFFF;
+	out->op1	= (in >> 24) & 0xFFF;
+	out->opcode	= (in >> 36) & 0xFFFFF;
+	/* the rest of the in word should be zero */
 }
 
-static void write_iv(uint8_t flags, uint8_t type, byte *data)
+static void disasm_ucode_2(uint64_t in, struct insn *out)
 {
-	FILE* fw;
-	char ivfilename[2048];
-	int ivnum=0, i=0, j;
+	/* xxyyyzzz0000oooX -> ooo Xxx yyy zzz
+	 * if we swap the upper and lower 32-bits first it becomes easier:
+	 * 0000oooxxxyyyzzz -> ooo xxx yyy zzz
+	 */
+	in = (in >> 32) | (in << 32);
 
-	while (ivmap[i].type) {
-		if (type == ivmap[i].type)
-			break;
-		i++;
-	}
-
-	if (!type) 
-		return;
-
-	for (j = 0; j < ivmap[i].number; j++) {
-
-		ivnum = ivmap[i].scheme[j];
-		if (cmdargs.alt_iv) {
-			if (ivmap[i].scheme[j] == 1)
-				ivnum = 0;
-			if (ivmap[i].scheme[j] > ALT_IV_OFFSET)
-				ivnum = ivmap[i].scheme[j] - ALT_IV_OFFSET;
-		} else {
-			if (ivmap[i].scheme[j] > ALT_IV_OFFSET)
-				ivnum = 0;
-		}
-
-		snprintf(ivfilename, sizeof(ivfilename),
-			 "%s/bcm43xx_initval%02d%s.fw",
-			 cmdargs.target_dir,
-			 ivnum,
-			 cmdargs.postfix);
-
-		/* don't extract initval 0 */
-		if ( ivnum == 0 ) {
-			if (flags & OLD_VERSION_STYLE_3_8) {
-				while (1) {
-					if ((data[0]==0xff) &&
-					    (data[1]==0xff) &&
-					    (data[2]==0xff) &&
-					    (data[3]==0xff) &&
-					    (data[4]==0x00) &&
-					    (data[5]==0x00) &&
-					    (data[6]==0x00) &&
-					    (data[7]==0x00))
-						break;
-
-					data = data + 12;
-				}
-			} else {
-				while (1) {
-					if ((data[2]==0x00) &&
-					    (data[3]==0x00) &&
-					    (data[0]==0xff) &&
-					    (data[1]==0xff))
-						break;
-
-					data = data + 8;
-				}
-			}
-		}
-
-		/* skip empty initval files */
-		if (flags & OLD_VERSION_STYLE_3_8) {
-			if ((data[0]==0xff) && (data[1]==0xff) &&
-			    (data[2]==0xff) && (data[3]==0xff) &&
-			    (data[4]==0x00) && (data[5]==0x00) &&
-			    (data[6]==0x00) && (data[7]==0x00)) {
-				data = data + 12;
-				continue;
-			}
-		} else {
-			if ((data[2]==0x00) && (data[3]==0x00) &&
-			    (data[0]==0xff) && (data[1]==0xff)) {
-				data = data + 8;
-				continue;
-			}
-		}
-
-		fw = fopen(ivfilename, "w");
-		if (!fw) {
-			perror(ivfilename);
-			exit(1);
-		}
-
-		printf("extracting bcm43xx_initval%02d%s.fw ...\n", 
-		       ivnum,
-		       cmdargs.postfix);
-
-		while (1) {
-
-			if (flags & OLD_VERSION_STYLE_3_8) {
-
-				if ((data[0]==0xff) &&
-				    (data[1]==0xff) &&
-				    (data[2]==0xff) &&
-				    (data[3]==0xff) &&
-				    (data[4]==0x00) &&
-				    (data[5]==0x00) &&
-				    (data[6]==0x00) &&
-				    (data[7]==0x00)) {
-					data = data + 12;
-					break;
-				}
-
-				if (flags & BYTE_ORDER_LITTLE_ENDIAN)
-					fprintf(fw, "%c%c%c%c%c%c%c%c",
-						/* offset */
-						data[1], data[0],
-						/* size */
-						data[5], data[4],
-						/* value */
-						data[11], data[10], 
-						data[9], data[8]);
-
-				data = data + 12;
-				continue;
-			}
-
-			if ((data[2]==0x00) && (data[3]==0x00)) {
-				if ((data[0]==0x00) && 
-				    (data[1]==0x00) &&
-				    (data[4]==0x00) && 
-				    (data[5]==0x00) &&
-				    (data[6]==0x00) && 
-				    (data[7]==0x00)) {
-					data = data + 8;
-					continue;
-				} else if ((data[0]==0xff) && 
-					   (data[1]==0xff)) {
-					data = data + 8;
-					break;
-				}
-			}
-
-			if (flags & BYTE_ORDER_LITTLE_ENDIAN)
-				fprintf(fw, "%c%c%c%c%c%c%c%c",
-					/* offset */
-					data[1], data[0],
-					/* size */
-					data[3], data[2],
-					/* value */
-					data[7], data[6], data[5], data[4]);
-			else if (flags & BYTE_ORDER_BIG_ENDIAN)
-				fprintf(fw, "%c%c%c%c%c%c%c%c",
-					/* offset */
-					data[0], data[1],
-					/* size */
-					data[2], data[3],
-					/* value */
-					data[4], data[5], data[6], data[7]);
-			else {
-				printf("unknown byteorder...\n");
-				exit(1);
-			}
-
-			data = data + 8;
-		};
-
-		fflush(fw);
-		fclose(fw);
-	}
+	out->op3	= in & 0xFFF;
+	out->op2	= (in >> 12) & 0xFFF;
+	out->op1	= (in >> 24) & 0xFFF;
+	out->opcode	= (in >> 36) & 0xFFF;
+	/* the rest of the in word should be zero */
 }
 
-static byte* read_file(const char* filename)
+static void disasm_ucode_3(uint64_t in, struct insn *out)
 {
-	FILE* file;
-	long len;
-	byte* data;
+	/*
+	 * like 2, but each operand has one bit more; appears
+	 * to use the same instruction set slightly extended
+	 */
+	in = (in >> 32) | (in << 32);
 
-	file = fopen(filename, "rb");
-	if (!file) {
-		perror(filename);
-		exit(1);
-	}
-	if (fseek(file, 0, SEEK_END)) {
-		perror("cannot seek");
-		exit(1);
-	}
-	len = ftell(file);
-	fseek(file, 0, SEEK_SET);
-	data = malloc(len);
-	if (!data) {
-		fputs("out of memory\n", stderr);
-		exit(1);
-	}
-	if (fread(data, 1, len, file) != len) {
-		perror("cannot read");
-		exit(1);
-	}
-	fclose(file);
-	return data;
+	out->op3	= in & 0x1FFF;
+	out->op2	= (in >> 13) & 0x1FFF;
+	out->op1	= (in >> 26) & 0x1FFF;
+	out->opcode	= (in >> 39) & 0xFFF;
+	/* the rest of the in word should be zero */
 }
 
-static void extract_fw(uint8_t fwtype, uint8_t flags, 
-		       uint32_t pos, uint32_t length)
+static void analyse_ucode(int ucode_rev, uint8_t *data, uint32_t len)
 {
-	byte* filedata;
-	char outfile[1024];
+	uint64_t *insns = (uint64_t*)data;
+	struct insn insn;
+	uint32_t i;
 
-	switch (fwtype) {
-	case FIRMWARE_UCODE_2:
-	case FIRMWARE_UCODE_4:
-	case FIRMWARE_UCODE_5:
-	case FIRMWARE_UCODE_11:
-	case FIRMWARE_UCODE_13:
-		snprintf(outfile, sizeof(outfile), "bcm43xx_microcode%i%s.fw", 
-			 fwtype - FIRMWARE_UCODE_OFFSET, cmdargs.postfix);
-		break;
-	case FIRMWARE_PCM_4:
-	case FIRMWARE_PCM_5:
-		snprintf(outfile, sizeof(outfile), "bcm43xx_pcm%i%s.fw", 
-			 fwtype, cmdargs.postfix);
-		break;
-	default:
-		snprintf(outfile, sizeof(outfile), "bcm43xx_unknown.fw");
-	}
-
-	if (length > 0) {
-		printf("extracting %s ...\n", outfile);
-		filedata = read_file(cmdargs.infile);
-		write_fw(outfile, flags, filedata + pos, length);
-		free(filedata);
-	} else {
-		printf("WARNING! This binary driver doesn't contain \"%s\".\n",
-		       outfile);
-
-		switch (fwtype) {
-		case FIRMWARE_UCODE_2:
-		case FIRMWARE_UCODE_4:
-			printf("WARNING! Therefore bcm43xx with 0x812 cores "
-			       "rev 0x%x will not work.\n", 
-			       fwtype - FIRMWARE_UCODE_OFFSET);
+	for (i=0; i<len/sizeof(*insns); i++) {
+		switch (ucode_rev) {
+		case 1:
+			disasm_ucode_1(insns[i], &insn);
+			print_ucode_version(&insn);
 			break;
-		case FIRMWARE_UCODE_5:
-			printf("WARNING! Therefore bcm43xx with cores 0x812 "
-			       "rev 0x5 up to 0xa will not work.\n");
+		case 2:
+			disasm_ucode_2(insns[i], &insn);
+			print_ucode_version(&insn);
 			break;
-		case FIRMWARE_UCODE_11:
-			printf("WARNING! Therefore bcm43xx with cores 0x812 "
-			       "rev 0xb or 0xc will not work.\n");
+		case 3:
+			disasm_ucode_3(insns[i], &insn);
+			print_ucode_version(&insn);
 			break;
-		case FIRMWARE_UCODE_13:
-			printf("WARNING! Therefore bcm43xx with cores 0x812 "
-			       "rev 0xd or greater will not work.\n");
-			break;
-		case FIRMWARE_PCM_4:
-			printf("WARNING! Therefore bcm43xx with cores 0x812 "
-			       "rev 0x%x or smaller will not work.\n", 
-			       fwtype);
-			break;
-		case FIRMWARE_PCM_5:
-			printf("WARNING! Therefore bcm43xx with cores 0x812 "
-			       "rev 0x%x or greater will not work.\n", 
-			       fwtype);
-			break;
 		}
 	}
 }
 
-static void extract_iv(uint8_t flags, uint32_t pos, uint8_t type)
+static void swap_endianness_ucode(uint8_t *buf, uint32_t len)
 {
-	byte* filedata;
+	uint32_t *buf32 = (uint32_t*)buf;
+	uint32_t i;
 
-	if (pos > 0) {
-		filedata = read_file(cmdargs.infile);
-		write_iv(flags, type, filedata + pos);
-		free(filedata);
-	}
+	for (i=0; i<len/4; i++)
+		buf32[i] = bswap_32(buf32[i]);
 }
 
-static void print_ucode_version(uint32_t fwdata)
+#define swap_endianness_pcm swap_endianness_ucode
+
+static void swap_endianness_iv(uint8_t *buf, uint32_t len)
 {
-	switch (fwdata & 0xfff) {
-	case 0x000:
-		printf("  revision   :  0x%.4x\n", 
-		       ((fwdata >> 12) & 0xff) +
-		       (((fwdata >> 16) & 0xff00)));
-		break;
-	case 0x001:
-		printf("  patchlevel :  0x%.4x\n", 
-		       ((fwdata >> 12) & 0xff) +
-		       (((fwdata >> 16) & 0xff00)));
-		break;
-	case 0x002:
-		printf("  date       :  20%.2i-%.2i-%.2i\n", 
-		       (fwdata >> 28) & 0xf,
-		       (fwdata >> 24) & 0xf,
-		       (fwdata >> 12) & 0xff);
-		break;
-	case 0x003:
-		printf("  time       :  %.2i:%.2i:%.2i\n", 
-		       fwdata >> 27,
-		       ((fwdata >> 17) & 0x7) + ((fwdata >> 21) & 0x38),
-		       (fwdata >> 12) & 0x1f);
-		break;
+	struct iv *iv = (struct iv*)buf;
+	uint32_t i;
+
+	for (i=0; i<len/sizeof(*iv); i++) {
+		iv[i].reg = bswap_16(iv[i].reg);
+		iv[i].size = bswap_16(iv[i].size);
+		iv[i].val = bswap_32(iv[i].val);
 	}
 }
 
-static void analyse_ucode(int type, const struct file * f, byte * data)
+static void write_file(const char *name, uint8_t *buf, uint32_t len,
+		       uint32_t flags)
 {
-	uint32_t fwdata = 0;
+	FILE *f;
+	char nbuf[4096];
+	const char *dir;
+	int r;
 
-	if (f->flags & OLD_VERSION_STYLE_3_8) {
-		if (data[12]==0x0c && data[13]==0xe0 &&
-		    data[14]==0x2d && data[15]==0x00) {
-			fwdata = data[0] + (data[1]<<8) + 
-				(data[2]<<16) + (data[3]<<24);
-			print_ucode_version(fwdata);
-		}
-		return;
+	if (flags & FW_FLAG_V4)
+		dir = "b43";
+	else
+		dir = "b43legacy";
+
+	r = snprintf(nbuf, sizeof(nbuf),
+		     "%s/%s", cmdargs.target_dir, dir);
+	if (r >= sizeof(nbuf)) {
+		fprintf(stderr, "name too long");
+		exit(2);
 	}
 
-	if (f->flags & OLD_VERSION_STYLE_3_10) {
-		if (data[8]==0x0c && data[9]==0xe0 &&
-		    data[10]==0x2d && data[11]==0x00) {
-			fwdata = data[0] + (data[1]<<8) + 
-				(data[2]<<16) + (data[3]<<24);
-			print_ucode_version(fwdata);
-		}
-		return;
+	r = mkdir(nbuf, 0770);
+	if (r && errno != EEXIST) {
+		perror("failed to create output directory");
+		exit(2);
 	}
 
-	if (f->flags & BYTE_ORDER_LITTLE_ENDIAN) {
-		if ((type==FIRMWARE_UCODE_2) || (type==FIRMWARE_UCODE_4)) {
-			if (data[4]==0x0c && data[5]==0xe0 &&
-			    data[6]==0x2d && data[7]==0x00) {
-				fwdata = data[0] + (data[1]<<8) + 
-					(data[2]<<16) + (data[3]<<24);
-				print_ucode_version(fwdata);
-			}
-		} else {
-			if (data[4]==0x8c && data[5]==0x37 &&
-			    data[6]==0x00 && data[7]==0x00) {
-				fwdata = data[0] + (data[1]<<8) + 
-					(data[2]<<16) + (data[3]<<24);
-				print_ucode_version(fwdata);
-			}
-		}
-	} else if (f->flags & BYTE_ORDER_BIG_ENDIAN) {
-		if ((type==FIRMWARE_UCODE_2) || (type==FIRMWARE_UCODE_4)) {
-			if (data[7]==0x0c && data[6]==0xe0 &&
-			    data[5]==0x2d && data[4]==0x00) {
-				fwdata = data[3] + (data[2]<<8) + 
-					(data[1]<<16) + (data[0]<<24);
-				print_ucode_version(fwdata);
-			}
-		} else {
-			if (data[7]==0x8c && data[6]==0x37 &&
-			    data[5]==0x00 && data[4]==0x00) {
-				fwdata = data[3] + (data[2]<<8) + 
-					(data[1]<<16) + (data[0]<<24);
-				print_ucode_version(fwdata);
-			}
-		}
+	r = snprintf(nbuf, sizeof(nbuf),
+		     "%s/%s/%s", cmdargs.target_dir, dir, name);
+	if (r >= sizeof(nbuf)) {
+		fprintf(stderr, "name too long");
+		exit(2);
 	}
+	f = fopen(nbuf, "w");
+	if (!f) {
+		perror("failed to open file");
+		exit(2);
+	}
+	fwrite(buf, 1, len, f);
+	fclose(f);
 }
 
-static void get_ucode_rev(int type, const struct file * f, int pos, int len)
+static void extract_or_identify(FILE *f, const struct extract *extract,
+				uint32_t flags)
 {
-	byte* data;
-	int len_count = 0;
+	uint8_t *buf;
+	int ucode_rev = 0;
 
-	if (len == 0) return;
-	printf("  microcode  :  %i\n", type - FIRMWARE_UCODE_OFFSET);
+	if (fseek(f, extract->offset, SEEK_SET)) {
+		perror("failed to seek on file");
+		exit(2);
+	}
 
-	data = read_file(cmdargs.infile) + pos;
-	while (len_count < len) {
-		analyse_ucode(type, f, data);
-		len_count = len_count + 8;
-		data = data + 8;
-		if (f->flags & OLD_VERSION_STYLE_3_8)
-			data = data + 16;
-		if (f->flags & OLD_VERSION_STYLE_3_10)
-			data = data + 8;
+	buf = malloc(extract->length);
+	if (fread(buf, 1, extract->length, f) != extract->length) {
+		perror("failed to read complete data");
+		exit(3);
 	}
 
-	printf("\n");
-}
+	switch (extract->type) {
+	case EXT_UCODE_3:
+		ucode_rev += 1;
+	case EXT_UCODE_2:
+		ucode_rev += 1;
+	case EXT_UCODE_1:
+		ucode_rev += 1;
+		if (flags & FW_FLAG_LE)
+			swap_endianness_ucode(buf, extract->length);
+		analyse_ucode(ucode_rev, buf, extract->length);
+		break;
+	case EXT_PCM:
+		if (flags & FW_FLAG_LE)
+			swap_endianness_pcm(buf, extract->length);
+		break;
+	case EXT_IV:
+		if (flags & FW_FLAG_LE)
+			swap_endianness_iv(buf, extract->length);
+		break;
+	default:
+		exit(255);
+	}
 
-static void get_ucode_info(const struct file * f)
-{
-	get_ucode_rev(FIRMWARE_UCODE_2, f, 
-		      f->uc2_pos, 
-		      f->uc2_length);
-	get_ucode_rev(FIRMWARE_UCODE_4, f, 
-		      f->uc4_pos, 
-		      f->uc4_length);
-	get_ucode_rev(FIRMWARE_UCODE_5, f, 
-		      f->uc5_pos, 
-		      f->uc5_length);
-	get_ucode_rev(FIRMWARE_UCODE_11, f, 
-		      f->uc11_pos, 
-		      f->uc11_length);
-	get_ucode_rev(FIRMWARE_UCODE_13, f, 
-		      f->uc13_pos, 
-		      f->uc13_length);
+	if (!cmdargs.identify_only)
+		write_file(extract->name, buf, extract->length, flags);
+
+	free(buf);
 }
 
 static void print_banner(void)
 {
-	printf("bcm43xx-fwcutter version " FWCUTTER_VERSION "\n");
+	printf("b43-fwcutter version " FWCUTTER_VERSION "\n");
 }
 
 static void print_file(const struct file *file)
@@ -492,8 +265,14 @@
 	char filename[30];
 	char shortname[30];
 
+	if (file->flags & FW_FLAG_V4)
+		printf("b43\t\t");
+	else
+		printf("b43legacy\t");
+
 	if (strlen(file->name) > 20) {
-		strncpy(shortname, file->name, 18);
+		strncpy(shortname, file->name, 20);
+		shortname[20] = '\0';
 		snprintf(filename, sizeof(filename), "%s..", shortname);
 	} else
 		strcpy (filename, file->name);
@@ -502,46 +281,34 @@
 	if (strlen(filename) < 8) printf("\t");
 	if (strlen(filename) < 16) printf("\t");
 
-	printf("%s\t", file->version);
-	if (strlen(file->version) < 8) printf("\t");
-	if (strlen(file->version) < 16) printf("\t");
+	printf("%s\t", file->ucode_version);
+	if (strlen(file->ucode_version) < 8) printf("\t");
 
 	printf("%s\n", file->md5);
 }
 
 static void print_supported_files(void)
 {
-	int printout_unsupported = 0;
 	int i;
 
 	print_banner();
 	printf("\nExtracting firmware is possible "
 	       "from these binary driver files:\n\n");
-	printf("<filename>\t\t"
-	       "<version>\t\t"
+	printf("<driver>\t"
+	       "<filename>\t\t"
+	       "<microcode>\t"
 	       "<MD5 checksum>\n\n");
-	for (i = 0; i < FILES; i++) {
-		if (files[i].flags & DRIVER_UNSUPPORTED) {
-			printout_unsupported = 1;
-			continue;
-		}
-		print_file(&files[i]);
-	}
-	if (printout_unsupported == 0) return;
-
-	printf("\n\nExtracting firmware is IMPOSSIBLE "
-	       "from these binary driver files:\n\n");
-	printf("<filename>\t\t"
-	       "<version>\t\t"
-	       "<MD5 checksum>\n\n");
-	for (i = 0; i < FILES; i++) {
-		if (!(files[i].flags & DRIVER_UNSUPPORTED))
-			continue;
-		print_file(&files[i]);
-	}
+	/* print for legacy driver first */
+	for (i = 0; i < FILES; i++)
+		if (!(files[i].flags & FW_FLAG_V4))
+			print_file(&files[i]);
+	for (i = 0; i < FILES; i++)
+		if (files[i].flags & FW_FLAG_V4)
+			print_file(&files[i]);
+	printf("\n");
 }
 
-static const struct file * find_file(FILE *fd)
+static const struct file *find_file(FILE *fd)
 {
 	unsigned char buffer[16384], signature[16];
 	struct MD5Context md5c;
@@ -563,65 +330,20 @@
 
 	for (i = 0; i < FILES; ++i) {
 		if (strcasecmp(md5sig, files[i].md5) == 0) {
-			if (files[i].flags & DRIVER_UNSUPPORTED) {
-				printf("Extracting firmware from this file "
-				       "is IMPOSSIBLE. (e.g. too old/new)\n");
-				return 0;
-			}
-			if (files[i].flags & V4_FIRMWARE) {
-				printf("*** WARNING ***\n"
-				       "This file contains new version4 \n"
-				       "firmware. v4 firmware is _not_ supported by \n"
-				       "the driver in mainline kernels. For v4 firmware \n"
-				       "you need latest bcm43xx development version \n"
-				       "(wireless-dev kernel tree). If you don't know what \n"
-				       "this warning is about, use a 3.xx.xx.xx driver version \n"
-				       "instead to extract the firmware.\n");
-			}
-			printf("\n  filename   :  %s\n", files[i].name);
-			printf("  version    :  %s\n", files[i].version);
+			printf("This file is recognised as:\n");
+			printf("  filename   :  %s\n", files[i].name);
+			printf("  version    :  %s\n", files[i].ucode_version);
 			printf("  MD5        :  %s\n", files[i].md5);
-			printf("  microcodes :  ");
-			if (files[i].uc2_length > 0) printf("2 ");
-			if (files[i].uc4_length > 0) printf("4 ");
-			if (files[i].uc5_length > 0) printf("5 ");
-			if (files[i].uc11_length > 0) printf("11 ");
-			if (files[i].uc13_length > 0) printf("13 ");
-			printf("\n  pcms       :  ");
-			if (files[i].pcm4_length > 0) printf("4 ");
-			if (files[i].pcm5_length > 0) printf("5 ");
-			printf("\n\n");
-			if (files[i].flags & MISSING_INITVAL_80211_A) {
-				printf("WARNING! This firmware doesn't "
-				       "include support for 802.11a cards.\n");
-				printf("WARNING! Use this firmware only for "
-				       "802.11b/g cards.\n\n");
-			}
-			return &(files[i]);
+			return &files[i];
 		}
 	}
 	printf("Sorry, the input file is either wrong or "
-	       "not supported by bcm43xx-fwcutter.\n");
+	       "not supported by b43-fwcutter.\n");
 	printf("This file has an unknown MD5sum %s.\n", md5sig);
 
-	return 0;
+	return NULL;
 }
 
-static void get_endianess(void)
-{
-	const unsigned char x[] = { 0xde, 0xad, 0xbe, 0xef, };
-	const uint32_t *p = (uint32_t *)x;
-
-	if (*p == 0xdeadbeef) {
-		big_endian_cpu = 1;
-	} else if (*p == 0xefbeadde) {
-		big_endian_cpu = 0;
-	} else {
-		printf("Confused: NUXI endian machine??\n");
-		exit(-1);
-	}
-}
-
 static void print_usage(int argc, char *argv[])
 {
 	print_banner();
@@ -632,12 +354,8 @@
 	       "Only identify the driver file (don't extract)\n");
 	printf("  -w|--target-dir DIR   "
 	       "Extract and write firmware to DIR\n");
-	printf("  -a|--alt-iv           "
-	       "Extract alternative initvals (only 3.10.x.x)\n");
-	printf("  -p|--postfix \".FOO\"   "
-	       "Postfix for firmware filenames (.FOO.fw)\n");
 	printf("  -v|--version          "
-	       "Print bcm43xx-fwcutter version\n");
+	       "Print b43-fwcutter version\n");
 	printf("  -h|--help             "
 	       "Print this help\n");
 	printf("\nExample: %s bcmwl5.sys\n"
@@ -749,20 +467,6 @@
 		} else if (res == ARG_ERROR)
 			goto out;
 
-		res = cmp_arg(argv, &i, "--postfix", "-p", &param);
-		if (res == ARG_MATCH) {
-			cmdargs.postfix = param;
-			continue;
-		} else if (res == ARG_ERROR)
-			goto out;
-
-		res = cmp_arg(argv, &i, "--alt-iv", "-a", 0);
-		if (res == ARG_MATCH) {
-			cmdargs.alt_iv = 1;
-			continue;
-		} else if (res == ARG_ERROR)
-			goto out;
-
 		cmdargs.infile = argv[i];
 		break;
 	}
@@ -781,12 +485,11 @@
 {
 	FILE *fd;
 	const struct file *file;
+	const struct extract *extract;
 	int err;
+	const char *dir;
 
-	get_endianess();
-
 	cmdargs.target_dir = ".";
-	cmdargs.postfix = "";
 	err = parse_args(argc, argv);
 	if (err == 1)
 		return 0;
@@ -804,53 +507,20 @@
 	if (!file)
 		goto out_close;
 
-	get_ucode_info(file);
+	if (file->flags & FW_FLAG_V4)
+		dir = "b43";
+	else
+		dir = "b43legacy";
 
-	if (cmdargs.identify_only) {
-		err = 0;
-		goto out_close;
+	extract = file->extract;
+	while (extract->name) {
+		printf("%s %s/%s\n",
+		       cmdargs.identify_only ? "Contains" : "Extracting",
+		       dir, extract->name);
+		extract_or_identify(fd, extract, file->flags);
+		extract++;
 	}
 
-	if (file->uc2_length > 0)
-		extract_fw(FIRMWARE_UCODE_2, 
-			   file->flags, 
-			   file->uc2_pos, 
-			   file->uc2_length);
-	if (file->uc4_length > 0)
-		extract_fw(FIRMWARE_UCODE_4, 
-			   file->flags, 
-			   file->uc4_pos, 
-			   file->uc4_length);
-	if (file->uc5_length > 0)
-		extract_fw(FIRMWARE_UCODE_5, 
-			   file->flags, 
-			   file->uc5_pos, 
-			   file->uc5_length);
-	if (file->uc11_length > 0)
-		extract_fw(FIRMWARE_UCODE_11, 
-			   file->flags, 
-			   file->uc11_pos, 
-			   file->uc11_length);
-	if (file->uc13_length > 0)
-		extract_fw(FIRMWARE_UCODE_13, 
-			   file->flags, 
-			   file->uc13_pos, 
-			   file->uc13_length);
-	if (file->pcm4_length > 0)
-		extract_fw(FIRMWARE_PCM_4, 
-			   file->flags, 
-			   file->pcm4_pos, 
-			   file->pcm4_length);
-	if (file->pcm5_length > 0)
-		extract_fw(FIRMWARE_PCM_5, 
-			   file->flags, 
-			   file->pcm5_pos, 
-			   file->pcm5_length);
-	if (file->iv_map > 0)
-		extract_iv(file->flags, 
-			   file->iv_pos, 
-			   file->iv_map);
-
 	err = 0;
 out_close:
 	fclose(fd);

Modified: trunk/fwcutter/fwcutter.h
===================================================================
--- trunk/fwcutter/fwcutter.h	2007-08-08 13:59:04 UTC (rev 1227)
+++ trunk/fwcutter/fwcutter.h	2007-08-15 17:26:29 UTC (rev 1228)
@@ -1,33 +1,9 @@
 #ifndef _FWCUTTER_H_
 #define _FWCUTTER_H_
 
-#include <stdlib.h>
-#include <ctype.h>
-#include <string.h>
-#include <stdio.h>
+#define FW_FLAG_LE	0x01	/* little endian? convert */
+#define FW_FLAG_V4	0x02	/* b43 vs. b43legacy */
 
-#define DRIVER_UNSUPPORTED       0x01  /* no support for this driver file */
-#define BYTE_ORDER_BIG_ENDIAN    0x02  /* ppc, bcm6345/6348 driver files */
-#define BYTE_ORDER_LITTLE_ENDIAN 0x04  /* x86, mips driver files */
-#define MISSING_INITVAL_80211_A  0x08  /* empty initvals 3,7,9,10 */
-#define OLD_VERSION_STYLE_3_8    0x10  /* 3.10.8.x drivers differ */
-#define OLD_VERSION_STYLE_3_10   0x20  /* 3.10.3x.x drivers differ */
-#define V4_FIRMWARE              0x40  /* This marks version-4 firmwares and will emit a warning */
-
-#define FIRMWARE_UCODE_OFFSET    100
-#define FIRMWARE_UNDEFINED       0
-#define FIRMWARE_PCM_4           4
-#define FIRMWARE_PCM_5           5
-#define FIRMWARE_UCODE_2         (FIRMWARE_UCODE_OFFSET + 2)
-#define FIRMWARE_UCODE_4         (FIRMWARE_UCODE_OFFSET + 4)
-#define FIRMWARE_UCODE_5         (FIRMWARE_UCODE_OFFSET + 5)
-#define FIRMWARE_UCODE_11        (FIRMWARE_UCODE_OFFSET + 11)
-#define FIRMWARE_UCODE_13        (FIRMWARE_UCODE_OFFSET + 13)
-
-/* alternative initvals */
-#define ALT_IV_OFFSET            100
-#define ALT_IV_01                (ALT_IV_OFFSET + 1)
-
 #define fwcutter_stringify_1(x)	#x
 #define fwcutter_stringify(x)	fwcutter_stringify_1(x)
 #define FWCUTTER_VERSION	fwcutter_stringify(FWCUTTER_VERSION_)
@@ -36,151 +12,46 @@
 #define ARG_NOMATCH	1
 #define ARG_ERROR	-1
 
-typedef unsigned char byte;
-
-enum { /* initvals numbering schemes */
-	INITVALS_MAP_UNKNOWN = 0,
-	INITVALS_MAP_V3_8_X,
-	INITVALS_MAP_V3_10_8,
-	INITVALS_MAP_V3_10_3X,
-	INITVALS_MAP_V3_10_53_6,
-	INITVALS_MAP_V3_WITHOUT_IV8,
-	INITVALS_MAP_V3_DEFAULT,
-	INITVALS_MAP_V3_REVERSE_ORDER,
-	INITVALS_MAP_V3_UP_TO_REV11,
-	INITVALS_MAP_V3_UP_TO_REV11_REVERSE_ORDER,
-	INITVALS_MAP_V4_UP_TO_REV11,
-	INITVALS_MAP_V4_UP_TO_REV13,
-	INITVALS_MAP_V4_80_46,
-	INITVALS_MAP_V4_80_46_REVERSE_ORDER,
-	INITVALS_MAP_V4_102,
-};
-
 struct cmdline_args {
 	const char *infile;
-	const char *postfix;
 	const char *target_dir;
-	int alt_iv;
 	int identify_only;
 };
 
-struct file {
-	const char *name;
-	const char *version;
-	const char *md5;
-	const uint8_t flags;
-	const uint32_t iv_pos;
-	const uint8_t iv_map;
-	const uint32_t uc2_pos;
-	const uint32_t uc2_length;
-	const uint32_t uc4_pos;
-	const uint32_t uc4_length;
-	const uint32_t uc5_pos;
-	const uint32_t uc5_length;
-	const uint32_t uc11_pos;
-	const uint32_t uc11_length;
-	const uint32_t uc13_pos;
-	const uint32_t uc13_length;
-	const uint32_t pcm4_pos;
-	const uint32_t pcm4_length;
-	const uint32_t pcm5_pos;
-	const uint32_t pcm5_length;
+struct insn {
+	uint32_t opcode;
+	uint16_t op1, op2, op3;
 };
 
-struct initval_mapdef {
-	const uint8_t type;
-	const uint8_t number;
-	const uint8_t scheme[30];
-	};
+struct iv {
+	uint16_t reg, size;
+	uint32_t val;
+} __attribute__((__packed__));
 
-static struct initval_mapdef ivmap[] =
-{
-	/* core rev 0x2, 0x4 initval numbers: 1, 2, 3, 4 */
-	/* core rev 0x5 initval numbers: 5, 6, 7, 8, 9, 10 */
-	/* core rev 0x9 initval numbers: 11, 12, 13, 14, 15, 16 */
-	/* core rev 0xb initval numbers: 17, 18 */
-	/* core rev 0xd initval numbers: 19, 20 */
+enum extract_type {
+	EXT_UNDEFINED, /* error catcher  */
+	EXT_UCODE_1,   /* rev  <= 4 ucode */
+	EXT_UCODE_2,   /* rev 5..14 ucode */
+	EXT_UCODE_3,   /* rev >= 15 ucode */
+	EXT_PCM,       /* "pcm" values   */
+	EXT_IV,        /* initial values */
+};
 
-	/* version 3.8.27.0, 3.8.28.0, 3.8.37.0 */
-	{ INITVALS_MAP_V3_8_X, 1, 
-	  { 1 } 
-	},
+struct extract {
+	const char *name;
+	const uint32_t offset;
+	const uint32_t length;
+	const enum extract_type type;
+};
 
-	/* version 3.10.8.0 */
-	{ INITVALS_MAP_V3_10_8, 8,
-	  /* This driver has two variations of initval number 1 inside. */
-	  { 3, 0, 0, 1, 0, 0, 0, ALT_IV_01 }
-	},
+#define EXTRACT_LIST_END { .name = NULL, }
 
-	/* version 3.10.36.0, 3.10.39.x, 3.10.53.0 */
-	{ INITVALS_MAP_V3_10_3X, 3,
-	  /* This driver has two variations of initval number 1 inside. */
-	  /* Baseband attenuation at MMIO 0x3e6 is the difference. */
-	  { 3, ALT_IV_01, 1 }
-	},
-
-	/* version 3.10.53.6 */
-	{ INITVALS_MAP_V3_10_53_6, 4,
-	  /* This driver has two variations of initval number 1 inside. */
-	  /* Baseband attenuation at MMIO 0x3e6 is the difference. */
-	  { 3, 0, 1, ALT_IV_01 }
-	},
-
-	/* initval number 8 is missing in 3.20 and 3.30 */
-	{ INITVALS_MAP_V3_WITHOUT_IV8, 9,
-	  { 1, 2, 3, 4, 5, 6, 7, 9, 10 }
-	},
-
-	/* most 3.x versions since 3.40 */
-	{ INITVALS_MAP_V3_DEFAULT, 10,
-	  { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
-	},
-
-	/* Apple-x86 and Linux-BCM6345/6348 drivers are reverse ordered */ 
-	{ INITVALS_MAP_V3_REVERSE_ORDER, 10,
-	  { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
-	},
-
-	/* version 3.130 */
-	{ INITVALS_MAP_V3_UP_TO_REV11, 12,
-	  { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 17, 18 }
-	},
-
-	/* Linux-BCM96348 driver 3.131 is reverse ordered */ 
-	{ INITVALS_MAP_V3_UP_TO_REV11_REVERSE_ORDER, 12,
-	  { 18, 17, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
-	},
-
-	/* 4.x versions up to 4.40 */
-	{ INITVALS_MAP_V4_UP_TO_REV11, 18,
-	  { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
-	},
-
-	/* version 4.80 and newer */
-	{ INITVALS_MAP_V4_UP_TO_REV13, 20,
-	  { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
-	    19, 20 }
-	},
-
-	/* version 4.80.46 */
-	{ INITVALS_MAP_V4_80_46, 25,
-	  { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
-	    19, 20, 21, 22, 23, 24, 25 }
-	},
-
-	/* Apple driver version 4.80.46 */
-	{ INITVALS_MAP_V4_80_46_REVERSE_ORDER, 25,
-	  { 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10,
-	    9, 8, 7, 6, 5, 4, 3, 2, 1 }
-	},
-
-        /* version 4.102. , Windows Vista 64bit */
-        { INITVALS_MAP_V4_102, 25,
-          { 1, 2, 4, 3, 5, 0, 6, 7, 0, 8, 0, 9, 10, 0, 0, 0, 17, 18,
-            19, 20, 21, 22, 23, 24, 25 }
-        },
-
-	{ 0 },
+struct file {
+	const char *name;
+	const char *ucode_version;
+	const char *md5;
+	const struct extract *extract;
+	const uint32_t flags;
 };
 
 #endif /* _FWCUTTER_H_ */

Modified: trunk/fwcutter/fwcutter_list.h
===================================================================
--- trunk/fwcutter/fwcutter_list.h	2007-08-08 13:59:04 UTC (rev 1227)
+++ trunk/fwcutter/fwcutter_list.h	2007-08-15 17:26:29 UTC (rev 1228)
@@ -1,1986 +1,155 @@
+
+/* file member lists */
+struct extract _e08665c5c5b66beb9c3b2dd54aa80cb3[] =
+{
+	{ .name = "d11ucode2", .offset = 0x59ca0, .length = 0x3fe0, .type = EXT_UCODE_1, },
+	{ .name = "d11ucode4", .offset = 0x5dc84, .length = 0x4e78, .type = EXT_UCODE_1, },
+	{ .name = "d11ucode5", .offset = 0x62b00, .length = 0x5700, .type = EXT_UCODE_2, },
+	{ .name = "d11ucode11", .offset = 0x68204, .length = 0x54a8, .type = EXT_UCODE_2, },
+	{ .name = "d11pcm4", .offset = 0x6d6b0, .length = 0x520, .type = EXT_PCM, },
+	{ .name = "d11pcm5", .offset = 0x6dbd4, .length = 0x520, .type = EXT_PCM, },
+	{ .name = "d11a0g0bsinitvals2", .offset = 0x54ad0 + 0x30d8, .length = 0x18 - 8, .type = EXT_IV, },
+	{ .name = "d11b0g0bsinitvals5", .offset = 0x54ad0 + 0x3ae0, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g0initvals5", .offset = 0x54ad0 + 0x3be0, .length = 0x9f0 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g1bsinitvals5", .offset = 0x54ad0 + 0x50c0, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g0initvals2", .offset = 0x54ad0 + 0x2320, .length = 0xdb8 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g1initvals5", .offset = 0x54ad0 + 0x45d0, .length = 0x9f0 - 8, .type = EXT_IV, },
+	{ .name = "d11b0g0bsinitvals2", .offset = 0x54ad0 + 0x2308, .length = 0x18 - 8, .type = EXT_IV, },
+	{ .name = "d11b0g0initvals5", .offset = 0x54ad0 + 0x30f0, .length = 0x9f0 - 8, .type = EXT_IV, },
+	{ .name = "d11b0g0initvals2", .offset = 0x54ad0 + 0x1550, .length = 0xdb8 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g0bsinitvals5", .offset = 0x54ad0 + 0x4fc0, .length = 0x100 - 8, .type = EXT_IV, },
+	EXTRACT_LIST_END
+};
+
+struct extract _9207bc565c2fc9fa1591f6c7911d3fc0[] =
+{
+	{ .name = "d11ucode4",  .offset = 0x66220 +  0x7ad8, .length = 0x4e68, .type = EXT_UCODE_1, },
+	{ .name = "d11ucode5",  .offset = 0x66220 +  0xc944, .length = 0x5640, .type = EXT_UCODE_2, },
+	{ .name = "d11ucode11", .offset = 0x66220 + 0x11f90, .length = 0x67e0, .type = EXT_UCODE_2, },
+	{ .name = "d11ucode13", .offset = 0x66220 + 0x18774, .length = 0x5f60, .type = EXT_UCODE_2, },
+	{ .name = "d11pcm4", .offset = 0x66220 + 0x1e6d8, .length = 0x520, .type = EXT_PCM, },
+	{ .name = "d11pcm5", .offset = 0x66220 + 0x1ebfc, .length = 0x520, .type = EXT_PCM, },
+	{ .name = "d11b0g0initvals4",	.offset = 0x66220 + 0x1710, .length = 0xe90 - 8, .type = EXT_IV, },
+	{ .name = "d11b0g0bsinitvals4",	.offset = 0x66220 + 0x25a0, .length = 0x18 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g0initvals4",	.offset = 0x66220 + 0x25b8, .length = 0xe90 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g0bsinitvals4",	.offset = 0x66220 + 0x3448, .length = 0x18 - 8, .type = EXT_IV, },
+	{ .name = "d11b0g0initvals5",	.offset = 0x66220 + 0x3460, .length = 0xa28 - 8, .type = EXT_IV, },
+	{ .name = "d11b0g0bsinitvals5",	.offset = 0x66220 + 0x3e88, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g0initvals5",	.offset = 0x66220 + 0x3f88, .length = 0xa28 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g1initvals5",	.offset = 0x66220 + 0x49b0, .length = 0xa28 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g0bsinitvals5",	.offset = 0x66220 + 0x53d8, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g1bsinitvals5",	.offset = 0x66220 + 0x54d8, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "d11lp0initvals13",	.offset = 0x66220 + 0x5620, .length = 0xb38 - 8, .type = EXT_IV, },
+	{ .name = "d11lp0bsinitvals13",	.offset = 0x66220 + 0x6158, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "d11b0g0initvals13",	.offset = 0x66220 + 0x6258, .length = 0xb40 - 8, .type = EXT_IV, },
+	{ .name = "d11b0g0bsinitvals13",.offset = 0x66220 + 0x6d98, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g1initvals13",	.offset = 0x66220 + 0x6e98, .length = 0xb40 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g1bsinitvals13",.offset = 0x66220 + 0x79d8, .length = 0x100 - 8, .type = EXT_IV, },
+	EXTRACT_LIST_END
+};
+
+struct extract _722e2e0d8cc04b8f118bb5afe6829ff9[] =
+{
+	{ .name = "d11ucode4",  .offset = 0x76a10 +  0x8960, .length = 0x4e68, .type = EXT_UCODE_1, },
+	{ .name = "d11ucode5",  .offset = 0x76a10 +  0xd7cc, .length = 0x5640, .type = EXT_UCODE_2, },
+	{ .name = "d11ucode11", .offset = 0x76a10 + 0x12e18, .length = 0x67e0, .type = EXT_UCODE_2, },
+	{ .name = "d11ucode13", .offset = 0x76a10 + 0x195fc, .length = 0x5f60, .type = EXT_UCODE_2, },
+	{ .name = "d11pcm4", .offset = 0x76a10 + 0x1f560, .length = 0x520, .type = EXT_PCM, },
+	{ .name = "d11pcm5", .offset = 0x76a10 + 0x1fa84, .length = 0x520, .type = EXT_PCM, },
+	{ .name = "d11b0g0initvals4",	.offset = 0x76a10 + 0x1840, .length = 0xe90 - 8, .type = EXT_IV, },
+	{ .name = "d11b0g0bsinitvals4",	.offset = 0x76a10 + 0x26d0, .length = 0x18 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g0initvals4",	.offset = 0x76a10 + 0x26e8, .length = 0xe90 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g0bsinitvals4",	.offset = 0x76a10 + 0x3578, .length = 0x18 - 8, .type = EXT_IV, },
+	{ .name = "d11b0g0initvals5",	.offset = 0x76a10 + 0x3590, .length = 0xa28 - 8, .type = EXT_IV, },
+	{ .name = "d11b0g0bsinitvals5",	.offset = 0x76a10 + 0x3fb8, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g0initvals5",	.offset = 0x76a10 + 0x40b8, .length = 0xa28 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g1initvals5",	.offset = 0x76a10 + 0x4ae0, .length = 0xa28 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g0bsinitvals5",	.offset = 0x76a10 + 0x5508, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g1bsinitvals5",	.offset = 0x76a10 + 0x5608, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "d11lp0initvals13",	.offset = 0x76a10 + 0x64a8, .length = 0xb38 - 8, .type = EXT_IV, },
+	{ .name = "d11lp0bsinitvals13",	.offset = 0x76a10 + 0x6fe0, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "d11b0g0initvals13",	.offset = 0x76a10 + 0x70e0, .length = 0xb40 - 8, .type = EXT_IV, },
+	{ .name = "d11b0g0bsinitvals13",.offset = 0x76a10 + 0x7c20, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g1initvals13",	.offset = 0x76a10 + 0x7d20, .length = 0xb40 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g1bsinitvals13",.offset = 0x76a10 + 0x8860, .length = 0x100 - 8, .type = EXT_IV, },
+	EXTRACT_LIST_END
+};
+
+struct extract _1e4763b4cb8cfbaae43e5c6d3d6b2ae7[] =
+{
+	{ .name = "d11ucode5",  .offset = 0x71c80 +  0xacd0, .length = 0x5768, .type = EXT_UCODE_2, },
+	{ .name = "d11ucode9",  .offset = 0x71c80 + 0x1043c, .length = 0x6240, .type = EXT_UCODE_2, },
+	{ .name = "d11ucode11", .offset = 0x71c80 + 0x16680, .length = 0x74a0, .type = EXT_UCODE_2, },
+	{ .name = "d11ucode13", .offset = 0x71c80 + 0x1db24, .length = 0x7de0, .type = EXT_UCODE_2, },
+	{ .name = "d11ucode14", .offset = 0x71c80 + 0x25908, .length = 0x7a90, .type = EXT_UCODE_2, },
+	{ .name = "d11ucode15", .offset = 0x71c80 + 0x2d39c, .length = 0x7710, .type = EXT_UCODE_3, },
+	{ .name = "d11pcm5", .offset = 0x71c80 + 0x34ab0, .length = 0x520, .type = EXT_PCM, },
+	{ .name = "d11b0g0initvals5",	.offset = 0x71c80 + 0x14d0, .length = 0xa10 - 8, .type = EXT_IV, },
+	{ .name = "d11b0g0bsinitvals5",	.offset = 0x71c80 + 0x1ee0, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g0initvals5",	.offset = 0x71c80 + 0x1fe0, .length = 0xa10 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g1initvals5",	.offset = 0x71c80 + 0x29f0, .length = 0xa10 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g0bsinitvals5",	.offset = 0x71c80 + 0x3400, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g1bsinitvals5",	.offset = 0x71c80 + 0x3500, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "d11b0g0initvals9",	.offset = 0x71c80 + 0x3600, .length = 0xae8 - 8, .type = EXT_IV, },
+	{ .name = "d11b0g0bsinitvals9",	.offset = 0x71c80 + 0x40e8, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g0initvals9",	.offset = 0x71c80 + 0x41e8, .length = 0xae8 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g1initvals9",	.offset = 0x71c80 + 0x4cd0, .length = 0xae8 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g0bsinitvals9",	.offset = 0x71c80 + 0x57b8, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g1bsinitvals9",	.offset = 0x71c80 + 0x58b8, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "d11n0initvals11",	.offset = 0x71c80 + 0x59b8, .length = 0xb78 - 8, .type = EXT_IV, },
+	{ .name = "d11n0bsinitvals11",	.offset = 0x71c80 + 0x6530, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "d11n0absinitvals11",	.offset = 0x71c80 + 0x6630, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "d11lp0initvals13",	.offset = 0x71c80 + 0x6730, .length = 0x1360 - 8, .type = EXT_IV, },
+	{ .name = "d11lp0bsinitvals13",	.offset = 0x71c80 + 0x7a90, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "d11b0g0initvals13",	.offset = 0x71c80 + 0x7b90, .length = 0xb60 - 8, .type = EXT_IV, },
+	{ .name = "d11b0g0bsinitvals13",.offset = 0x71c80 + 0x86f0, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g1initvals13",	.offset = 0x71c80 + 0x87f0, .length = 0xb60 - 8, .type = EXT_IV, },
+	{ .name = "d11a0g1bsinitvals13",.offset = 0x71c80 + 0x9350, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "d11lp0initvals14",	.offset = 0x71c80 + 0x9450, .length = 0xb48 - 8, .type = EXT_IV, },
+	{ .name = "d11lp0bsinitvals14",	.offset = 0x71c80 + 0x9f98, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "d11lp0initvals15",	.offset = 0x71c80 + 0xa098, .length = 0xb38 - 8, .type = EXT_IV, },
+	{ .name = "d11lp0bsinitvals15",	.offset = 0x71c80 + 0xabd0, .length = 0x100 - 8, .type = EXT_IV, },
+	EXTRACT_LIST_END
+};
+
+
+/*
+ * Links change, so let's not put them into the README.
+ * I still put them here so we know where the file was obtained.
+ */
 static const struct file files[] = 
 {
 	{
-		.name        = "AppleAirPort2",
-		.version     = "3.30.15.p3 (3.1.1b2)",
-		.md5         = "a8275cc50107a13b5be15d067b2245a0",
-		.flags       = BYTE_ORDER_BIG_ENDIAN,
-		.iv_pos      = 0x42550,
-		.iv_map      = INITVALS_MAP_V3_WITHOUT_IV8,
-		.uc2_pos     = 0x45630,  .uc2_length  = 0x3d88,
-		.uc4_pos     = 0x493bc,  .uc4_length  = 0x44a0,
-		.uc5_pos     = 0x4d860,  .uc5_length  = 0x4ec0,
-		.pcm4_pos    = 0x52724,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x52ba0,  .pcm5_length = 0x478,
+		.name		= "wl_apsta.o",
+		.ucode_version	= "295.14",
+		.md5		= "e08665c5c5b66beb9c3b2dd54aa80cb3",
+		.flags		= FW_FLAG_LE,
+		.extract	= _e08665c5c5b66beb9c3b2dd54aa80cb3,
 	},
 	{
-		.name        = "AppleAirPort2",
-		.version     = "3.30.15.p3 (3.1.2b3)",
-		.md5         = "55134c1298abaa85f190331f016d4d36",
-		.flags       = BYTE_ORDER_BIG_ENDIAN,
-		.iv_pos      = 0x42c24,
-		.iv_map      = INITVALS_MAP_V3_WITHOUT_IV8,
-		.uc2_pos     = 0x45d04,  .uc2_length  = 0x3d88,
-		.uc4_pos     = 0x49a90,  .uc4_length  = 0x44a0,
-		.uc5_pos     = 0x4df34,  .uc5_length  = 0x4ec0,
-		.pcm4_pos    = 0x52df8,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x53274,  .pcm5_length = 0x478,
+		/* http://downloads.openwrt.org/sources/broadcom-wl-4.80.53.0.tar.bz2 */
+		.name		= "wl_apsta.o",
+		.ucode_version	= "351.126",
+		.md5		= "9207bc565c2fc9fa1591f6c7911d3fc0",
+		.flags		= FW_FLAG_LE | FW_FLAG_V4,
+		.extract	= _9207bc565c2fc9fa1591f6c7911d3fc0,
 	},
 	{
-		.name        = "AppleAirPort2",
-		.version     = "3.30.15.p3 (3.1.2b3)",
-		.md5         = "ac232f87f4ccfd1342a878fa85cb95e0",
-		.flags       = BYTE_ORDER_BIG_ENDIAN,
-		.iv_pos      = 0x426f0,
-		.iv_map      = INITVALS_MAP_V3_WITHOUT_IV8,
-		.uc2_pos     = 0x457d0,  .uc2_length  = 0x3d88,
-		.uc4_pos     = 0x4955c,  .uc4_length  = 0x44a0,
-		.uc5_pos     = 0x4da00,  .uc5_length  = 0x4ec0,
-		.pcm4_pos    = 0x528c4,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x52d40,  .pcm5_length = 0x478,
+		/* http://downloads.openwrt.org/sources/broadcom-wl-4.80.53.0.tar.bz2 */
+		.name		= "wl_apsta_mimo.o",
+		.ucode_version	= "351.126",
+		.md5		= "722e2e0d8cc04b8f118bb5afe6829ff9",
+		.flags		= FW_FLAG_LE | FW_FLAG_V4,
+		.extract	= _722e2e0d8cc04b8f118bb5afe6829ff9,
 	},
 	{
-		.name        = "AppleAirPort2",
-		.version     = "3.30.15.p7 (3.2)",
-		.md5         = "e74e8d2df2e4eb97e28602f3b2dd4647",
-		.flags       = BYTE_ORDER_BIG_ENDIAN,
-		.iv_pos      = 0x40efc,
-		.iv_map      = INITVALS_MAP_V3_WITHOUT_IV8,
-		.uc2_pos     = 0x43fdc,  .uc2_length  = 0x3d88,
-		.uc4_pos     = 0x47d68,  .uc4_length  = 0x44a0,
-		.uc5_pos     = 0x4c20c,  .uc5_length  = 0x4ec0,
-		.pcm4_pos    = 0x510d0,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x5154c,  .pcm5_length = 0x478,
+		/* ftp://ftp.linksys.com/opensourcecode/wrt150nv11/1.51.3/ */
+		.name		= "wl_ap.o",
+		.ucode_version	= "410.2160",
+		.md5		= "1e4763b4cb8cfbaae43e5c6d3d6b2ae7",
+		.flags		= FW_FLAG_LE | FW_FLAG_V4,
+		.extract	= _1e4763b4cb8cfbaae43e5c6d3d6b2ae7,
 	},
-	{
-		.name        = "AppleAirPort2",
-		.version     = "3.30.15.p8 (3.3b1)",			/* 01/19/2004 */
-		.md5         = "87c74c55d2501d2e968f8c132e160b6e",
-		.flags       = BYTE_ORDER_BIG_ENDIAN,
-		.iv_pos      = 0x41c8c,
-		.iv_map      = INITVALS_MAP_V3_WITHOUT_IV8,
-		.uc2_pos     = 0x43fe4,  .uc2_length  = 0x3d88,
-		.uc4_pos     = 0x47d70,  .uc4_length  = 0x44b2,
-		.uc5_pos     = 0x4c214,  .uc5_length  = 0x4ec0,
-		.pcm4_pos    = 0x510d8,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x51554,  .pcm5_length = 0x478,
-	},
-	{
-		.name        = "AppleAirPort2",
-		.version     = "3.50.37.p4 (3.4.2b1)",
-		.md5         = "1739c357ade1d04c9be47e8604afb1c2",
-		.flags       = BYTE_ORDER_BIG_ENDIAN,
-		.iv_pos      = 0x4f2b8,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x52da0,  .uc2_length  = 0x3d30,
-		.uc4_pos     = 0x56ad4,  .uc4_length  = 0x45c8,
-		.uc5_pos     = 0x5b0a0,  .uc5_length  = 0x5500,
-		.pcm4_pos    = 0x605a4,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x60a20,  .pcm5_length = 0x478,
-	},
-	{
-		.name        = "AppleAirPort2",
-		.version     = "3.50.37.p4 (3.4.3f1)",			/* 09/29/2004 */
-		.md5         = "c672b8c218c5dc4a55060bdfa9f58a69",
-		.flags       = BYTE_ORDER_BIG_ENDIAN,
-		.iv_pos      = 0x4f378,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x52e60,  .uc2_length  = 0x3d30,
-		.uc4_pos     = 0x56b94,  .uc4_length  = 0x45c8,
-		.uc5_pos     = 0x5b160,  .uc5_length  = 0x5500,
-		.pcm4_pos    = 0x60664,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x60ae0,  .pcm5_length = 0x478,
-	},
-	{
-		.name        = "AppleAirPort2",
-		.version     = "3.50.37.p4 (3.4.4f5)",
-		.md5         = "2c388e3e8ea9310a58cf76a3757e8ccc",
-		.flags       = BYTE_ORDER_BIG_ENDIAN,
-		.iv_pos      = 0x4f5f0,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x530d8,  .uc2_length  = 0x3d30,
-		.uc4_pos     = 0x56e0c,  .uc4_length  = 0x45c8,
-		.uc5_pos     = 0x5b3d8,  .uc5_length  = 0x5500,
-		.pcm4_pos    = 0x608dc,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x60d58,  .pcm5_length = 0x478,
-	},
-	{
-		.name        = "AppleAirPort2",
-		.version     = "3.50.37.p4 (3.4.4f5)",
-		.md5         = "3860545266b554d2955664db55452f5a",
-		.flags       = BYTE_ORDER_BIG_ENDIAN,
-		.iv_pos      = 0x4f5f0,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x530d8,  .uc2_length  = 0x3d30,
-		.uc4_pos     = 0x56e0c,  .uc4_length  = 0x45c8,
-		.uc5_pos     = 0x5b3d8,  .uc5_length  = 0x5500,
-		.pcm4_pos    = 0x608dc,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x60d58,  .pcm5_length = 0x478,
-	},
-	{
-		.name        = "AppleAirPort2",
-		.version     = "3.50.37.p6 (3.5f1)",
-		.md5         = "a62e35ee9956b286c46b145d35bd6e0c",
-		.flags       = BYTE_ORDER_BIG_ENDIAN,
-		.iv_pos      = 0x4f9b8,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x534a0,  .uc2_length  = 0x3d30,
-		.uc4_pos     = 0x571d4,  .uc4_length  = 0x45c8,
-		.uc5_pos     = 0x5b7a0,  .uc5_length  = 0x5500,
-		.pcm4_pos    = 0x60ca4,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x61120,  .pcm5_length = 0x478,
-	},
-	{
-		.name        = "AppleAirPort2",
-		.version     = "3.50.37.p6 (3.5f1)",
-		.md5         = "b6f3d2437c40277c197f0afcf12208e9",
-		.flags       = BYTE_ORDER_BIG_ENDIAN,
-		.iv_pos      = 0x4f9b8,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x534a0,  .uc2_length  = 0x3d30,
-		.uc4_pos     = 0x571d4,  .uc4_length  = 0x45c8,
-		.uc5_pos     = 0x5b7a0,  .uc5_length  = 0x5500,
-		.pcm4_pos    = 0x60ca4,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x61120,  .pcm5_length = 0x478,
-	},
-	{
-		.name        = "AppleAirPort2",
-		.version     = "3.90.34.0.p11 (400.17)",	       /* 09/13/2005 (??) */
-		.md5         = "ca0f34df2f0bfb8b5cfd83b5848d2bf5",
-		.flags       = BYTE_ORDER_BIG_ENDIAN | 
-		               MISSING_INITVAL_80211_A,
-		.iv_pos      = 0x4ff2c,                                /* A-PHY init vals empty */
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x5181c,  .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x55764,  .uc4_length  = 0x4df0,
-		.uc5_pos     = 0x5a554,  .uc5_length  = 0x57e0,
-		.pcm4_pos    = 0x5fd34,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x60254,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "AppleAirPort2",
-		.version     = "3.90.34.0.p11 (400.17)",
-		.md5         = "dc3a69aac95c68fe8edc760e39bbb2c9",
-		.flags       = BYTE_ORDER_BIG_ENDIAN | 
-		               MISSING_INITVAL_80211_A,
-		.iv_pos      = 0x50efc,                                /* A-PHY init vals empty */
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x527ec,  .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x56734,  .uc4_length  = 0x4df0,
-		.uc5_pos     = 0x5b524,  .uc5_length  = 0x57e0,
-		.pcm4_pos    = 0x60d04,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x61224,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "AppleAirPort2",
-		.version     = "3.90.34.0.p13 (401.2)",                /* 07/10/2005 */
-		.md5         = "6ecf38e5ab6997c7ec483c0d637f5c68",
-		.flags       = BYTE_ORDER_BIG_ENDIAN |
-		               MISSING_INITVAL_80211_A,
-		.iv_pos      = 0x50fcc,                                /* A-PHY init vals empty */
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x528bc,  .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x56804,  .uc4_length  = 0x4df0,
-		.uc5_pos     = 0x5b5f4,  .uc5_length  = 0x57e0,
-		.pcm4_pos    = 0x60dd4,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x612f4,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "AppleAirPort2",
-		.version     = "3.90.34.0.p13 (402.6)",
-		.md5         = "2ba0c4de95344b00f2c7efad917490f5",
-		.flags       = BYTE_ORDER_BIG_ENDIAN |
-		               MISSING_INITVAL_80211_A,
-		.iv_pos      = 0x510f4,                                /* A-PHY init vals empty */
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x529e4,  .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x5692c,  .uc4_length  = 0x4df0,
-		.uc5_pos     = 0x5b71c,  .uc5_length  = 0x57f0,
-		.pcm4_pos    = 0x60f0c,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x6142c,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "AppleAirPort2",
-		.version     = "3.90.34.0.p16 (404.2)",
-		.md5         = "1b44556cc33b4625f3115ce2942761c6",
-		.flags       = BYTE_ORDER_BIG_ENDIAN |
-		               MISSING_INITVAL_80211_A,
-		.iv_pos      = 0x5dd60,
-		.iv_map      = INITVALS_MAP_V3_REVERSE_ORDER,
-		.uc2_pos     = 0x59e18,  .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x55028,  .uc4_length  = 0x4df0,
-		.uc5_pos     = 0x4f838,  .uc5_length  = 0x57f0,
-		.pcm4_pos    = 0x4f318,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x4edf8,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "AppleAirPort2",
-		.version     = "3.90.34.0.p16 (404.2)",
-		.md5         = "6abbe6468954c510b36546f3cdb89efc",     /* x86 driver */
-		.flags       = BYTE_ORDER_BIG_ENDIAN |
-		               MISSING_INITVAL_80211_A,
-		.iv_pos      = 0x5dcd8,                                /* A-PHY init vals empty */
-		.iv_map      = INITVALS_MAP_V3_REVERSE_ORDER,
-		.uc2_pos     = 0x59d90,  .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x54fa0,  .uc4_length  = 0x4df0,
-		.uc5_pos     = 0x4f7b0,  .uc5_length  = 0x57f0,
-		.pcm4_pos    = 0x4f290,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x4ed70,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "AppleAirPort2",
-		.version     = "3.90.34.0.p16 (404.2)",
-		.md5         = "7200d1aef5f413ebc811046d068b40dc",
-		.flags       = BYTE_ORDER_BIG_ENDIAN |
-		               MISSING_INITVAL_80211_A,
-		.iv_pos      = 0x511ec,                                /* A-PHY init vals empty */
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x52adc,  .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x56a24,  .uc4_length  = 0x4df0,
-		.uc5_pos     = 0x5b814,  .uc5_length  = 0x57f0,
-		.pcm4_pos    = 0x61004,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x61524,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "AppleAirPort2",
-		.version     = "3.90.34.0.p16 (404.2)",
-		.md5         = "86cc708e8df3b035a1dbea41ac4eb7d2",
-		.flags       = BYTE_ORDER_BIG_ENDIAN |
-		               MISSING_INITVAL_80211_A,
-		.iv_pos      = 0x5021c,                                /* A-PHY init vals empty */
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x51b0c,  .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x55a54,  .uc4_length  = 0x4df0,
-		.uc5_pos     = 0x5a844,  .uc5_length  = 0x57f0,
-		.pcm4_pos    = 0x60034,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x60554,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "AppleAirPort2",
-		.version     = "3.90.34.0.p18 (405.1)",
-		.md5         = "6ad97ec30caee8c5580abdc93c36a2da",
-		.flags       = BYTE_ORDER_BIG_ENDIAN |
-		               MISSING_INITVAL_80211_A,
-		.iv_pos      = 0x53e24,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x55714,  .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x5965c,  .uc4_length  = 0x4df0,
-		.uc5_pos     = 0x5e44c,  .uc5_length  = 0x57f0,
-		.pcm4_pos    = 0x63c3c,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x6415c,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "AppleAirPort2",
-		.version     = "3.90.34.0.p18 (405.1)",
-		.md5         = "85c71d658b650fd2ef546d1d81b113a0",
-		.flags       = BYTE_ORDER_BIG_ENDIAN |
-		               MISSING_INITVAL_80211_A,
-		.iv_pos      = 0x51204,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x52AF4,  .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x56a3c,  .uc4_length  = 0x4df0,
-		.uc5_pos     = 0x5b82c,  .uc5_length  = 0x57f0,
-		.pcm4_pos    = 0x6101c,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x6153c,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "AppleAirPort3",
-		.version     = "3.90.34.0.p3 (3.6f2)",
-		.md5         = "5aa65bf75ae1bee0f81092a076d1ad1d",
-		.flags       = BYTE_ORDER_BIG_ENDIAN |
-		               MISSING_INITVAL_80211_A,
-		.iv_pos      = 0x49910,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x4b200,  .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x4f148,  .uc4_length  = 0x4df0,
-		.uc5_pos     = 0x53f38,  .uc5_length  = 0x57e0,
-		.pcm4_pos    = 0x59718,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x59c38,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "AppleAirPortBrcm4311",
-		.version     = "3.120.28.3 (101.3)",
-		.md5         = "71f2dbea1dab2ec630b84f4076d9a14e",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x117b60,
-		.iv_map      = INITVALS_MAP_V3_REVERSE_ORDER,
-		.uc2_pos     = 0x113be0,  .uc2_length  = 0x3f68,
-		.uc4_pos     = 0x10edc0,  .uc4_length  = 0x4e10,
-		.uc5_pos     = 0x1095c0,  .uc5_length  = 0x5800,
-		.pcm4_pos    = 0x1090a0,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x108b80,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "AppleAirPortBrcm4311",
-		.version     = "3.120.28.3 (103.2)",
-		.md5         = "e97c1a92bc961f3334992fe8eea2b185",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x1184c0,
-		.iv_map      = INITVALS_MAP_V3_REVERSE_ORDER,
-		.uc2_pos     = 0x114540,  .uc2_length  = 0x3f68,
-		.uc4_pos     = 0x10f720,  .uc4_length  = 0x4e10,
-		.uc5_pos     = 0x109f20,  .uc5_length  = 0x5800,
-		.pcm4_pos    = 0x109a00,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x1094e0,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "AppleAirPortBrcm4311",
-		.version     = "3.120.28.3.p19 (104.1)",
-		.md5         = "96be03e7d08d14db3a323078aa318a53",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x118c60,
-		.iv_map      = INITVALS_MAP_V3_REVERSE_ORDER,
-		.uc2_pos     = 0x114ce0,  .uc2_length  = 0x3f68,
-		.uc4_pos     = 0x10fec0,  .uc4_length  = 0x4e10,
-		.uc5_pos     = 0x10a6c0,  .uc5_length  = 0x5800,
-		.pcm4_pos    = 0x10a1a0,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x109c80,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "AppleAirPortBrcm4311",
-		.version     = "4.80.46.0",
-		.md5         = "e99ad02fdd7699fa52f0b9153c8411c8",
-		.flags       = BYTE_ORDER_BIG_ENDIAN |
-		               V4_FIRMWARE,
-		.iv_pos      = 0x1592f4,
-		.iv_map      = INITVALS_MAP_V4_80_46_REVERSE_ORDER,
-		.uc4_pos     = 0x15448c,  .uc4_length  = 0x4e68,
-		.uc5_pos     = 0x14ee4c,  .uc5_length  = 0x5640,
-		.uc11_pos    = 0x148668,  .uc11_length = 0x67e0,
-		.uc13_pos    = 0x142708,  .uc13_length = 0x5f60,
-		.pcm4_pos    = 0x1421e8,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x141cc8,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "AppleAirPortBrcm4311",
-		.version     = "4.80.76.0",
-		.md5         = "f5963816541d6f5fee2bd1e078919e93",
-		.flags       = BYTE_ORDER_BIG_ENDIAN |
-		               V4_FIRMWARE,
-		.iv_pos      = 0x162a3c,
-		.iv_map      = INITVALS_MAP_V4_80_46_REVERSE_ORDER,
-		.uc4_pos     = 0x15dbcc,  .uc4_length  = 0x4e70,
-		.uc5_pos     = 0x158584,  .uc5_length  = 0x5648,
-		.uc11_pos    = 0x151cf0,  .uc11_length = 0x6890,
-		.uc13_pos    = 0x14bd68,  .uc13_length = 0x5f88,
-		.pcm4_pos    = 0x14b848,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x14b328,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "AppleAirPortBrcm4311",
-		.version     = "4.80.79.1",
-		.md5         = "dc2b37598f0651b6cf5eaaf9022d9efa",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               V4_FIRMWARE,
-		.iv_pos      = 0x87cc0,
-		.iv_map      = INITVALS_MAP_V4_80_46_REVERSE_ORDER,
-		.uc4_pos     = 0x82e40,   .uc4_length  = 0x4e70,
-		.uc5_pos     = 0x7d7e0,   .uc5_length  = 0x5648,
-		.uc11_pos    = 0x76f40,   .uc11_length = 0x6888,
-		.uc13_pos    = 0x70fc0,   .uc13_length = 0x5f80,
-		.pcm4_pos    = 0x70aa0,   .pcm4_length = 0x520,
-		.pcm5_pos    = 0x70580,   .pcm5_length = 0x520,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.8.27.0",
-		.md5         = "208a33d5a52040b5401d48b8e974f901",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               OLD_VERSION_STYLE_3_8,
-		.iv_pos      = 0x1c128,
-		.iv_map      = INITVALS_MAP_V3_8_X,
-		.uc2_pos     = 0x10a54,  .uc2_length  = 0x3cf0,
-	},
-	{ 
-		.name        = "bcmwl5.sys",                           /* renamed to WMP11V27.sys */
-		.version     = "3.8.28.0",
-		.md5         = "f7c6cc420c21eb1a73f6a73bfec96f2c",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               OLD_VERSION_STYLE_3_8,
-		.iv_pos      = 0x1c1a8,
-		.iv_map      = INITVALS_MAP_V3_8_X,
-		.uc2_pos     = 0x10ad4,  .uc2_length  = 0x3cf0,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.8.37.0",                             /* 09/23/2002 */ 
-		.md5         = "e39e934eccd3b15bbb5f8d8f52f172b2",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               OLD_VERSION_STYLE_3_8,
-		.iv_pos      = 0x10528,
-		.iv_map      = INITVALS_MAP_V3_8_X,
-		.uc2_pos     = 0x11454,  .uc2_length  = 0x3cf0,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.10.8.0",                             /* 10/04/2002 */ 
-		.md5         = "288923b401e87ef76b7ae2652601ee47",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               OLD_VERSION_STYLE_3_8,
-		.iv_pos      = 0x13448,
-		.iv_map      = INITVALS_MAP_V3_10_8,
-		.uc2_pos     = 0x193b4,  .uc2_length  = 0x3dd8,
-		.pcm4_pos    = 0x24d6c,  .pcm4_length = 0x428,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.10.36.0",                            /* 12/29/2002 */ 
-		.md5         = "94cf83440955c49387ab7d9d4a8ee138",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               OLD_VERSION_STYLE_3_10,
-		.iv_pos      = 0x1a760,
-		.iv_map      = INITVALS_MAP_V3_10_3X,
-		.uc2_pos     = 0x1cf84,  .uc2_length  = 0x3ed0,
-		.pcm4_pos    = 0x24d44,  .pcm4_length = 0x428,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.10.39.0",
-		.md5         = "5204362ec9ae6d7a5e2c9ec97a869f3f", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               OLD_VERSION_STYLE_3_10,
-		.iv_pos      = 0x1a860,
-		.iv_map      = INITVALS_MAP_V3_10_3X,
-		.uc2_pos     = 0x1d084,  .uc2_length  = 0x3f30,
-		.pcm4_pos    = 0x24f04,  .pcm4_length = 0x428,
-	},
-	{ 
-		.name        = "bcmwl5.sys",                           /* was renamed to n54gnds.sys */
-		.version     = "3.10.39.7",
-		.md5         = "def910106deec0ad67712d124fc2047d", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               OLD_VERSION_STYLE_3_10,
-		.iv_pos      = 0x1b060,
-		.iv_map      = INITVALS_MAP_V3_10_3X,
-		.uc2_pos     = 0x1d884,  .uc2_length  = 0x3f30,
-		.pcm4_pos    = 0x25704,  .pcm4_length = 0x428,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.10.39.8",
-		.md5         = "bdbd3b9bf07ead2e8e00cc6dc267fb4a", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               OLD_VERSION_STYLE_3_10,
-		.iv_pos      = 0x1afe0,
-		.iv_map      = INITVALS_MAP_V3_10_3X,
-		.uc2_pos     = 0x1d804,  .uc2_length  = 0x3f30,
-		.pcm4_pos    = 0x25684,  .pcm4_length = 0x428,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.10.52.0",
-		.md5         = "4a8e982a023e48a6941d4581a88777a4", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               OLD_VERSION_STYLE_3_10,
-		.iv_pos      = 0x1c968,
-		.iv_map      = INITVALS_MAP_V3_10_3X,
-		.uc2_pos     = 0x1f17c,  .uc2_length  = 0x3f30,
-		.pcm4_pos    = 0x26ffc,  .pcm4_length = 0x428,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.10.53.0",
-		.md5         = "50e009df2dbecf7a53fcefee6b137358", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               OLD_VERSION_STYLE_3_10,
-		.iv_pos      = 0x1c9e8,
-		.iv_map      = INITVALS_MAP_V3_10_3X,
-		.uc2_pos     = 0x1f1fc,  .uc2_length  = 0x3f30,
-		.pcm4_pos    = 0x2707c,  .pcm4_length = 0x428,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.10.53.6",                            /* 04/28/2003 */ 
-		.md5         = "b43c593fd7c2a47cdc40580fe341f674",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               OLD_VERSION_STYLE_3_10,
-		.iv_pos      = 0x1d2f0,
-		.iv_map      = INITVALS_MAP_V3_10_53_6,
-		.uc2_pos     = 0x1e054,  .uc2_length  = 0x3f38,
-		.uc4_pos     = 0x288bc,  .uc4_length  = 0x4238,
-		.pcm4_pos    = 0x30d4c,  .pcm4_length = 0x478,
-	},
-	{ 
-		.name        = "bcmwl5.sys",                           /* was renamed to n54gnds.sys */
-		.version     = "3.20.21.0",
-		.md5         = "595a1b9c589b5d969b08c49c15649609", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x2a158,
-		.iv_map      = INITVALS_MAP_V3_WITHOUT_IV8,
-		.uc2_pos     = 0x2d1a8,  .uc2_length  = 0x3da8,
-		.uc4_pos     = 0x30f58,  .uc4_length  = 0x4470,
-		.uc5_pos     = 0x353d0,  .uc5_length  = 0x4ba0,
-		.pcm4_pos    = 0x39f78,  .pcm4_length = 0x478,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.20.23.0",                            /* 06/13/2003 */ 
-		.md5         = "1b1cf5e962c15abca83d1ef2b3906e2f",     /* pcm5 not available, driver is too old */
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x2a1d8,
-		.iv_map      = INITVALS_MAP_V3_WITHOUT_IV8,
-		.uc2_pos     = 0x2d228,  .uc2_length  = 0x3da8,
-		.uc4_pos     = 0x30fd8,  .uc4_length  = 0x4470,
-		.uc5_pos     = 0x35450,  .uc5_length  = 0x4ba0,
-		.pcm4_pos    = 0x39ff8,  .pcm4_length = 0x478,
-	},
-	{ 
-		.name        = "bcmwl5.sys",                           /* was renamed to mn720-50.sys */
-		.version     = "3.20.26.0",
-		.md5         = "a8be5b44170d7d1fbdb4dac89d2dacda", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x2a1d8,
-		.iv_map      = INITVALS_MAP_V3_WITHOUT_IV8,
-		.uc2_pos     = 0x2d228,  .uc2_length  = 0x3da8,
-		.uc4_pos     = 0x30fd8,  .uc4_length  = 0x4470,
-		.uc5_pos     = 0x35450,  .uc5_length  = 0x4ba0,
-		.pcm4_pos    = 0x39ff8,  .pcm4_length = 0x478,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.30.15.0",                            /* 07/17/2003 */ 
-		.md5         = "ebf36d658d0da5b1ea667fa403919c26", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x2c658,
-		.iv_map      = INITVALS_MAP_V3_WITHOUT_IV8,
-		.uc2_pos     = 0x2f738,  .uc2_length  = 0x3d88,
-		.uc4_pos     = 0x334c8,  .uc4_length  = 0x44a0,
-		.uc5_pos     = 0x37970,  .uc5_length  = 0x4ec0,
-		.pcm4_pos    = 0x3c838,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x3ccb8,  .pcm5_length = 0x478,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.30.15.1",
-		.md5         = "b3b3936d52a38b0257ffc7acf2d69a54", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x2c6d8,
-		.iv_map      = INITVALS_MAP_V3_WITHOUT_IV8,
-		.uc2_pos     = 0x2f7b8,  .uc2_length  = 0x3d88,
-		.uc4_pos     = 0x33548,  .uc4_length  = 0x44a0,
-		.uc5_pos     = 0x379f0,  .uc5_length  = 0x4ec0,
-		.pcm4_pos    = 0x3c8b8,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x3cd38,  .pcm5_length = 0x478,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.40.20.0",                            /* 09/24/2003 */ 
-		.md5         = "0c3fc803184f6f85e665dd012611225b", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x302f0,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x33d88,  .uc2_length  = 0x3db8,
-		.uc4_pos     = 0x37b48,  .uc4_length  = 0x45d8,
-		.uc5_pos     = 0x3c128,  .uc5_length  = 0x5050,
-		.pcm4_pos    = 0x41180,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x41600,  .pcm5_length = 0x478,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.40.25.3",                            /* 10/28/2003 */ 
-		.md5         = "5e58a3148b98c9f356cde6049435cb21", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x30970,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x34408,  .uc2_length  = 0x3db0,
-		.uc4_pos     = 0x381c0,  .uc4_length  = 0x45d0,
-		.uc5_pos     = 0x3c798,  .uc5_length  = 0x5050,
-		.pcm4_pos    = 0x417f0,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x41c70,  .pcm5_length = 0x478,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.40.65.0",
-		.md5         = "ba58cf7f9e8243f19c3eed2f2dcec770", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x36a18,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x3a4b0,  .uc2_length  = 0x3ff0,
-		.uc4_pos     = 0x3e4a8,  .uc4_length  = 0x47f0,
-		.uc5_pos     = 0x42ca0,  .uc5_length  = 0x5260,
-		.pcm4_pos    = 0x47f08,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x48388,  .pcm5_length = 0x478,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.40.69.0",                            /* 04/09/2004 */ 
-		.md5         = "6b670978465408373ae70ab19d70ba7e", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x36a18,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x3a4b0,  .uc2_length  = 0x3ff0,
-		.uc4_pos     = 0x3e4a8,  .uc4_length  = 0x47f0,
-		.uc5_pos     = 0x42ca0,  .uc5_length  = 0x5260,
-		.pcm4_pos    = 0x47f08,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x48388,  .pcm5_length = 0x478,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.40.73.0",                            /* 06/25/2004 */ 
-		.md5         = "52d67c5465c01913b03b7daca0cc4077", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x37398,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x3ae30,  .uc2_length  = 0x3ff0,
-		.uc4_pos     = 0x3ee28,  .uc4_length  = 0x47f0,
-		.uc5_pos     = 0x43620,  .uc5_length  = 0x5260,
-		.pcm4_pos    = 0x48888,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x48d08,  .pcm5_length = 0x478,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.40.100.0",                           /* 02/07/2004 */ 
-		.md5         = "431195b941dff794f23c2077fcbf8377", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x34d18,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x387b0,  .uc2_length  = 0x3ff0,
-		.uc4_pos     = 0x3c7a8,  .uc4_length  = 0x47f0,
-		.uc5_pos     = 0x40fa0,  .uc5_length  = 0x5260,
-		.pcm4_pos    = 0x46208,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x46688,  .pcm5_length = 0x478,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.50.21.10",
-		.md5         = "7e5c80e858ce5f9f273017e8fecf12fe", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x33370,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x36e58,	 .uc2_length  = 0x3e00,
-		.uc4_pos     = 0x3ac60,	 .uc4_length  = 0x4628,
-		.uc5_pos     = 0x3f290,	 .uc5_length  = 0x5548,
-		.pcm4_pos    = 0x447e0,	 .pcm4_length = 0x478,
-		.pcm5_pos    = 0x44c60,	 .pcm5_length = 0x478,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.50.21.11",                           /* 02/19/2004 */
-		.md5         = "ae96075a3aed5c40f1ead477ea94acd7", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x33370,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x36e58,	 .uc2_length  = 0x3e00,
-		.uc4_pos     = 0x3ac60,	 .uc4_length  = 0x4628,
-		.uc5_pos     = 0x3f290,	 .uc5_length  = 0x5548,
-		.pcm4_pos    = 0x447e0,	 .pcm4_length = 0x478,
-		.pcm5_pos    = 0x44c60,	 .pcm5_length = 0x478,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.60.7.0",                             /* 03/22/2004 */
-		.md5         = "c5616736df4e83930780dca5795387ca", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x3b988,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x3f580,	 .uc2_length  = 0x3e08,
-		.uc4_pos     = 0x43390,	 .uc4_length  = 0x4e58,
-		.uc5_pos     = 0x481f0,	 .uc5_length  = 0x5608,
-		.pcm4_pos    = 0x4d800,	 .pcm4_length = 0x478,
-		.pcm5_pos    = 0x4dc80,	 .pcm5_length = 0x478,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.60.7.5",                             /* 06/07/2004 */
-		.md5         = "d2ae116c741c215ef3ef68603db9917f", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x3b988,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x3f580,	 .uc2_length  = 0x3e08,
-		.uc4_pos     = 0x43390,	 .uc4_length  = 0x4e58,
-		.uc5_pos     = 0x481f0,	 .uc5_length  = 0x5608,
-		.pcm4_pos    = 0x4d800,	 .pcm4_length = 0x478,
-		.pcm5_pos    = 0x4dc80,	 .pcm5_length = 0x478,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.70.12.0",                            /* 06/02/2004 */
-		.md5         = "d409b089370486521d5408baed9bffde", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x39480,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x3d0c8,	 .uc2_length  = 0x3e80,
-		.uc4_pos     = 0x40f50,	 .uc4_length  = 0x4ed0,
-		.uc5_pos     = 0x45e28,	 .uc5_length  = 0x5680,
-		.pcm4_pos    = 0x4b4b0,	 .pcm4_length = 0x478,
-		.pcm5_pos    = 0x4b930,	 .pcm5_length = 0x478,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.70.17.0",                            /* 06/25/2004 */
-		.md5         = "d87b4e14e890091d8e64fb5c570cf192", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x39600,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x3d248,	 .uc2_length  = 0x3e80,
-		.uc4_pos     = 0x410d0,	 .uc4_length  = 0x4ed0,
-		.uc5_pos     = 0x45fa8,	 .uc5_length  = 0x5680,
-		.pcm4_pos    = 0x4b630,	 .pcm4_length = 0x478,
-		.pcm5_pos    = 0x4bab0,	 .pcm5_length = 0x478,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.70.22.0",                            /* 10/20/2004 */
-		.md5         = "185a6dc6d655dc31c0b228cc94fb99ac", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x39a88,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x3d6d0,	 .uc2_length  = 0x3e80,
-		.uc4_pos     = 0x41558,	 .uc4_length  = 0x4ed0,
-		.uc5_pos     = 0x46430,	 .uc5_length  = 0x5680,
-		.pcm4_pos    = 0x4bab8,	 .pcm4_length = 0x478,
-		.pcm5_pos    = 0x4bf38,	 .pcm5_length = 0x478,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.90.16.0",                            /* 12/06/2004 */
-		.md5         = "980a7b1e46a368edbeff944ec22f30ad", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x3b4c8,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x3f138,	 .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x43088,	 .uc4_length  = 0x4de8,
-		.uc5_pos     = 0x47e78,	 .uc5_length  = 0x57d8,
-		.pcm4_pos    = 0x4d658,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x4db80,	 .pcm5_length = 0x520,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.90.41.1",                            /* 07/04/2005 */
-		.md5         = "0a87541dd24c6f046a4bf8f671f74de2", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x3bec8,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x3fb38,	 .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x43a88,	 .uc4_length  = 0x4df0,
-		.uc5_pos     = 0x48880,	 .uc5_length  = 0x57e0,
-		.pcm4_pos    = 0x4e068,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x4e590,	 .pcm5_length = 0x520,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.94.41.1",
-		.md5         = "b553a59b798f398975083e240f9d0dcf", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x3bec8,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x3fb38,	 .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x43a88,	 .uc4_length  = 0x4df0,
-		.uc5_pos     = 0x48880,	 .uc5_length  = 0x57e0,
-		.pcm4_pos    = 0x4e068,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x4e590,	 .pcm5_length = 0x520,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.94.41.2",
-		.md5         = "904f2564fbdf2313bec37d5f7116ed05", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x3bec8,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x3fb38,	 .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x43a88,	 .uc4_length  = 0x4df0,
-		.uc5_pos     = 0x48880,	 .uc5_length  = 0x57e0,
-		.pcm4_pos    = 0x4e068,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x4e590,	 .pcm5_length = 0x520,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.100.35.0",                           /* 11/27/2004 */
-		.md5         = "c3ab2d6954c7b5103770832a3a6a591b", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x3de80,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x41af0,	 .uc2_length  = 0x3f58,
-		.uc4_pos     = 0x45a50,	 .uc4_length  = 0x4df8,
-		.uc5_pos     = 0x4a850,	 .uc5_length  = 0x57f8,
-		.pcm4_pos    = 0x50050,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x50578,	 .pcm5_length = 0x520,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.100.35.1",                           /* 02/10/2005 */
-		.md5         = "da7ca369a1a3593ceac85dec2d267a08", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x3df00,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x41b70,	 .uc2_length  = 0x3f58,
-		.uc4_pos     = 0x45ad0,	 .uc4_length  = 0x4df8,
-		.uc5_pos     = 0x4a8d0,	 .uc5_length  = 0x57f8,
-		.pcm4_pos    = 0x500d0,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x505f8,	 .pcm5_length = 0x520,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.100.46.0",                           /* 12/22/2004 */
-		.md5         = "38ca1443660d0f5f06887c6a2e692aeb", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x3de80,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x41af0,	 .uc2_length  = 0x3f58,
-		.uc4_pos     = 0x45a50,	 .uc4_length  = 0x4df8,
-		.uc5_pos     = 0x4a850,	 .uc5_length  = 0x57f8,
-		.pcm4_pos    = 0x50050,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x50578,	 .pcm5_length = 0x520,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.100.64.0",                           /* 02/11/2005 */
-		.md5         = "e7debb46b9ef1f28932e533be4a3d1a9", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x3e980,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x425f0,	 .uc2_length  = 0x3f58,
-		.uc4_pos     = 0x46550,	 .uc4_length  = 0x4e00,
-		.uc5_pos     = 0x4b358,	 .uc5_length  = 0x5800,
-		.pcm4_pos    = 0x50b60,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x51088,	 .pcm5_length = 0x520,
-	},
-	{ 
-		.name        = "bcmwl5.sys",
-		.version     = "3.100.64.50",                          /* 04/05/2005 */
-		.md5         = "4b3e367b829b9b2c0c088909a617e04e", 
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x3e900,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x42570,	 .uc2_length  = 0x3f58,
-		.uc4_pos     = 0x464d0,	 .uc4_length  = 0x4e00,
-		.uc5_pos     = 0x4b2d8,	 .uc5_length  = 0x5800,
-		.pcm4_pos    = 0x50ae0,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x51008,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl5.sys",
-		.version     = "3.100.65.1",                           /* 04/21/2005 */
-		.md5         = "d5f1ab1aab8b81bca6f19da9554a267a",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x3e980,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x425f0,	 .uc2_length  = 0x3f58,
-		.uc4_pos     = 0x46550,	 .uc4_length  = 0x4e00,
-		.uc5_pos     = 0x4b358,	 .uc5_length  = 0x5800,
-		.pcm4_pos    = 0x50b60,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x51088,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl5.sys",
-		.version     = "3.104.64.50",
-		.md5         = "12554a8f91c5d565b96b6ebcfeb6a91a",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x3e980,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x425f0,	 .uc2_length  = 0x3f58,
-		.uc4_pos     = 0x46550,	 .uc4_length  = 0x4e00,
-		.uc5_pos     = 0x4b358,	 .uc5_length  = 0x5800,
-		.pcm4_pos    = 0x50b60,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x51088,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl5.sys",
-		.version     = "3.104.64.52",
-		.md5         = "3ccb53e4f0f5e9f4ae270cb2924cb941",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x3e980,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x425f0,	 .uc2_length  = 0x3f58,
-		.uc4_pos     = 0x46550,	 .uc4_length  = 0x4e00,
-		.uc5_pos     = 0x4b358,	 .uc5_length  = 0x5800,
-		.pcm4_pos    = 0x50b60,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x51088,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl5.sys",
-		.version     = "3.120.27.0",                           /* 05/19/2005 */
-		.md5         = "8d49f11238815a320880fee9f98b2c92",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x3f700,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x43370,	 .uc2_length  = 0x3f68,
-		.uc4_pos     = 0x472e0,	 .uc4_length  = 0x4e10,
-		.uc5_pos     = 0x4c0f8,	 .uc5_length  = 0x5800,
-		.pcm4_pos    = 0x51900,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x51e28,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl5.sys",
-		.version     = "3.140.16.0",                           /* 07/21/2005 */
-		.md5         = "fa4a4a50b4b2647afedc676cc68c69cc",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x3f700,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x43370,	 .uc2_length  = 0x3f68,
-		.uc4_pos     = 0x472e0,	 .uc4_length  = 0x4e10,
-		.uc5_pos     = 0x4c0f8,	 .uc5_length  = 0x5800,
-		.pcm4_pos    = 0x51900,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x51e28,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl5.sys",
-		.version     = "4.10.23.2",
-		.md5         = "cc04de6690d2f15c7fe2095a476141ba",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               V4_FIRMWARE,
-		.iv_pos      = 0x46aa0,
-		.iv_map      = INITVALS_MAP_V4_UP_TO_REV11,
-		.uc4_pos     = 0x4b498,	 .uc4_length  = 0x4e90,
-		.uc5_pos     = 0x50330,	 .uc5_length  = 0x56f8,
-		.uc11_pos    = 0x55a38,	 .uc11_length = 0x5bd0,
-		.pcm4_pos    = 0x5b610,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x5bb38,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl5.sys",
-		.version     = "4.10.40.0",                           /* 11/02/2005 */
-		.md5         = "30d20fc98bcfd52e1da778cf19b223d4",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               V4_FIRMWARE,
-		.iv_pos      = 0x47ba8,
-		.iv_map      = INITVALS_MAP_V4_UP_TO_REV11,
-		.uc4_pos     = 0x4c5b0,	 .uc4_length  = 0x4ee8,
-		.uc5_pos     = 0x514a0,	 .uc5_length  = 0x5750,
-		.uc11_pos    = 0x56c00,	 .uc11_length = 0x5a90,
-		.pcm4_pos    = 0x5c698,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x5cbc0,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl5.sys",
-		.version     = "4.10.40.1",                           /* 12/17/2005 */
-		.md5         = "69f940672be0ecee5bd1e905706ba8ce",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               V4_FIRMWARE,
-		.iv_pos      = 0x47ba8,
-		.iv_map      = INITVALS_MAP_V4_UP_TO_REV11,
-		.uc4_pos     = 0x4c5b0,	 .uc4_length  = 0x4ee8,
-		.uc5_pos     = 0x514a0,	 .uc5_length  = 0x5750,
-		.uc11_pos    = 0x56c00,	 .uc11_length = 0x5a90,
-		.pcm4_pos    = 0x5c698,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x5cbc0,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl5.sys",
-		.version     = "4.10.47.2",
-		.md5         = "2b87cd8a92bc5003067534aba4349db0",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-			       V4_FIRMWARE,
-		.iv_pos      = 0x47e28,
-		.iv_map      = INITVALS_MAP_V4_UP_TO_REV11,
-		.uc4_pos     = 0x4c830,	 .uc4_length  = 0x4ee8,
-		.uc5_pos     = 0x51720,	 .uc5_length  = 0x5750,
-		.uc11_pos    = 0x56e80,	 .uc11_length = 0x5a90,
-		.pcm4_pos    = 0x5c918,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x5ce40,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl5.sys",
-		.version     = "4.40.19.0",
-		.md5         = "114234fafec7060392195170e1c4d45e",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               V4_FIRMWARE,
-		.iv_pos      = 0x48ab8,
-		.iv_map      = INITVALS_MAP_V4_UP_TO_REV11,
-		.uc4_pos     = 0x4d4c0,	 .uc4_length  = 0x4f58,
-		.uc5_pos     = 0x52420,	 .uc5_length  = 0x57c0,
-		.uc11_pos    = 0x57bf0,	 .uc11_length = 0x5b00,
-		.pcm4_pos    = 0x5d6f8,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x5dc20,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl5.sys",
-		.version     = "4.80.5.0",
-		.md5         = "4e89609eac698835250acd02851cc594",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-			       V4_FIRMWARE,
-		.iv_pos      = 0x55780,
-		.iv_map      = INITVALS_MAP_V4_UP_TO_REV13,
-		.uc4_pos     = 0x5aef8,  .uc4_length  = 0x4e28,
-		.uc5_pos     = 0x5fd28,  .uc5_length  = 0x55f8,
-		.uc11_pos    = 0x65330,  .uc11_length = 0x6020,
-		.uc13_pos    = 0x6b358,  .uc13_length = 0x5d20,
-		.pcm4_pos    = 0x71080,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x715a8,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl5.sys",
-		.version     = "4.80.9.0",
-		.md5         = "85fb2a9069a3cdef3a591606844d0036",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-			       V4_FIRMWARE,
-		.iv_pos      = 0x56400,
-		.iv_map      = INITVALS_MAP_V4_UP_TO_REV13,
-		.uc4_pos     = 0x5bb78,  .uc4_length  = 0x4e28,
-		.uc5_pos     = 0x609a8,  .uc5_length  = 0x55f8,
-		.uc11_pos    = 0x65fb0,  .uc11_length = 0x60f0,
-		.uc13_pos    = 0x6c0a8,  .uc13_length = 0x5d18,
-		.pcm4_pos    = 0x71dc8,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x722f0,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl5.sys",
-		.version     = "4.80.9.2",
-		.md5         = "2ee34b694d1ce077678662d7884f6c79",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-			       V4_FIRMWARE,
-		.iv_pos      = 0x56480,
-		.iv_map      = INITVALS_MAP_V4_UP_TO_REV13,
-		.uc4_pos     = 0x5bbf8,  .uc4_length  = 0x4e28,
-		.uc5_pos     = 0x60a28,  .uc5_length  = 0x55f8,
-		.uc11_pos    = 0x66030,  .uc11_length = 0x6130,
-		.uc13_pos    = 0x6c168,  .uc13_length = 0x5d18,
-		.pcm4_pos    = 0x71e88,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x723b0,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl5.sys",
-		.version     = "4.80.17.0",
-		.md5         = "90ef35fb5ae531420577c8f40d8a16f5",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-			       V4_FIRMWARE,
-		.iv_pos      = 0x57f80,
-		.iv_map      = INITVALS_MAP_V4_UP_TO_REV13,
-		.uc4_pos     = 0x5d6f8,  .uc4_length  = 0x4e28,
-		.uc5_pos     = 0x62528,  .uc5_length  = 0x55f8,
-		.uc11_pos    = 0x67b30,  .uc11_length = 0x6160,
-		.uc13_pos    = 0x6dc98,  .uc13_length = 0x5d40,
-		.pcm4_pos    = 0x739e0,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x73f08,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl5.sys",
-		.version     = "4.80.28.2",
-		.md5         = "5538cd4cadc0ed0c0295192fd041860d",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-			       V4_FIRMWARE,
-		.iv_pos      = 0x59200,
-		.iv_map      = INITVALS_MAP_V4_UP_TO_REV13,
-		.uc4_pos     = 0x5e9a0,  .uc4_length  = 0x4e48,
-		.uc5_pos     = 0x637f0,  .uc5_length  = 0x5618,
-		.uc11_pos    = 0x68e18,  .uc11_length = 0x6660,
-		.uc13_pos    = 0x6f480,  .uc13_length = 0x5e58,
-		.pcm4_pos    = 0x752e0,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x75808,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl5.sys",
-		.version     = "4.80.28.7",
-		.md5         = "3003c21e5e1f04ba84fc8e705a65db2b",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-			       V4_FIRMWARE,
-		.iv_pos      = 0x59380,
-		.iv_map      = INITVALS_MAP_V4_UP_TO_REV13,
-		.uc4_pos     = 0x5eb20,  .uc4_length  = 0x4e48,
-		.uc5_pos     = 0x63970,  .uc5_length  = 0x5618,
-		.uc11_pos    = 0x68f98,  .uc11_length = 0x6660,
-		.uc13_pos    = 0x6f600,  .uc13_length = 0x5e58,
-		.pcm4_pos    = 0x75460,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x75988,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl5.sys",
-		.version     = "4.80.46.0",
-		.md5         = "c50861ee37c900bfbc666d49439dc778",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-			       V4_FIRMWARE,
-		.iv_pos      = 0x5bd00,
-		.iv_map      = INITVALS_MAP_V4_80_46,
-		.uc4_pos     = 0x62e20,  .uc4_length  = 0x4e68,
-		.uc5_pos     = 0x67c90,  .uc5_length  = 0x5640,
-		.uc11_pos    = 0x6d2e0,  .uc11_length = 0x67e0,
-		.uc13_pos    = 0x73ac8,  .uc13_length = 0x5f60,
-		.pcm4_pos    = 0x79a30,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x79f58,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl5.sys",
-		.version     = "4.80.53.0",
-		.md5         = "e8814dbec973681ae2b2e502ed1a8f44",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-			       V4_FIRMWARE,
-		.iv_pos      = 0x5c600,
-		.iv_map      = INITVALS_MAP_V4_80_46,
-		.uc4_pos     = 0x63720,  .uc4_length  = 0x4e68,
-		.uc5_pos     = 0x68590,  .uc5_length  = 0x5640,
-		.uc11_pos    = 0x6dbe0,  .uc11_length = 0x67e0,
-		.uc13_pos    = 0x743c8,  .uc13_length = 0x5f60,
-		.pcm4_pos    = 0x7a330,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x7a858,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl5.sys",
-		.version     = "4.100.15.5",
-		.md5         = "b89bcf0a25aeb3b47030ac83287f894a",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-			       V4_FIRMWARE,
-		.iv_pos      = 0x5e998,
-		.iv_map      = INITVALS_MAP_V4_80_46,
-		.uc4_pos     = 0x65908,  .uc4_length  = 0x4dc8,
-		.uc5_pos     = 0x6a6d8,  .uc5_length  = 0x55b8,
-		.uc11_pos    = 0x6fca0,  .uc11_length = 0x6ae0,
-		.uc13_pos    = 0x76788,  .uc13_length = 0x6740,
-		.pcm4_pos    = 0x7ced0,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x7d3f8,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl564.sys",
-		.version     = "3.70.17.5",
-		.md5         = "f5590c8784b91dfd9ee092d3040b6e40",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x566f0,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x5a360,  .uc2_length  = 0x3e80,
-		.uc4_pos     = 0x5e1f0,  .uc4_length  = 0x4ed0,
-		.uc5_pos     = 0x630d0,  .uc5_length  = 0x5680,
-		.pcm4_pos    = 0x68760,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x68be0,  .pcm5_length = 0x478,
-	},
-	{
-		.name        = "bcmwl564.sys",
-		.version     = "3.100.64.10",                          /* 05/12/2005 */
-		.md5         = "b8d76da338ecf2c650f5f7ca226ccf89",     /* for 64bit machines   */
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x50bf0,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x54860,  .uc2_length  = 0x3f58,
-		.uc4_pos     = 0x587c0,  .uc4_length  = 0x4e00,
-		.uc5_pos     = 0x5d5d0,  .uc5_length  = 0x5800,
-		.pcm4_pos    = 0x62de0,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x63310,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl564.sys",
-		.version     = "4.10.23.2",
-		.md5         = "7f4786fb45f509d8c2808b6e423addf1",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               V4_FIRMWARE,
-		.iv_pos      = 0x5bac0,
-		.iv_map      = INITVALS_MAP_V4_UP_TO_REV11,
-		.uc4_pos     = 0x604c0,	 .uc4_length  = 0x4e90,
-		.uc5_pos     = 0x65360,	 .uc5_length  = 0x56f8,
-		.uc11_pos    = 0x6aa70,	 .uc11_length = 0x5bd0,
-		.pcm4_pos    = 0x70650,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x70b80,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl564.sys",
-		.version     = "4.40.19.0",
-		.md5         = "68f48a63a827a87bc04f6c8763228054",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               V4_FIRMWARE,
-		.iv_pos      = 0x5dcd0,
-		.iv_map      = INITVALS_MAP_V4_UP_TO_REV11,
-		.uc4_pos     = 0x626e0,	 .uc4_length  = 0x4f58,
-		.uc5_pos     = 0x67640,	 .uc5_length  = 0x57c0,
-		.uc11_pos    = 0x6ce10,	 .uc11_length = 0x5b00,
-		.pcm4_pos    = 0x72920,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x72e50,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl564.sys",
-		.version     = "4.80.9.2",
-		.md5         = "c24bb2a1207a6f2c0ed79e2463df9dea",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-			       V4_FIRMWARE,
-		.iv_pos      = 0x6eb30,
-		.iv_map      = INITVALS_MAP_V4_UP_TO_REV13,
-		.uc4_pos     = 0x742e0,  .uc4_length  = 0x4e28,
-		.uc5_pos     = 0x79110,  .uc5_length  = 0x55f8,
-		.uc11_pos    = 0x7e720,  .uc11_length = 0x6130,
-		.uc13_pos    = 0x84860,  .uc13_length = 0x5d18,
-		.pcm4_pos    = 0x8a580,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x8aab0,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl564.sys",
-		.version     = "4.80.17.0",
-		.md5         = "4cf95baf3c3011e4c59d37336e50be57",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               V4_FIRMWARE,
-		.iv_pos      = 0x70b30,
-		.iv_map      = INITVALS_MAP_V4_UP_TO_REV13,
-		.uc4_pos     = 0x762e0,  .uc4_length  = 0x4e28,
-		.uc5_pos     = 0x7b110,  .uc5_length  = 0x55f8,
-		.uc11_pos    = 0x80720,  .uc11_length = 0x6160,
-		.uc13_pos    = 0x86890,  .uc13_length = 0x5d40,
-		.pcm4_pos    = 0x8c5e0,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x8cb10,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl564.sys",
-		.version     = "4.80.28.2",
-		.md5         = "038dedd70e8ddfe2b241c75b0d8c1633",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-			       V4_FIRMWARE,
-		.iv_pos      = 0x72130,
-		.iv_map      = INITVALS_MAP_V4_UP_TO_REV13,
-		.uc4_pos     = 0x77900,  .uc4_length  = 0x4e48,
-		.uc5_pos     = 0x7c750,  .uc5_length  = 0x5618,
-		.uc11_pos    = 0x81d80,  .uc11_length = 0x6660,
-		.uc13_pos    = 0x883f0,  .uc13_length = 0x5e58,
-		.pcm4_pos    = 0x8e250,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x8e780,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl564.sys",
-		.version     = "4.100.15.5",
-		.md5         = "feaf7ec9f38a37945b6fb169617ec859",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-			       V4_FIRMWARE,
-		.iv_pos      = 0x79d40,
-		.iv_map      = INITVALS_MAP_V4_80_46,
-		.uc4_pos     = 0x80ce0,  .uc4_length  = 0x4dc8,
-		.uc5_pos     = 0x85ab0,  .uc5_length  = 0x55b8,
-		.uc11_pos    = 0x8b080,  .uc11_length = 0x6ae0,
-		.uc13_pos    = 0x91b70,  .uc13_length = 0x6740,
-		.pcm4_pos    = 0x982c0,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x987f0,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl5a.sys",
-		.version     = "3.90.16.0",                            /* 12/06/2004 */
-		.md5         = "e6d927deea6c75bddf84080e6c3837b7",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x3b4c8,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x3f138,  .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x43088,  .uc4_length  = 0x4de8,
-		.uc5_pos     = 0x47e78,  .uc5_length  = 0x57d8,
-		.pcm4_pos    = 0x4d658,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x4db80,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl6.sys",
-		.version     = "4.102.15.56",
-		.md5         = "509f672686af40f95859fde67108449b",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-			       V4_FIRMWARE,
-		.iv_pos      = 0x4db70,
-		.iv_map      = INITVALS_MAP_V4_80_46,
-		.uc4_pos     = 0x54af0,  .uc4_length  = 0x4e50,
-		.uc5_pos     = 0x59948,  .uc5_length  = 0x5640,
-		.uc11_pos    = 0x5ef90,  .uc11_length = 0x6d80,
-		.uc13_pos    = 0x65d18,  .uc13_length = 0x69e0,
-		.pcm4_pos    = 0x6c6f8,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x6cc20,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl6.sys",
-		.version     = "4.102.15.61",
-		.md5         = "746f59822a5187510471fc46889b8cc9",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-			       V4_FIRMWARE,
-		.iv_pos      = 0x4db70,
-		.iv_map      = INITVALS_MAP_V4_80_46,
-		.uc4_pos     = 0x54af0,  .uc4_length  = 0x4e50,
-		.uc5_pos     = 0x59948,  .uc5_length  = 0x5640,
-		.uc11_pos    = 0x5ef90,  .uc11_length = 0x6d80,
-		.uc13_pos    = 0x65d18,  .uc13_length = 0x69e0,
-		.pcm4_pos    = 0x6c6f8,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x6cc20,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "bcmwl664.sys",
-		.version     = "4.102.15.61",
-		.md5         = "97f98e5e6a83585e42b1e1e15716aae8",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-			       V4_FIRMWARE,
-		.iv_pos      = 0x6f2b0,
-		.iv_map      = INITVALS_MAP_V4_102,
-		.uc4_pos     = 0x76240,  .uc4_length  = 0x4e50,
-		.uc5_pos     = 0x7b090,  .uc5_length  = 0x5640,
-		.uc11_pos    = 0x806d0,  .uc11_length = 0x6d80,
-		.uc13_pos    = 0x87450,  .uc13_length = 0x69e0,
-		.pcm4_pos    = 0x8de30,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x8e350,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "d11ucode.o",
-		.version     = "3.31.16.0 ?", /*FIXME: version correct? */
-		.md5         = "31e6cac8a8129bf8f91291293e017329",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x40,
-		.iv_map      = INITVALS_MAP_V3_WITHOUT_IV8,
-		.uc2_pos     = 0x3120,   .uc2_length  = 0x3d88,
-		.uc4_pos     = 0x6eac,   .uc4_length  = 0x44a0,
-		.uc5_pos     = 0xb350,   .uc5_length  = 0x4ec0,
-		.pcm4_pos    = 0x10214,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x10690,  .pcm5_length = 0x478,
-	},
-	{
-		.name        = "d11ucode.o",
-		.version     = "3.50.21.10",
-		.md5         = "2781ba96ee69bffd316315240be1f35b",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x40,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x3b28,   .uc2_length  = 0x3e00,
-		.uc4_pos     = 0x792c,   .uc4_length  = 0x4628,
-		.uc5_pos     = 0xbf58,   .uc5_length  = 0x5548,
-		.pcm4_pos    = 0x114a4,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x11920,  .pcm5_length = 0x478,
-	},
-	{
-		.name        = "d11ucode.o",
-		.version     = "3.60.7.0 ? (1.3.2)",                   /* no version number found */
-		.md5         = "7774e5dda1daa2b3f83d279552ca1cc4",     /* but same fw files are also */
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,               /* in bcmwl5.sys 3.60.7.0 */
-		.iv_pos      = 0x40,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x3c38,   .uc2_length  = 0x3e08,
-		.uc4_pos     = 0x7a44,   .uc4_length  = 0x4e58,
-		.uc5_pos     = 0xc8a0,   .uc5_length  = 0x5608,
-		.pcm4_pos    = 0x11eac,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x12328,  .pcm5_length = 0x478,
-	},
-	{
-		.name        = "d11ucode.o",
-		.version     = "3.60.13.0",
-		.md5         = "020a36ac61eff3fc833489f7b4dc0a8a",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x40,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x3c88,   .uc2_length  = 0x3e30,
-		.uc4_pos     = 0x7abc,   .uc4_length  = 0x4e80,
-		.uc5_pos     = 0xc940,   .uc5_length  = 0x5630,
-		.pcm4_pos    = 0x11f74,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x123f0,  .pcm5_length = 0x478,
-	},
-	{
-		.name        = "d11ucode.o",
-		.version     = "3.90.7.0",                             /* 10/14/2004 */
-		.md5         = "b2580361620881b06fa810422ec8b7ce",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x60,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x3cd0,   .uc2_length  = 0x3ec0,
-		.uc4_pos     = 0x7b94,   .uc4_length  = 0x4d60,
-		.uc5_pos     = 0xc8f8,   .uc5_length  = 0x5750,
-		.pcm4_pos    = 0x1204c,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x12570,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "d11ucode.o",
-		.version     = "3.90.37.0",
-		.md5         = "2543935259739a8a879ccb8386647ac7",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x60,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x3cd0,   .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x7c1c,   .uc4_length  = 0x4df0,
-		.uc5_pos     = 0xca10,   .uc5_length  = 0x57e0,
-		.pcm4_pos    = 0x121f4,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x12718,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl.o",
-		.version     = "3.31.15.0",                            /* 07/28/2003 */
-		.md5         = "a85af65b5ae1d64ee11eab714faab843",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x32270,
-		.iv_map      = INITVALS_MAP_V3_WITHOUT_IV8,
-		.uc2_pos     = 0x35350,  .uc2_length  = 0x3d88,
-		.uc4_pos     = 0x390dc,  .uc4_length  = 0x44a0,
-		.uc5_pos     = 0x3d580,  .uc5_length  = 0x4ec0,
-		.pcm4_pos    = 0x42444,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x428c0,  .pcm5_length = 0x478,
-	},
-	{
-		.name        = "wl.o",
-		.version     = "3.31.15.0",                            /* 07/28/2003 */
-		.md5         = "98dd50a95b02c8bcb3725c770df81dfc",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x32270,
-		.iv_map      = INITVALS_MAP_V3_WITHOUT_IV8,
-		.uc2_pos     = 0x35350,  .uc2_length  = 0x3d88,
-		.uc4_pos     = 0x390dc,  .uc4_length  = 0x44a0,
-		.uc5_pos     = 0x3d580,  .uc5_length  = 0x4ec0,
-		.pcm4_pos    = 0x42444,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x428c0,  .pcm5_length = 0x478,
-	},
-	{
-		.name        = "wl.o",
-		.version     = "3.50.21.0",                            /* 05/11/2003 */
-		.md5         = "f71be0e1d14f68c98d916465a300d835",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x38990,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x3c428,  .uc2_length  = 0x3db8,
-		.uc4_pos     = 0x401e4,  .uc4_length  = 0x45d8,
-		.uc5_pos     = 0x447c0,  .uc5_length  = 0x5050,
-		.pcm4_pos    = 0x49814,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x49c90,  .pcm5_length = 0x478,
-	},
-	{
-		.name        = "wl.o",
-		.version     = "3.50.21.10",                           /* 01/21/2004 */
-		.md5         = "191029d5e7097ed7db92cbd6e6131f85",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x3a5d0,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x3e0b8,  .uc2_length  = 0x3e00,
-		.uc4_pos     = 0x41ebc,  .uc4_length  = 0x4628,
-		.uc5_pos     = 0x464e8,  .uc5_length  = 0x5548,
-		.pcm4_pos    = 0x4ba34,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x4beb0,  .pcm5_length = 0x478,
-	},
-	{
-		.name        = "wl.o",
-		.version     = "3.60.7.0 ? (1.3.2.0)",                 /* 02/04/2004 */
-		.md5         = "7009220d84c445797443aa0221b7d8a4",     /* no bcm version found */
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,               /* but same fw files are also */
-		.iv_pos      = 0x545e0,                                /* in bcmwl5.sys 3.60.7.0, */
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x581d8,  .uc2_length  = 0x3e08,
-		.uc4_pos     = 0x5bfe4,  .uc4_length  = 0x4e58,
-		.uc5_pos     = 0x60e40,  .uc5_length  = 0x5608,
-		.pcm4_pos    = 0x6644c,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x668c8,  .pcm5_length = 0x478,
-	},
-	{
-		.name        = "wl.o",
-		.version     = "3.60.13.0",                            /* 05/05/2004 */
-		.md5         = "275dd4958eb94058d4650f58d534c635",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x3b740,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x3f388,  .uc2_length  = 0x3e30,
-		.uc4_pos     = 0x431bc,  .uc4_length  = 0x4e80,
-		.uc5_pos     = 0x48040,  .uc5_length  = 0x5630,
-		.pcm4_pos    = 0x4d674,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x4daf0,  .pcm5_length = 0x478,
-	},
-	{
-		.name        = "wl.o",
-		.version     = "3.60.13.0",                            /* 08/02/2004 */
-		.md5         = "4f20653a0b7c0bb3bd1ee0dd79f77785",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x3b730,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x3f378,  .uc2_length  = 0x3e30,
-		.uc4_pos     = 0x431ac,  .uc4_length  = 0x4e80,
-		.uc5_pos     = 0x48030,  .uc5_length  = 0x5630,
-		.pcm4_pos    = 0x4d664,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x4dae0,  .pcm5_length = 0x478,
-	},
-	{
-		.name        = "wl.o",
-		.version     = "3.90.7.0",                             /* 14/10/2004 */
-		.md5         = "f15b59ad4d6f6ad2c7f45193d033aff8",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x4d890,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x51500,  .uc2_length  = 0x3ec0,
-		.uc4_pos     = 0x553c4,  .uc4_length  = 0x4d60,
-		.uc5_pos     = 0x5a128,  .uc5_length  = 0x5750,
-		.pcm4_pos    = 0x5f87c,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x5fda0,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl.o",
-		.version     = "3.90.23.0",
-		.md5         = "2bbeb870cf50b1231b9fd61e320aee19",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x4e080,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x51cf0,  .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x55c3c,  .uc4_length  = 0x4de8,
-		.uc5_pos     = 0x5aa28,  .uc5_length  = 0x57d8,
-		.pcm4_pos    = 0x60204,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x60728,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl.o",
-		.version     = "3.90.37.0",                            /* 15/02/2005 */
-		.md5         = "984c42947552652d5ab61b78e7d12227",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x4cf50,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x50bc0,  .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x54b0c,  .uc4_length  = 0x4df0,
-		.uc5_pos     = 0x59900,  .uc5_length  = 0x57e0,
-		.pcm4_pos    = 0x5f0e4,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x5f608,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl.o",
-		.version     = "3.90.38.0",
-		.md5         = "cdcdefb185700461a207d9671c6c501f",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x4f0d0,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x52d40,  .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x56c8c,  .uc4_length  = 0x4df0,
-		.uc5_pos     = 0x5ba80,  .uc5_length  = 0x57e0,
-		.pcm4_pos    = 0x61264,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x61788,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl.o",
-		.version     = "3.130.20.0",
-		.md5         = "9b39b50b7b4c02115c348d645878ab2d",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x56020,
-		.iv_map      = INITVALS_MAP_V3_UP_TO_REV11,
-		.uc2_pos     = 0x59ca0,  .uc2_length  = 0x3fe0,
-		.uc4_pos     = 0x5dc84,  .uc4_length  = 0x4e78,
-		.uc5_pos     = 0x62b00,  .uc5_length  = 0x5700,
-		.uc11_pos    = 0x68204,  .uc11_length = 0x54a8,
-		.pcm4_pos    = 0x6d6b0,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x6dbd4,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl.o",
-		.version     = "4.80.9.1",
-		.md5         = "c3bf18125b65de73f2d6b68dd63d60cf",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               V4_FIRMWARE,
-		.iv_pos      = 0x65bc0,
-		.iv_map      = INITVALS_MAP_V4_UP_TO_REV13,
-		.uc4_pos     = 0x6a700,  .uc4_length  = 0x4e28,
-		.uc5_pos     = 0x6f52c,  .uc5_length  = 0x55f8,
-		.uc11_pos    = 0x74b30,  .uc11_length = 0x60f0,
-		.uc13_pos    = 0x7ac24,  .uc13_length = 0x5d18,
-		.pcm4_pos    = 0x80940,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x80e64,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl.o",
-		.version     = "4.80.9.1",
-		.md5         = "de3a5d0d4a795cf85dc706f75ac4c56d",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               V4_FIRMWARE,
-		.iv_pos      = 0x65bc0,
-		.iv_map      = INITVALS_MAP_V4_UP_TO_REV13,
-		.uc4_pos     = 0x6a700,  .uc4_length  = 0x4e28,
-		.uc5_pos     = 0x6f52c,  .uc5_length  = 0x55f8,
-		.uc11_pos    = 0x74b30,  .uc11_length = 0x60f0,
-		.uc13_pos    = 0x7ac24,  .uc13_length = 0x5d18,
-		.pcm4_pos    = 0x80940,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x80e64,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl_ap.o",
-		.version     = "3.31.16.0",                            /* 08/06/2003 */
-		.md5         = "463633e7bf0efc6c0f8eac2514a71024",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x32270,
-		.iv_map      = INITVALS_MAP_V3_WITHOUT_IV8,
-		.uc2_pos     = 0x35350,  .uc2_length  = 0x3d88,
-		.uc4_pos     = 0x390dc,  .uc4_length  = 0x44a0,
-		.uc5_pos     = 0x3d580,  .uc5_length  = 0x4ec0,
-		.pcm4_pos    = 0x42444,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x428c0,  .pcm5_length = 0x478,
-	},
-	{
-		.name        = "wl_ap.o",
-		.version     = "3.90.7.0",
-		.md5         = "e0b96342c6a48a7eee8b4423fcb65b63",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x3d7f0,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x41460,  .uc2_length  = 0x3ec0,
-		.uc4_pos     = 0x45324,  .uc4_length  = 0x4d60,
-		.uc5_pos     = 0x4a088,  .uc5_length  = 0x5750,
-		.pcm4_pos    = 0x4f7dc,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x4fd00,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl_ap.o",
-		.version     = "3.90.37.0",                            /* 15/02/2005 */
-		.md5         = "0538296d46a854d2facc9a0db2088180",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x3eac0,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x42730,  .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x4667c,  .uc4_length  = 0x4df0,
-		.uc5_pos     = 0x4b470,  .uc5_length  = 0x57e0,
-		.pcm4_pos    = 0x50c54,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x51178,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl_ap.o",
-		.version     = "3.90.37.0",                            /* 15/02/2005 */
-		.md5         = "6c9073531a528dd455b716b5e821e696",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x3eac0,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x42730,  .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x4667c,  .uc4_length  = 0x4df0,
-		.uc5_pos     = 0x4b470,  .uc5_length  = 0x57e0,
-		.pcm4_pos    = 0x50c54,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x51178,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl_ap.o",
-		.version     = "3.130.20.0",
-		.md5         = "1e3a8bb0b994a929ef38da3a5a29155b",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x42840,
-		.iv_map      = INITVALS_MAP_V3_UP_TO_REV11,
-		.uc2_pos     = 0x464c0,  .uc2_length  = 0x3fe0,
-		.uc4_pos     = 0x4a4a4,  .uc4_length  = 0x4e78,
-		.uc5_pos     = 0x4f320,  .uc5_length  = 0x5700,
-		.uc11_pos    = 0x54a24,  .uc11_length = 0x54a8,
-		.pcm4_pos    = 0x59ed0,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x5a3f4,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl_ap.o",
-		.version     = "4.80.9.2",
-		.md5         = "dc87fafbb53fc70ca161be3de97b5be1",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               V4_FIRMWARE,
-		.iv_pos      = 0x4f0a0,
-		.iv_map      = INITVALS_MAP_V4_UP_TO_REV13,
-		.uc4_pos     = 0x53be0,  .uc4_length  = 0x4e28,
-		.uc5_pos     = 0x58a0c,  .uc5_length  = 0x55f8,
-		.uc11_pos    = 0x5e010,  .uc11_length = 0x6130,
-		.uc13_pos    = 0x64144,  .uc13_length = 0x5d18,
-		.pcm4_pos    = 0x69e60,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x6a384,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl_ap.o",
-		.version     = "4.80.17.0",
-		.md5         = "5f698bc71300590208dcfe86e8dde860",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               V4_FIRMWARE,
-		.iv_pos      = 0x4fa40,
-		.iv_map      = INITVALS_MAP_V4_UP_TO_REV13,
-		.uc4_pos     = 0x54580,  .uc4_length  = 0x4e28,
-		.uc5_pos     = 0x593ac,  .uc5_length  = 0x55f8,
-		.uc11_pos    = 0x5e9b0,  .uc11_length = 0x6160,
-		.uc13_pos    = 0x64b14,  .uc13_length = 0x5d40,
-		.pcm4_pos    = 0x6a858,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x6ad7c,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl_apsta.o",
-		.version     = "3.31.16.0",                            /* 06/08/2003 */
-		.md5         = "22b90e4cbeee45ad7f78ff536c65712a",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x38020,
-		.iv_map      = INITVALS_MAP_V3_WITHOUT_IV8,
-		.uc2_pos     = 0x3b100,  .uc2_length  = 0x3d88,
-		.uc4_pos     = 0x3ee8c,  .uc4_length  = 0x44a0,
-		.uc5_pos     = 0x43330,  .uc5_length  = 0x4ec0,
-		.pcm4_pos    = 0x481f4,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x48670,  .pcm5_length = 0x478,
-	},
-	{
-		.name        = "wl_apsta.o",
-		.version     = "3.31.16.0",                            /* 06/08/2003 */
-		.md5         = "dfce35a8b5cb6e53e1ab75342c7e7194",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x38020,
-		.iv_map      = INITVALS_MAP_V3_WITHOUT_IV8,
-		.uc2_pos     = 0x3b100,  .uc2_length  = 0x3d88,
-		.uc4_pos     = 0x3ee8c,  .uc4_length  = 0x44a0,
-		.uc5_pos     = 0x43330,  .uc5_length  = 0x4ec0,
-		.pcm4_pos    = 0x481f4,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x48670,  .pcm5_length = 0x478,
-	},
-	{
-		.name        = "wl_apsta.o",
-		.version     = "3.90.7.0",
-		.md5         = "8aec09b7cf92538182729eddc6d89d97",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x4d890,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x51500,  .uc2_length  = 0x3ec0,
-		.uc4_pos     = 0x553c4,  .uc4_length  = 0x4d60,
-		.uc5_pos     = 0x5a128,  .uc5_length  = 0x5750,
-		.pcm4_pos    = 0x5f87c,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x5fda0,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl_apsta.o",
-		.version     = "3.90.37.0",                            /* 15/02/2005 */
-		.md5         = "2922e6c48917eacd6c8c094347d2ec4b",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x4ebc0,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x52830,  .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x5677c,  .uc4_length  = 0x4df0,
-		.uc5_pos     = 0x5b570,  .uc5_length  = 0x57e0,
-		.pcm4_pos    = 0x60d54,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x61278,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl_apsta.o",
-		.version     = "3.90.37.0",                            /* 15/02/2005 */
-		.md5         = "f9fa565a766e8befeb495a8a8c0c134b",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x4ebc0,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x52830,  .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x5677c,  .uc4_length  = 0x4df0,
-		.uc5_pos     = 0x5b570,  .uc5_length  = 0x57e0,
-		.pcm4_pos    = 0x60d54,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x61278,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl_apsta.o",
-		.version     = "3.130.20.0",                           /* 19/05/2005 */
-		.md5         = "e08665c5c5b66beb9c3b2dd54aa80cb3",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x56020,
-		.iv_map      = INITVALS_MAP_V3_UP_TO_REV11,
-		.uc2_pos     = 0x59ca0,  .uc2_length  = 0x3fe0,
-		.uc4_pos     = 0x5dc84,  .uc4_length  = 0x4e78,
-		.uc5_pos     = 0x62b00,  .uc5_length  = 0x5700,
-		.uc11_pos    = 0x68204,  .uc11_length = 0x54a8,
-		.pcm4_pos    = 0x6d6b0,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x6dbd4,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl_apsta.o",
-		.version     = "3.130.35.0",
-		.md5         = "e88dbfc4dfeff43ce9028c74bd0088c7",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x57c80,
-		.iv_map      = INITVALS_MAP_V3_UP_TO_REV11,
-		.uc2_pos     = 0x5b900,  .uc2_length  = 0x3fe0,
-		.uc4_pos     = 0x5f8e4,  .uc4_length  = 0x4e78,
-		.uc5_pos     = 0x64760,  .uc5_length  = 0x5700,
-		.uc11_pos    = 0x69e64,  .uc11_length = 0x54a8,
-		.pcm4_pos    = 0x6f310,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x6f834,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl_apsta.o",
-		.version     = "4.80.9.1",
-		.md5         = "5cc3774df07ef15506d08e45fab9b691",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               V4_FIRMWARE,
-		.iv_pos      = 0x70220,
-		.iv_map      = INITVALS_MAP_V4_UP_TO_REV13,
-		.uc4_pos     = 0x75998,  .uc4_length  = 0x4e28,
-		.uc5_pos     = 0x7a7c4,  .uc5_length  = 0x55f8,
-		.uc11_pos    = 0x7fdc8,  .uc11_length = 0x60f0,
-		.uc13_pos    = 0x85ebc,  .uc13_length = 0x5d18,
-		.pcm4_pos    = 0x8bbd8,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x8c0fc,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl_apsta.o",
-		.version     = "4.80.9.1",
-		.md5         = "cfc06ff322a4e3024bc4040ebe3d1bb9",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               V4_FIRMWARE,
-		.iv_pos      = 0x632a0,
-		.iv_map      = INITVALS_MAP_V4_UP_TO_REV13,
-		.uc4_pos     = 0x67de0,  .uc4_length  = 0x4e28,
-		.uc5_pos     = 0x6cc0c,  .uc5_length  = 0x55f8,
-		.uc11_pos    = 0x72210,  .uc11_length = 0x60f0,
-		.uc13_pos    = 0x78304,  .uc13_length = 0x5d18,
-		.pcm4_pos    = 0x7e020,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x7e544,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl_apsta.o",
-		.version     = "4.80.9.2",
-		.md5         = "2b353750e7063949fa08951370c8b06b",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               V4_FIRMWARE,
-		.iv_pos      = 0x632c0,
-		.iv_map      = INITVALS_MAP_V4_UP_TO_REV13,
-		.uc4_pos     = 0x67e00,  .uc4_length  = 0x4e28,
-		.uc5_pos     = 0x6cc2c,  .uc5_length  = 0x55f8,
-		.uc11_pos    = 0x72230,  .uc11_length = 0x6130,
-		.uc13_pos    = 0x78364,  .uc13_length = 0x5d18,
-		.pcm4_pos    = 0x7e080,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x7e5a4,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl_apsta.o",
-		.version     = "4.80.17.0",
-		.md5         = "1fb9e0cc7613ccb82c8e2da3da888ed1",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               V4_FIRMWARE,
-		.iv_pos      = 0x63e30,
-		.iv_map      = INITVALS_MAP_V4_UP_TO_REV13,
-		.uc4_pos     = 0x68970,  .uc4_length  = 0x4e28,
-		.uc5_pos     = 0x6d79c,  .uc5_length  = 0x55f8,
-		.uc11_pos    = 0x72da0,  .uc11_length = 0x6160,
-		.uc13_pos    = 0x78f04,  .uc13_length = 0x5d40,
-		.pcm4_pos    = 0x7ec48,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x7f16c,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl_apsta.o",
-		.version     = "4.80.53.0",
-		.md5         = "9207bc565c2fc9fa1591f6c7911d3fc0",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               V4_FIRMWARE,
-		.iv_pos      = 0x67930,
-		.iv_map      = INITVALS_MAP_V4_80_46,
-		.uc4_pos     = 0x6dcf8,  .uc4_length  = 0x4e68,
-		.uc5_pos     = 0x72b64,  .uc5_length  = 0x5640,
-		.uc11_pos    = 0x781b0,  .uc11_length = 0x67e0,
-		.uc13_pos    = 0x7e994,  .uc13_length = 0x5f60,
-		.pcm4_pos    = 0x848f8,	 .pcm4_length = 0x520,
-		.pcm5_pos    = 0x84e1c,	 .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl_sta.o",
-		.version     = "3.31.16.0",                            /* 08/06/2003 */
-		.md5         = "c3e663cb78b2fc299088de69fc11a9a9",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x317b0,
-		.iv_map      = INITVALS_MAP_V3_WITHOUT_IV8,
-		.uc2_pos     = 0x34890,  .uc2_length  = 0x3d88,
-		.uc4_pos     = 0x3861c,  .uc4_length  = 0x44a0,
-		.uc5_pos     = 0x3cac0,  .uc5_length  = 0x4ec0,
-		.pcm4_pos    = 0x41984,  .pcm4_length = 0x478,
-		.pcm5_pos    = 0x41e00,  .pcm5_length = 0x478,
-	},
-	{
-		.name        = "wl_sta.o",
-		.version     = "3.90.7.0",
-		.md5         = "df4eeee4c50323c823527084cbac7935",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x45d10,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x49980,  .uc2_length  = 0x3ec0,
-		.uc4_pos     = 0x4d844,  .uc4_length  = 0x4d60,
-		.uc5_pos     = 0x525a8,  .uc5_length  = 0x5750,
-		.pcm4_pos    = 0x57cfc,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x58220,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl_sta.o",
-		.version     = "3.90.37.0",                            /* 15/02/2005 */
-		.md5         = "4631d4d4c3ab943462e1ea24f4dba7bd",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x47040,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x4acb0,  .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x4ebfc,  .uc4_length  = 0x4df0,
-		.uc5_pos     = 0x539f0,  .uc5_length  = 0x57e0,
-		.pcm4_pos    = 0x591d4,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x596f8,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl_sta.o",
-		.version     = "3.90.37.0",                            /* 15/02/2005 */
-		.md5         = "bf824b38b3993e0a8b5a9bf717c428ed",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x47040,
-		.iv_map      = INITVALS_MAP_V3_DEFAULT,
-		.uc2_pos     = 0x4acb0,  .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x4ebfc,  .uc4_length  = 0x4df0,
-		.uc5_pos     = 0x539f0,  .uc5_length  = 0x57e0,
-		.pcm4_pos    = 0x591d4,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x596f8,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl_sta.o",
-		.version     = "3.130.20.0",
-		.md5         = "dbe071c3090297c1014c1c7f56d655ce",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN,
-		.iv_pos      = 0x4b160,
-		.iv_map      = INITVALS_MAP_V3_UP_TO_REV11,
-		.uc2_pos     = 0x4ede0,  .uc2_length  = 0x3fe0,
-		.uc4_pos     = 0x52dc4,  .uc4_length  = 0x4e78,
-		.uc5_pos     = 0x57c40,  .uc5_length  = 0x5700,
-		.uc11_pos    = 0x5d344,  .uc11_length = 0x54a8,
-		.pcm4_pos    = 0x627f0,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x62d14,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl_sta.o",
-		.version     = "4.80.9.2",
-		.md5         = "a4a396c45a4e88526fa8a8baca681cd3",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               V4_FIRMWARE,
-		.iv_pos      = 0x54b00,
-		.iv_map      = INITVALS_MAP_V4_UP_TO_REV13,
-		.uc4_pos     = 0x59640,  .uc4_length  = 0x4e28,
-		.uc5_pos     = 0x5e46c,  .uc5_length  = 0x55f8,
-		.uc11_pos    = 0x63a70,  .uc11_length = 0x6130,
-		.uc13_pos    = 0x69ba4,  .uc13_length = 0x5d18,
-		.pcm4_pos    = 0x6f8c0,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x6fde4,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl_sta.o",
-		.version     = "4.80.17.0",
-		.md5         = "30e0f1a8fea33d4869e1a45ed3a91b1b",
-		.flags       = BYTE_ORDER_LITTLE_ENDIAN |
-		               V4_FIRMWARE,
-		.iv_pos      = 0x55530,
-		.iv_map      = INITVALS_MAP_V4_UP_TO_REV13,
-		.uc4_pos     = 0x5a070,  .uc4_length  = 0x4e28,
-		.uc5_pos     = 0x5ee9c,  .uc5_length  = 0x55f8,
-		.uc11_pos    = 0x644a0,  .uc11_length = 0x6160,
-		.uc13_pos    = 0x6a604,  .uc13_length = 0x5d40,
-		.pcm4_pos    = 0x70348,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x7086c,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl96345GW.o_save",
-		.version     = "3.91.41.0",
-		.md5         = "1b1b9cdceccf0758a6bb21371edfe011",
-		.flags       = BYTE_ORDER_BIG_ENDIAN,
-		.iv_pos      = 0x523cc,
-		.iv_map      = INITVALS_MAP_V3_REVERSE_ORDER,
-		.uc2_pos     = 0x4e484,  .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x49690,  .uc4_length  = 0x4df0,
-		.uc5_pos     = 0x43eac,  .uc5_length  = 0x57e0,
-		.pcm4_pos    = 0x43988,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x43464,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl96348GW.o_save",
-		.version     = "3.91.41.0",
-		.md5         = "4578369ebe849f268b464d7fb3d1ea6b",
-		.flags       = BYTE_ORDER_BIG_ENDIAN,
-		.iv_pos      = 0x5152c,
-		.iv_map      = INITVALS_MAP_V3_REVERSE_ORDER,
-		.uc2_pos     = 0x4d5e4,  .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x487f0,  .uc4_length  = 0x4df0,
-		.uc5_pos     = 0x4300c,  .uc5_length  = 0x57e0,
-		.pcm4_pos    = 0x42ae8,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x425c4,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl96348GW.o_save",
-		.version     = "3.91.41.0",
-		.md5         = "4b64e7bf6b308cd8433ba5f04a091a79",
-		.flags       = BYTE_ORDER_BIG_ENDIAN,
-		.iv_pos      = 0x5147c,
-		.iv_map      = INITVALS_MAP_V3_REVERSE_ORDER,
-		.uc2_pos     = 0x4d534,  .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x48740,  .uc4_length  = 0x4df0,
-		.uc5_pos     = 0x42f5c,  .uc5_length  = 0x57e0,
-		.pcm4_pos    = 0x42a38,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x42514,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl96348GW.o_save",
-		.version     = "3.131.35.0",
-		.md5         = "4af53099070fc26a755c42e86c824003",
-		.flags       = BYTE_ORDER_BIG_ENDIAN,
-		.iv_pos      = 0x74628,
-		.iv_map      = INITVALS_MAP_V3_UP_TO_REV11_REVERSE_ORDER,
-		.uc2_pos     = 0x70648,  .uc2_length  = 0x3fe0,
-		.uc4_pos     = 0x6b7cc,  .uc4_length  = 0x4e78,
-		.uc5_pos     = 0x660c8,  .uc5_length  = 0x5700,
-		.uc11_pos    = 0x60c1c,  .uc11_length = 0x54a8,
-		.pcm4_pos    = 0x606f8,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x601d4,  .pcm5_length = 0x520,
-	},
-	{
-		.name        = "wl96348GWV_DT.o_save",
-		.version     = "3.91.41.0",
-		.md5         = "e48ecf90086e48061f49cd4af2c158b3",
-		.flags       = BYTE_ORDER_BIG_ENDIAN,
-		.iv_pos      = 0x54dec,
-		.iv_map      = INITVALS_MAP_V3_REVERSE_ORDER,
-		.uc2_pos     = 0x50ea4,  .uc2_length  = 0x3f48,
-		.uc4_pos     = 0x4c0b0,  .uc4_length  = 0x4df0,
-		.uc5_pos     = 0x468cc,  .uc5_length  = 0x57e0,
-		.pcm4_pos    = 0x463a8,  .pcm4_length = 0x520,
-		.pcm5_pos    = 0x45e84,  .pcm5_length = 0x520,
-	},
 };
 
 #define FILES (sizeof(files) / sizeof(files[0]))

Modified: trunk/fwcutter/md5.c
===================================================================
--- trunk/fwcutter/md5.c	2007-08-08 13:59:04 UTC (rev 1227)
+++ trunk/fwcutter/md5.c	2007-08-15 17:26:29 UTC (rev 1228)
@@ -19,29 +19,24 @@
    prototypes) to maintain the tradition that Netfone will compile
    with Sun's original "cc". */
 /* Ripped out ugly K&R again ;) --mbuesch */
+/* killed stupid endianness thing --jmberg */
 
 #include <memory.h>		 /* for memcpy() */
 #include "md5.h"
 
-extern int big_endian_cpu;
-
-/*
- * Note: this code is harmless on little-endian machines,
- *       but we return early nevertheless.
- */
 static void byteReverse(unsigned char *buf, unsigned longs)
 {
+#if __BYTE_ORDER == __LITTLE_ENDIAN
+/* we need the value in big-endian */
     uint32_t t;
 
-    if (!big_endian_cpu)
-        return;
-
     do {
 	t = (uint32_t) ((unsigned) buf[3] << 8 | buf[2]) << 16 |
 	    ((unsigned) buf[1] << 8 | buf[0]);
 	*(uint32_t *) buf = t;
 	buf += 4;
     } while (--longs);
+#endif
 }
 
 /* The four core functions - F1 is optimized somewhat */



From tuxbuesch at mail.berlios.de  Wed Aug 15 19:43:39 2007
From: tuxbuesch at mail.berlios.de (tuxbuesch at BerliOS)
Date: Wed, 15 Aug 2007 19:43:39 +0200
Subject: r1229 - trunk/fwcutter
Message-ID: <200708151743.l7FHhdec028137@sheep.berlios.de>

Author: tuxbuesch
Date: 2007-08-15 19:43:39 +0200 (Wed, 15 Aug 2007)
New Revision: 1229

Modified:
   trunk/fwcutter/fwcutter_list.h
Log:
Remove d11 prefix



Modified: trunk/fwcutter/fwcutter_list.h
===================================================================
--- trunk/fwcutter/fwcutter_list.h	2007-08-15 17:26:29 UTC (rev 1228)
+++ trunk/fwcutter/fwcutter_list.h	2007-08-15 17:43:39 UTC (rev 1229)
@@ -2,113 +2,113 @@
 /* file member lists */
 struct extract _e08665c5c5b66beb9c3b2dd54aa80cb3[] =
 {
-	{ .name = "d11ucode2", .offset = 0x59ca0, .length = 0x3fe0, .type = EXT_UCODE_1, },
-	{ .name = "d11ucode4", .offset = 0x5dc84, .length = 0x4e78, .type = EXT_UCODE_1, },
-	{ .name = "d11ucode5", .offset = 0x62b00, .length = 0x5700, .type = EXT_UCODE_2, },
-	{ .name = "d11ucode11", .offset = 0x68204, .length = 0x54a8, .type = EXT_UCODE_2, },
-	{ .name = "d11pcm4", .offset = 0x6d6b0, .length = 0x520, .type = EXT_PCM, },
-	{ .name = "d11pcm5", .offset = 0x6dbd4, .length = 0x520, .type = EXT_PCM, },
-	{ .name = "d11a0g0bsinitvals2", .offset = 0x54ad0 + 0x30d8, .length = 0x18 - 8, .type = EXT_IV, },
-	{ .name = "d11b0g0bsinitvals5", .offset = 0x54ad0 + 0x3ae0, .length = 0x100 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g0initvals5", .offset = 0x54ad0 + 0x3be0, .length = 0x9f0 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g1bsinitvals5", .offset = 0x54ad0 + 0x50c0, .length = 0x100 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g0initvals2", .offset = 0x54ad0 + 0x2320, .length = 0xdb8 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g1initvals5", .offset = 0x54ad0 + 0x45d0, .length = 0x9f0 - 8, .type = EXT_IV, },
-	{ .name = "d11b0g0bsinitvals2", .offset = 0x54ad0 + 0x2308, .length = 0x18 - 8, .type = EXT_IV, },
-	{ .name = "d11b0g0initvals5", .offset = 0x54ad0 + 0x30f0, .length = 0x9f0 - 8, .type = EXT_IV, },
-	{ .name = "d11b0g0initvals2", .offset = 0x54ad0 + 0x1550, .length = 0xdb8 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g0bsinitvals5", .offset = 0x54ad0 + 0x4fc0, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "ucode2", .offset = 0x59ca0, .length = 0x3fe0, .type = EXT_UCODE_1, },
+	{ .name = "ucode4", .offset = 0x5dc84, .length = 0x4e78, .type = EXT_UCODE_1, },
+	{ .name = "ucode5", .offset = 0x62b00, .length = 0x5700, .type = EXT_UCODE_2, },
+	{ .name = "ucode11", .offset = 0x68204, .length = 0x54a8, .type = EXT_UCODE_2, },
+	{ .name = "pcm4", .offset = 0x6d6b0, .length = 0x520, .type = EXT_PCM, },
+	{ .name = "pcm5", .offset = 0x6dbd4, .length = 0x520, .type = EXT_PCM, },
+	{ .name = "a0g0bsinitvals2", .offset = 0x54ad0 + 0x30d8, .length = 0x18 - 8, .type = EXT_IV, },
+	{ .name = "b0g0bsinitvals5", .offset = 0x54ad0 + 0x3ae0, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "a0g0initvals5", .offset = 0x54ad0 + 0x3be0, .length = 0x9f0 - 8, .type = EXT_IV, },
+	{ .name = "a0g1bsinitvals5", .offset = 0x54ad0 + 0x50c0, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "a0g0initvals2", .offset = 0x54ad0 + 0x2320, .length = 0xdb8 - 8, .type = EXT_IV, },
+	{ .name = "a0g1initvals5", .offset = 0x54ad0 + 0x45d0, .length = 0x9f0 - 8, .type = EXT_IV, },
+	{ .name = "b0g0bsinitvals2", .offset = 0x54ad0 + 0x2308, .length = 0x18 - 8, .type = EXT_IV, },
+	{ .name = "b0g0initvals5", .offset = 0x54ad0 + 0x30f0, .length = 0x9f0 - 8, .type = EXT_IV, },
+	{ .name = "b0g0initvals2", .offset = 0x54ad0 + 0x1550, .length = 0xdb8 - 8, .type = EXT_IV, },
+	{ .name = "a0g0bsinitvals5", .offset = 0x54ad0 + 0x4fc0, .length = 0x100 - 8, .type = EXT_IV, },
 	EXTRACT_LIST_END
 };
 
 struct extract _9207bc565c2fc9fa1591f6c7911d3fc0[] =
 {
-	{ .name = "d11ucode4",  .offset = 0x66220 +  0x7ad8, .length = 0x4e68, .type = EXT_UCODE_1, },
-	{ .name = "d11ucode5",  .offset = 0x66220 +  0xc944, .length = 0x5640, .type = EXT_UCODE_2, },
-	{ .name = "d11ucode11", .offset = 0x66220 + 0x11f90, .length = 0x67e0, .type = EXT_UCODE_2, },
-	{ .name = "d11ucode13", .offset = 0x66220 + 0x18774, .length = 0x5f60, .type = EXT_UCODE_2, },
-	{ .name = "d11pcm4", .offset = 0x66220 + 0x1e6d8, .length = 0x520, .type = EXT_PCM, },
-	{ .name = "d11pcm5", .offset = 0x66220 + 0x1ebfc, .length = 0x520, .type = EXT_PCM, },
-	{ .name = "d11b0g0initvals4",	.offset = 0x66220 + 0x1710, .length = 0xe90 - 8, .type = EXT_IV, },
-	{ .name = "d11b0g0bsinitvals4",	.offset = 0x66220 + 0x25a0, .length = 0x18 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g0initvals4",	.offset = 0x66220 + 0x25b8, .length = 0xe90 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g0bsinitvals4",	.offset = 0x66220 + 0x3448, .length = 0x18 - 8, .type = EXT_IV, },
-	{ .name = "d11b0g0initvals5",	.offset = 0x66220 + 0x3460, .length = 0xa28 - 8, .type = EXT_IV, },
-	{ .name = "d11b0g0bsinitvals5",	.offset = 0x66220 + 0x3e88, .length = 0x100 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g0initvals5",	.offset = 0x66220 + 0x3f88, .length = 0xa28 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g1initvals5",	.offset = 0x66220 + 0x49b0, .length = 0xa28 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g0bsinitvals5",	.offset = 0x66220 + 0x53d8, .length = 0x100 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g1bsinitvals5",	.offset = 0x66220 + 0x54d8, .length = 0x100 - 8, .type = EXT_IV, },
-	{ .name = "d11lp0initvals13",	.offset = 0x66220 + 0x5620, .length = 0xb38 - 8, .type = EXT_IV, },
-	{ .name = "d11lp0bsinitvals13",	.offset = 0x66220 + 0x6158, .length = 0x100 - 8, .type = EXT_IV, },
-	{ .name = "d11b0g0initvals13",	.offset = 0x66220 + 0x6258, .length = 0xb40 - 8, .type = EXT_IV, },
-	{ .name = "d11b0g0bsinitvals13",.offset = 0x66220 + 0x6d98, .length = 0x100 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g1initvals13",	.offset = 0x66220 + 0x6e98, .length = 0xb40 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g1bsinitvals13",.offset = 0x66220 + 0x79d8, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "ucode4",  .offset = 0x66220 +  0x7ad8, .length = 0x4e68, .type = EXT_UCODE_1, },
+	{ .name = "ucode5",  .offset = 0x66220 +  0xc944, .length = 0x5640, .type = EXT_UCODE_2, },
+	{ .name = "ucode11", .offset = 0x66220 + 0x11f90, .length = 0x67e0, .type = EXT_UCODE_2, },
+	{ .name = "ucode13", .offset = 0x66220 + 0x18774, .length = 0x5f60, .type = EXT_UCODE_2, },
+	{ .name = "pcm4", .offset = 0x66220 + 0x1e6d8, .length = 0x520, .type = EXT_PCM, },
+	{ .name = "pcm5", .offset = 0x66220 + 0x1ebfc, .length = 0x520, .type = EXT_PCM, },
+	{ .name = "b0g0initvals4",	.offset = 0x66220 + 0x1710, .length = 0xe90 - 8, .type = EXT_IV, },
+	{ .name = "b0g0bsinitvals4",	.offset = 0x66220 + 0x25a0, .length = 0x18 - 8, .type = EXT_IV, },
+	{ .name = "a0g0initvals4",	.offset = 0x66220 + 0x25b8, .length = 0xe90 - 8, .type = EXT_IV, },
+	{ .name = "a0g0bsinitvals4",	.offset = 0x66220 + 0x3448, .length = 0x18 - 8, .type = EXT_IV, },
+	{ .name = "b0g0initvals5",	.offset = 0x66220 + 0x3460, .length = 0xa28 - 8, .type = EXT_IV, },
+	{ .name = "b0g0bsinitvals5",	.offset = 0x66220 + 0x3e88, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "a0g0initvals5",	.offset = 0x66220 + 0x3f88, .length = 0xa28 - 8, .type = EXT_IV, },
+	{ .name = "a0g1initvals5",	.offset = 0x66220 + 0x49b0, .length = 0xa28 - 8, .type = EXT_IV, },
+	{ .name = "a0g0bsinitvals5",	.offset = 0x66220 + 0x53d8, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "a0g1bsinitvals5",	.offset = 0x66220 + 0x54d8, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "lp0initvals13",	.offset = 0x66220 + 0x5620, .length = 0xb38 - 8, .type = EXT_IV, },
+	{ .name = "lp0bsinitvals13",	.offset = 0x66220 + 0x6158, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "b0g0initvals13",	.offset = 0x66220 + 0x6258, .length = 0xb40 - 8, .type = EXT_IV, },
+	{ .name = "b0g0bsinitvals13",.offset = 0x66220 + 0x6d98, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "a0g1initvals13",	.offset = 0x66220 + 0x6e98, .length = 0xb40 - 8, .type = EXT_IV, },
+	{ .name = "a0g1bsinitvals13",.offset = 0x66220 + 0x79d8, .length = 0x100 - 8, .type = EXT_IV, },
 	EXTRACT_LIST_END
 };
 
 struct extract _722e2e0d8cc04b8f118bb5afe6829ff9[] =
 {
-	{ .name = "d11ucode4",  .offset = 0x76a10 +  0x8960, .length = 0x4e68, .type = EXT_UCODE_1, },
-	{ .name = "d11ucode5",  .offset = 0x76a10 +  0xd7cc, .length = 0x5640, .type = EXT_UCODE_2, },
-	{ .name = "d11ucode11", .offset = 0x76a10 + 0x12e18, .length = 0x67e0, .type = EXT_UCODE_2, },
-	{ .name = "d11ucode13", .offset = 0x76a10 + 0x195fc, .length = 0x5f60, .type = EXT_UCODE_2, },
-	{ .name = "d11pcm4", .offset = 0x76a10 + 0x1f560, .length = 0x520, .type = EXT_PCM, },
-	{ .name = "d11pcm5", .offset = 0x76a10 + 0x1fa84, .length = 0x520, .type = EXT_PCM, },
-	{ .name = "d11b0g0initvals4",	.offset = 0x76a10 + 0x1840, .length = 0xe90 - 8, .type = EXT_IV, },
-	{ .name = "d11b0g0bsinitvals4",	.offset = 0x76a10 + 0x26d0, .length = 0x18 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g0initvals4",	.offset = 0x76a10 + 0x26e8, .length = 0xe90 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g0bsinitvals4",	.offset = 0x76a10 + 0x3578, .length = 0x18 - 8, .type = EXT_IV, },
-	{ .name = "d11b0g0initvals5",	.offset = 0x76a10 + 0x3590, .length = 0xa28 - 8, .type = EXT_IV, },
-	{ .name = "d11b0g0bsinitvals5",	.offset = 0x76a10 + 0x3fb8, .length = 0x100 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g0initvals5",	.offset = 0x76a10 + 0x40b8, .length = 0xa28 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g1initvals5",	.offset = 0x76a10 + 0x4ae0, .length = 0xa28 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g0bsinitvals5",	.offset = 0x76a10 + 0x5508, .length = 0x100 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g1bsinitvals5",	.offset = 0x76a10 + 0x5608, .length = 0x100 - 8, .type = EXT_IV, },
-	{ .name = "d11lp0initvals13",	.offset = 0x76a10 + 0x64a8, .length = 0xb38 - 8, .type = EXT_IV, },
-	{ .name = "d11lp0bsinitvals13",	.offset = 0x76a10 + 0x6fe0, .length = 0x100 - 8, .type = EXT_IV, },
-	{ .name = "d11b0g0initvals13",	.offset = 0x76a10 + 0x70e0, .length = 0xb40 - 8, .type = EXT_IV, },
-	{ .name = "d11b0g0bsinitvals13",.offset = 0x76a10 + 0x7c20, .length = 0x100 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g1initvals13",	.offset = 0x76a10 + 0x7d20, .length = 0xb40 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g1bsinitvals13",.offset = 0x76a10 + 0x8860, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "ucode4",  .offset = 0x76a10 +  0x8960, .length = 0x4e68, .type = EXT_UCODE_1, },
+	{ .name = "ucode5",  .offset = 0x76a10 +  0xd7cc, .length = 0x5640, .type = EXT_UCODE_2, },
+	{ .name = "ucode11", .offset = 0x76a10 + 0x12e18, .length = 0x67e0, .type = EXT_UCODE_2, },
+	{ .name = "ucode13", .offset = 0x76a10 + 0x195fc, .length = 0x5f60, .type = EXT_UCODE_2, },
+	{ .name = "pcm4", .offset = 0x76a10 + 0x1f560, .length = 0x520, .type = EXT_PCM, },
+	{ .name = "pcm5", .offset = 0x76a10 + 0x1fa84, .length = 0x520, .type = EXT_PCM, },
+	{ .name = "b0g0initvals4",	.offset = 0x76a10 + 0x1840, .length = 0xe90 - 8, .type = EXT_IV, },
+	{ .name = "b0g0bsinitvals4",	.offset = 0x76a10 + 0x26d0, .length = 0x18 - 8, .type = EXT_IV, },
+	{ .name = "a0g0initvals4",	.offset = 0x76a10 + 0x26e8, .length = 0xe90 - 8, .type = EXT_IV, },
+	{ .name = "a0g0bsinitvals4",	.offset = 0x76a10 + 0x3578, .length = 0x18 - 8, .type = EXT_IV, },
+	{ .name = "b0g0initvals5",	.offset = 0x76a10 + 0x3590, .length = 0xa28 - 8, .type = EXT_IV, },
+	{ .name = "b0g0bsinitvals5",	.offset = 0x76a10 + 0x3fb8, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "a0g0initvals5",	.offset = 0x76a10 + 0x40b8, .length = 0xa28 - 8, .type = EXT_IV, },
+	{ .name = "a0g1initvals5",	.offset = 0x76a10 + 0x4ae0, .length = 0xa28 - 8, .type = EXT_IV, },
+	{ .name = "a0g0bsinitvals5",	.offset = 0x76a10 + 0x5508, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "a0g1bsinitvals5",	.offset = 0x76a10 + 0x5608, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "lp0initvals13",	.offset = 0x76a10 + 0x64a8, .length = 0xb38 - 8, .type = EXT_IV, },
+	{ .name = "lp0bsinitvals13",	.offset = 0x76a10 + 0x6fe0, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "b0g0initvals13",	.offset = 0x76a10 + 0x70e0, .length = 0xb40 - 8, .type = EXT_IV, },
+	{ .name = "b0g0bsinitvals13",.offset = 0x76a10 + 0x7c20, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "a0g1initvals13",	.offset = 0x76a10 + 0x7d20, .length = 0xb40 - 8, .type = EXT_IV, },
+	{ .name = "a0g1bsinitvals13",.offset = 0x76a10 + 0x8860, .length = 0x100 - 8, .type = EXT_IV, },
 	EXTRACT_LIST_END
 };
 
 struct extract _1e4763b4cb8cfbaae43e5c6d3d6b2ae7[] =
 {
-	{ .name = "d11ucode5",  .offset = 0x71c80 +  0xacd0, .length = 0x5768, .type = EXT_UCODE_2, },
-	{ .name = "d11ucode9",  .offset = 0x71c80 + 0x1043c, .length = 0x6240, .type = EXT_UCODE_2, },
-	{ .name = "d11ucode11", .offset = 0x71c80 + 0x16680, .length = 0x74a0, .type = EXT_UCODE_2, },
-	{ .name = "d11ucode13", .offset = 0x71c80 + 0x1db24, .length = 0x7de0, .type = EXT_UCODE_2, },
-	{ .name = "d11ucode14", .offset = 0x71c80 + 0x25908, .length = 0x7a90, .type = EXT_UCODE_2, },
-	{ .name = "d11ucode15", .offset = 0x71c80 + 0x2d39c, .length = 0x7710, .type = EXT_UCODE_3, },
-	{ .name = "d11pcm5", .offset = 0x71c80 + 0x34ab0, .length = 0x520, .type = EXT_PCM, },
-	{ .name = "d11b0g0initvals5",	.offset = 0x71c80 + 0x14d0, .length = 0xa10 - 8, .type = EXT_IV, },
-	{ .name = "d11b0g0bsinitvals5",	.offset = 0x71c80 + 0x1ee0, .length = 0x100 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g0initvals5",	.offset = 0x71c80 + 0x1fe0, .length = 0xa10 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g1initvals5",	.offset = 0x71c80 + 0x29f0, .length = 0xa10 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g0bsinitvals5",	.offset = 0x71c80 + 0x3400, .length = 0x100 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g1bsinitvals5",	.offset = 0x71c80 + 0x3500, .length = 0x100 - 8, .type = EXT_IV, },
-	{ .name = "d11b0g0initvals9",	.offset = 0x71c80 + 0x3600, .length = 0xae8 - 8, .type = EXT_IV, },
-	{ .name = "d11b0g0bsinitvals9",	.offset = 0x71c80 + 0x40e8, .length = 0x100 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g0initvals9",	.offset = 0x71c80 + 0x41e8, .length = 0xae8 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g1initvals9",	.offset = 0x71c80 + 0x4cd0, .length = 0xae8 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g0bsinitvals9",	.offset = 0x71c80 + 0x57b8, .length = 0x100 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g1bsinitvals9",	.offset = 0x71c80 + 0x58b8, .length = 0x100 - 8, .type = EXT_IV, },
-	{ .name = "d11n0initvals11",	.offset = 0x71c80 + 0x59b8, .length = 0xb78 - 8, .type = EXT_IV, },
-	{ .name = "d11n0bsinitvals11",	.offset = 0x71c80 + 0x6530, .length = 0x100 - 8, .type = EXT_IV, },
-	{ .name = "d11n0absinitvals11",	.offset = 0x71c80 + 0x6630, .length = 0x100 - 8, .type = EXT_IV, },
-	{ .name = "d11lp0initvals13",	.offset = 0x71c80 + 0x6730, .length = 0x1360 - 8, .type = EXT_IV, },
-	{ .name = "d11lp0bsinitvals13",	.offset = 0x71c80 + 0x7a90, .length = 0x100 - 8, .type = EXT_IV, },
-	{ .name = "d11b0g0initvals13",	.offset = 0x71c80 + 0x7b90, .length = 0xb60 - 8, .type = EXT_IV, },
-	{ .name = "d11b0g0bsinitvals13",.offset = 0x71c80 + 0x86f0, .length = 0x100 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g1initvals13",	.offset = 0x71c80 + 0x87f0, .length = 0xb60 - 8, .type = EXT_IV, },
-	{ .name = "d11a0g1bsinitvals13",.offset = 0x71c80 + 0x9350, .length = 0x100 - 8, .type = EXT_IV, },
-	{ .name = "d11lp0initvals14",	.offset = 0x71c80 + 0x9450, .length = 0xb48 - 8, .type = EXT_IV, },
-	{ .name = "d11lp0bsinitvals14",	.offset = 0x71c80 + 0x9f98, .length = 0x100 - 8, .type = EXT_IV, },
-	{ .name = "d11lp0initvals15",	.offset = 0x71c80 + 0xa098, .length = 0xb38 - 8, .type = EXT_IV, },
-	{ .name = "d11lp0bsinitvals15",	.offset = 0x71c80 + 0xabd0, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "ucode5",  .offset = 0x71c80 +  0xacd0, .length = 0x5768, .type = EXT_UCODE_2, },
+	{ .name = "ucode9",  .offset = 0x71c80 + 0x1043c, .length = 0x6240, .type = EXT_UCODE_2, },
+	{ .name = "ucode11", .offset = 0x71c80 + 0x16680, .length = 0x74a0, .type = EXT_UCODE_2, },
+	{ .name = "ucode13", .offset = 0x71c80 + 0x1db24, .length = 0x7de0, .type = EXT_UCODE_2, },
+	{ .name = "ucode14", .offset = 0x71c80 + 0x25908, .length = 0x7a90, .type = EXT_UCODE_2, },
+	{ .name = "ucode15", .offset = 0x71c80 + 0x2d39c, .length = 0x7710, .type = EXT_UCODE_3, },
+	{ .name = "pcm5", .offset = 0x71c80 + 0x34ab0, .length = 0x520, .type = EXT_PCM, },
+	{ .name = "b0g0initvals5",	.offset = 0x71c80 + 0x14d0, .length = 0xa10 - 8, .type = EXT_IV, },
+	{ .name = "b0g0bsinitvals5",	.offset = 0x71c80 + 0x1ee0, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "a0g0initvals5",	.offset = 0x71c80 + 0x1fe0, .length = 0xa10 - 8, .type = EXT_IV, },
+	{ .name = "a0g1initvals5",	.offset = 0x71c80 + 0x29f0, .length = 0xa10 - 8, .type = EXT_IV, },
+	{ .name = "a0g0bsinitvals5",	.offset = 0x71c80 + 0x3400, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "a0g1bsinitvals5",	.offset = 0x71c80 + 0x3500, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "b0g0initvals9",	.offset = 0x71c80 + 0x3600, .length = 0xae8 - 8, .type = EXT_IV, },
+	{ .name = "b0g0bsinitvals9",	.offset = 0x71c80 + 0x40e8, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "a0g0initvals9",	.offset = 0x71c80 + 0x41e8, .length = 0xae8 - 8, .type = EXT_IV, },
+	{ .name = "a0g1initvals9",	.offset = 0x71c80 + 0x4cd0, .length = 0xae8 - 8, .type = EXT_IV, },
+	{ .name = "a0g0bsinitvals9",	.offset = 0x71c80 + 0x57b8, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "a0g1bsinitvals9",	.offset = 0x71c80 + 0x58b8, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "n0initvals11",	.offset = 0x71c80 + 0x59b8, .length = 0xb78 - 8, .type = EXT_IV, },
+	{ .name = "n0bsinitvals11",	.offset = 0x71c80 + 0x6530, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "n0absinitvals11",	.offset = 0x71c80 + 0x6630, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "lp0initvals13",	.offset = 0x71c80 + 0x6730, .length = 0x1360 - 8, .type = EXT_IV, },
+	{ .name = "lp0bsinitvals13",	.offset = 0x71c80 + 0x7a90, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "b0g0initvals13",	.offset = 0x71c80 + 0x7b90, .length = 0xb60 - 8, .type = EXT_IV, },
+	{ .name = "b0g0bsinitvals13",.offset = 0x71c80 + 0x86f0, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "a0g1initvals13",	.offset = 0x71c80 + 0x87f0, .length = 0xb60 - 8, .type = EXT_IV, },
+	{ .name = "a0g1bsinitvals13",.offset = 0x71c80 + 0x9350, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "lp0initvals14",	.offset = 0x71c80 + 0x9450, .length = 0xb48 - 8, .type = EXT_IV, },
+	{ .name = "lp0bsinitvals14",	.offset = 0x71c80 + 0x9f98, .length = 0x100 - 8, .type = EXT_IV, },
+	{ .name = "lp0initvals15",	.offset = 0x71c80 + 0xa098, .length = 0xb38 - 8, .type = EXT_IV, },
+	{ .name = "lp0bsinitvals15",	.offset = 0x71c80 + 0xabd0, .length = 0x100 - 8, .type = EXT_IV, },
 	EXTRACT_LIST_END
 };
 



From tuxbuesch at mail.berlios.de  Wed Aug 15 19:50:05 2007
From: tuxbuesch at mail.berlios.de (tuxbuesch at BerliOS)
Date: Wed, 15 Aug 2007 19:50:05 +0200
Subject: r1230 - trunk/fwcutter
Message-ID: <200708151750.l7FHo5XV028755@sheep.berlios.de>

Author: tuxbuesch
Date: 2007-08-15 19:50:04 +0200 (Wed, 15 Aug 2007)
New Revision: 1230

Modified:
   trunk/fwcutter/fwcutter.c
Log:
.fw postfix



Modified: trunk/fwcutter/fwcutter.c
===================================================================
--- trunk/fwcutter/fwcutter.c	2007-08-15 17:43:39 UTC (rev 1229)
+++ trunk/fwcutter/fwcutter.c	2007-08-15 17:50:04 UTC (rev 1230)
@@ -195,7 +195,7 @@
 	}
 
 	r = snprintf(nbuf, sizeof(nbuf),
-		     "%s/%s/%s", cmdargs.target_dir, dir, name);
+		     "%s/%s/%s.fw", cmdargs.target_dir, dir, name);
 	if (r >= sizeof(nbuf)) {
 		fprintf(stderr, "name too long");
 		exit(2);
@@ -514,7 +514,7 @@
 
 	extract = file->extract;
 	while (extract->name) {
-		printf("%s %s/%s\n",
+		printf("%s %s/%s.fw\n",
 		       cmdargs.identify_only ? "Contains" : "Extracting",
 		       dir, extract->name);
 		extract_or_identify(fd, extract, file->flags);



From tuxbuesch at mail.berlios.de  Sat Aug 18 23:27:04 2007
From: tuxbuesch at mail.berlios.de (tuxbuesch at BerliOS)
Date: Sat, 18 Aug 2007 23:27:04 +0200
Subject: r1231 - trunk/fwcutter
Message-ID: <200708182127.l7ILR4wH018431@sheep.berlios.de>

Author: tuxbuesch
Date: 2007-08-18 23:27:04 +0200 (Sat, 18 Aug 2007)
New Revision: 1231

Modified:
   trunk/fwcutter/fwcutter.c
   trunk/fwcutter/fwcutter.h
Log:
Change file format to include a header and reduce IV file size.



Modified: trunk/fwcutter/fwcutter.c
===================================================================
--- trunk/fwcutter/fwcutter.c	2007-08-15 17:50:04 UTC (rev 1230)
+++ trunk/fwcutter/fwcutter.c	2007-08-18 21:27:04 UTC (rev 1231)
@@ -38,6 +38,57 @@
 
 static struct cmdline_args cmdargs;
 
+
+/* Convert a CPU-endian 16bit integer to Big-Endian */
+static be16_t to_be16(uint16_t v)
+{
+	uint8_t ret[2];
+
+	ret[0] = (v & 0xFF00) >> 8;
+	ret[1] = (v & 0x00FF);
+
+	return *((be16_t *)ret);
+}
+
+#if 0
+/* Convert a Big-Endian 16bit integer to CPU-endian */
+static uint16_t from_be16(be16_t v)
+{
+	uint16_t ret = 0;
+
+	ret |= (uint16_t)(((uint8_t *)&v)[0]) << 8;
+	ret |= (uint16_t)(((uint8_t *)&v)[1]);
+
+	return ret;
+}
+#endif
+
+/* Convert a CPU-endian 32bit integer to Big-Endian */
+static be32_t to_be32(uint32_t v)
+{
+	uint8_t ret[4];
+
+	ret[0] = (v & 0xFF000000) >> 24;
+	ret[1] = (v & 0x00FF0000) >> 16;
+	ret[2] = (v & 0x0000FF00) >> 8;
+	ret[3] = (v & 0x000000FF);
+
+	return *((be32_t *)ret);
+}
+
+/* Convert a Big-Endian 32bit integer to CPU-endian */
+static uint32_t from_be32(be32_t v)
+{
+	uint32_t ret = 0;
+
+	ret |= (uint32_t)(((uint8_t *)&v)[0]) << 24;
+	ret |= (uint32_t)(((uint8_t *)&v)[1]) << 16;
+	ret |= (uint32_t)(((uint8_t *)&v)[2]) << 8;
+	ret |= (uint32_t)(((uint8_t *)&v)[3]);
+
+	return ret;
+}
+
 /* tiny disassembler */
 static void print_ucode_version(struct insn *insn)
 {
@@ -156,20 +207,69 @@
 
 #define swap_endianness_pcm swap_endianness_ucode
 
-static void swap_endianness_iv(uint8_t *buf, uint32_t len)
+static void swap_endianness_iv(struct iv *iv)
 {
-	struct iv *iv = (struct iv*)buf;
+	iv->reg = bswap_16(iv->reg);
+	iv->size = bswap_16(iv->size);
+	iv->val = bswap_32(iv->val);
+}
+
+static void build_ivs(struct b43_iv **_out, size_t *_out_size,
+		      struct iv *in, size_t in_size,
+		      struct fw_header *hdr,
+		      uint32_t flags)
+{
+	struct iv *iv;
+	struct b43_iv *out;
 	uint32_t i;
+	size_t out_size = 0;
 
-	for (i=0; i<len/sizeof(*iv); i++) {
-		iv[i].reg = bswap_16(iv[i].reg);
-		iv[i].size = bswap_16(iv[i].size);
-		iv[i].val = bswap_32(iv[i].val);
+	if (sizeof(struct b43_iv) != 6) {
+		printf("sizeof(struct b43_iv) != 6\n");
+		exit(255);
 	}
+
+	out = malloc(in_size);
+	if (!out) {
+		perror("failed to allocate buffer");
+		exit(1);
+	}
+	*_out = out;
+	for (i = 0; i < in_size / sizeof(*iv); i++, in++) {
+		if (flags & FW_FLAG_LE)
+			swap_endianness_iv(in);
+		/* input-IV is BigEndian */
+		if (in->reg & to_be16(~FW_IV_OFFSET_MASK)) {
+			printf("Input file IV offset > 0x%X\n", FW_IV_OFFSET_MASK);
+			exit(1);
+		}
+		out->offset_size = in->reg;
+		if (in->size == to_be16(4)) {
+			out->offset_size |= to_be16(FW_IV_32BIT);
+			out->data.d32 = in->val;
+
+			out_size += sizeof(be16_t) + sizeof(be32_t);
+			out = (struct b43_iv *)((uint8_t *)out + sizeof(be16_t) + sizeof(be32_t));
+		} else if (in->size == to_be16(2)) {
+			if (in->val & to_be32(~0xFFFF)) {
+				printf("Input file 16bit IV value overflow\n");
+				exit(1);
+			}
+			out->data.d16 = to_be16(from_be32(in->val));
+
+			out_size += sizeof(be16_t) + sizeof(be16_t);
+			out = (struct b43_iv *)((uint8_t *)out + sizeof(be16_t) + sizeof(be16_t));
+		} else {
+			printf("Input file IV size != 2|4\n");
+			exit(1);
+		}
+	}
+	hdr->size = to_be32(i);
+	*_out_size = out_size;
 }
 
 static void write_file(const char *name, uint8_t *buf, uint32_t len,
-		       uint32_t flags)
+		       const struct fw_header *hdr, uint32_t flags)
 {
 	FILE *f;
 	char nbuf[4096];
@@ -205,7 +305,14 @@
 		perror("failed to open file");
 		exit(2);
 	}
-	fwrite(buf, 1, len, f);
+	if (fwrite(hdr, sizeof(*hdr), 1, f) != 1) {
+		perror("failed to write file");
+		exit(2);
+	}
+	if (fwrite(buf, 1, len, f) != len) {
+		perror("failed to write file");
+		exit(2);
+	}
 	fclose(f);
 }
 
@@ -213,14 +320,23 @@
 				uint32_t flags)
 {
 	uint8_t *buf;
+	size_t data_length;
 	int ucode_rev = 0;
+	struct fw_header hdr;
 
+	memset(&hdr, 0, sizeof(hdr));
+	hdr.ver = FW_HDR_VER;
+
 	if (fseek(f, extract->offset, SEEK_SET)) {
 		perror("failed to seek on file");
 		exit(2);
 	}
 
 	buf = malloc(extract->length);
+	if (!buf) {
+		perror("failed to allocate buffer");
+		exit(3);
+	}
 	if (fread(buf, 1, extract->length, f) != extract->length) {
 		perror("failed to read complete data");
 		exit(3);
@@ -233,24 +349,37 @@
 		ucode_rev += 1;
 	case EXT_UCODE_1:
 		ucode_rev += 1;
+		data_length = extract->length;
 		if (flags & FW_FLAG_LE)
-			swap_endianness_ucode(buf, extract->length);
-		analyse_ucode(ucode_rev, buf, extract->length);
+			swap_endianness_ucode(buf, data_length);
+		analyse_ucode(ucode_rev, buf, data_length);
+		hdr.type = FW_TYPE_UCODE;
+		hdr.size = to_be32(data_length);
 		break;
 	case EXT_PCM:
+		data_length = extract->length;
 		if (flags & FW_FLAG_LE)
-			swap_endianness_pcm(buf, extract->length);
+			swap_endianness_pcm(buf, data_length);
+		hdr.type = FW_TYPE_PCM;
+		hdr.size = to_be32(data_length);
 		break;
-	case EXT_IV:
-		if (flags & FW_FLAG_LE)
-			swap_endianness_iv(buf, extract->length);
+	case EXT_IV: {
+		struct b43_iv *ivs;
+
+		hdr.type = FW_TYPE_IV;
+		build_ivs(&ivs, &data_length,
+			  (struct iv *)buf, extract->length,
+			  &hdr, flags);
+		free(buf);
+		buf = (uint8_t *)ivs;
 		break;
+	}
 	default:
 		exit(255);
 	}
 
 	if (!cmdargs.identify_only)
-		write_file(extract->name, buf, extract->length, flags);
+		write_file(extract->name, buf, data_length, &hdr, flags);
 
 	free(buf);
 }

Modified: trunk/fwcutter/fwcutter.h
===================================================================
--- trunk/fwcutter/fwcutter.h	2007-08-15 17:50:04 UTC (rev 1230)
+++ trunk/fwcutter/fwcutter.h	2007-08-18 21:27:04 UTC (rev 1231)
@@ -8,6 +8,9 @@
 #define fwcutter_stringify(x)	fwcutter_stringify_1(x)
 #define FWCUTTER_VERSION	fwcutter_stringify(FWCUTTER_VERSION_)
 
+typedef uint16_t be16_t; /* Big-endian 16bit */
+typedef uint32_t be32_t; /* Big-endian 32bit */
+
 #define ARG_MATCH	0
 #define ARG_NOMATCH	1
 #define ARG_ERROR	-1
@@ -23,9 +26,10 @@
 	uint16_t op1, op2, op3;
 };
 
+/* The IV how it's done in the binary driver files. */
 struct iv {
-	uint16_t reg, size;
-	uint32_t val;
+	be16_t reg, size;
+	be32_t val;
 } __attribute__((__packed__));
 
 enum extract_type {
@@ -54,4 +58,35 @@
 	const uint32_t flags;
 };
 
+/* The header that's put in to every .fw file */
+struct fw_header {
+	/* Type of the firmware data */
+	uint8_t type;
+	/* Version number of the firmware data format */
+	uint8_t ver;
+	uint8_t __padding[2];
+	/* Size of the data. For ucode and PCM this is in bytes.
+	 * For IV this is in number-of-ivs. */
+	be32_t size;
+} __attribute__((__packed__));
+
+#define FW_TYPE_UCODE	'u'
+#define FW_TYPE_PCM	'p'
+#define FW_TYPE_IV	'i'
+
+#define FW_HDR_VER	0x01
+
+/* The IV in the .fw file */
+struct b43_iv {
+	be16_t offset_size;
+	union {
+		be16_t d16;
+		be32_t d32;
+	} data __attribute__((__packed__));
+} __attribute__((__packed__));
+
+#define FW_IV_OFFSET_MASK	0x7FFF
+#define FW_IV_32BIT		0x8000
+
+
 #endif /* _FWCUTTER_H_ */



From tuxbuesch at mail.berlios.de  Sat Aug 18 23:34:54 2007
From: tuxbuesch at mail.berlios.de (tuxbuesch at BerliOS)
Date: Sat, 18 Aug 2007 23:34:54 +0200
Subject: r1232 - trunk/fwcutter
Message-ID: <200708182134.l7ILYsmN018815@sheep.berlios.de>

Author: tuxbuesch
Date: 2007-08-18 23:34:54 +0200 (Sat, 18 Aug 2007)
New Revision: 1232

Modified:
   trunk/fwcutter/Makefile
Log:
Fix makefile



Modified: trunk/fwcutter/Makefile
===================================================================
--- trunk/fwcutter/Makefile	2007-08-18 21:27:04 UTC (rev 1231)
+++ trunk/fwcutter/Makefile	2007-08-18 21:34:54 UTC (rev 1232)
@@ -2,29 +2,33 @@
 
 CC ?= cc
 PREFIX ?= /usr/local
-CFLAGS ?= -O2 -fomit-frame-pointer
+CFLAGS ?= -Os -fomit-frame-pointer
 CFLAGS += -std=c99 -Wall -pedantic -D_BSD_SOURCE
 LDFLAGS ?=
 
 
 OBJECTS = fwcutter.o md5.o
+BIN	= b43-fwcutter
 
 CFLAGS += -DFWCUTTER_VERSION_=$(VERSION)
 
-all: fwcutter
+all: $(BIN)
 
-fwcutter: $(OBJECTS)
-	$(CC) $(CFLAGS) -o b43-fwcutter $(OBJECTS) $(LDFLAGS)
+fwcutter.o: fwcutter.h fwcutter_list.h md5.h
 
+md5.o: md5.h
+
+$(BIN): $(OBJECTS)
+	$(CC) $(CFLAGS) -o $(BIN) $(OBJECTS) $(LDFLAGS)
+
 install: all
 	-install -d -o 0 -g 0 -m 755 $(PREFIX)/bin/
-	-install -o 0 -g 0 -m 755 b43-fwcutter $(PREFIX)/bin/
+	-install -o 0 -g 0 -m 755 $(BIN) $(PREFIX)/bin/
 	-install -d -o 0 -g 0 -m 755 $(PREFIX)/man/man1/
-	-install -o 0 -g 0 -m 644 b43-fwcutter.1 $(PREFIX)/man/man1/
+	-install -o 0 -g 0 -m 644 $(BIN).1 $(PREFIX)/man/man1/
 
 clean:
-	-rm -f *~ *.o *.orig *.rej *.fw b43-fwcutter
+	-rm -f *.o $(BIN)
 
-# dependencies
-fwcutter.o: fwcutter.h md5.h fwcutter_list.h
-md5.o: md5.h
+distclean: clean
+	-rm -f *.fw *.orig *.rej *~



From tuxbuesch at mail.berlios.de  Sat Aug 18 23:37:23 2007
From: tuxbuesch at mail.berlios.de (tuxbuesch at BerliOS)
Date: Sat, 18 Aug 2007 23:37:23 +0200
Subject: r1233 - trunk/fwcutter
Message-ID: <200708182137.l7ILbN90018964@sheep.berlios.de>

Author: tuxbuesch
Date: 2007-08-18 23:37:22 +0200 (Sat, 18 Aug 2007)
New Revision: 1233

Added:
   trunk/fwcutter/b43-fwcutter.1
Removed:
   trunk/fwcutter/bcm43xx-fwcutter.1
Log:
Rename manpage



Copied: trunk/fwcutter/b43-fwcutter.1 (from rev 1230, trunk/fwcutter/bcm43xx-fwcutter.1)

Deleted: trunk/fwcutter/bcm43xx-fwcutter.1
===================================================================
--- trunk/fwcutter/bcm43xx-fwcutter.1	2007-08-18 21:34:54 UTC (rev 1232)
+++ trunk/fwcutter/bcm43xx-fwcutter.1	2007-08-18 21:37:22 UTC (rev 1233)
@@ -1,103 +0,0 @@
-.\" Initially generated by help2man 1.36.
-.TH BCM43XX-FWCUTTER "1" "September 2006" "bcm43xx-fwcutter" "User Commands"
-.SH NAME
-bcm43xx-fwcutter \- manual page for bcm43xx-fwcutter
-.SH SYNOPSIS
-.B bcm43xx-fwcutter
-[\fIOPTION\fR] [\fIDRIVER\fR]
-.SH DESCRIPTION
-Bcm43xx-fwcutter can extract the firmware for your Broadcom 43xx hardware from different closed source drivers. The bcm43xx driver depends on this firmware files and can't work without them.
-.PP
-Currently bcm43xx-fwcutter supports Apple MacOS X, Microsoft Windows 98/ME/2000/XP and Linux drivers, but keep in mind that bcm43xx-fwcutter doesn't support all driver versions.
-.PP
-Example:
-.IP
-bcm43xx-fwcutter bcmwl5.sys
-.PP
-to cut the firmware out of bcmwl5.sys
-.SH OPTIONS
-.TP
-\fB\-l\fR|\-\-list
-List supported driver versions
-.TP
-\fB\-i\fR|\-\-identify
-Only identify the driver file (don't extract)
-.TP
-\fB\-w\fR|\-\-target\-dir DIR
-Extract and write firmware to DIR
-.TP
-\fB\-a\fR|\-\-alt\-iv
-Extract alternative initvals (only 3.10.x.x)
-.TP
-\fB\-p\fR|\-\-postfix ".FOO"
-Postfix for firmware filenames (.FOO.fw)
-.TP
-\fB\-v\fR|\-\-version
-Print bcm43xx-fwcutter version
-.TP
-\fB\-h\fR|\-\-help
-Print help information
-.SH DRIVERS
-.TP
-\fBAppleAirPort2\fR
-Apple MacOS 10.x driver file (ppc, x86)
-.TP
-\fBAppleAirPort3\fR
-Apple MacOS 10.x driver file (ppc)
-.TP
-\fBAppleAirPortBrcm4311\fR
-Apple MacOS 10.4 driver file (x86)
-.TP
-\fBbcmwl5.sys\fR
-Microsoft Windows driver file, 32bit (x86)
-.TP
-\fBbcmwl564.sys\fR
-Microsoft Windows driver file, 64bit (x86-64)
-.TP
-\fBbcmwl5a.sys\fR
-Microsoft Windows driver file, 32bit (x86)
-.TP
-\fBmn720-50.sys\fR
-This is a renamed bcmwl5.sys driver for Microsoft Wireless MN-720 Notebook Adapter 
-and MN-730 PCI Adapter 
-.TP
-\fBn54gnds.sys\fR
-This is a renamed bcmwl5.sys driver for Planex GW-NS54G 54Mbps Wireless LAN Cards
-.TP
-\fBwmp11v27.sys\fR
-This is a renamed bcmwl5.sys driver for Linksys WMP-11 802.11b PCI Cards
-.TP
-\fBwn511b.sys\fR
-This is a renamed bcmwl5.sys driver for Netgear WN511B Cards
-.TP
-\fBap_d11ucode.o\fR
-Linux 2.4.x driver file (mips)
-.TP
-\fBapsta_d11ucode.o\fR
-Linux 2.4.x driver file (mips)
-.TP
-\fBsta_d11ucode.o\fR
-Linux 2.4.x driver file (mips)
-.TP
-\fBwl.o\fR
-Linux 2.4.x driver file (mips)
-.TP
-\fBwl_ap.o\fR
-Linux 2.4.x driver file (mips)
-.TP
-\fBwl_apsta.o\fR
-Linux 2.4.x driver file (mips)
-.TP
-\fBwl_sta.o\fR
-Linux 2.4.x driver file (mips)
-.TP
-\fBwl96345GW.o_save\fR
-Linux 2.6.x driver file (mips, bcm6345)
-.TP
-\fBwl96348GW.o_save\fR
-Linux 2.6.x driver file (mips, bcm6348)
-.TP
-\fBwl96348GWV_DT.o_save\fR
-Linux 2.6.x driver file (mips, bcm6348)
-.SH AUTHORS
-BCM43xx development team, http://bcm43xx.berlios.de



From tuxbuesch at mail.berlios.de  Sat Aug 18 23:40:40 2007
From: tuxbuesch at mail.berlios.de (tuxbuesch at BerliOS)
Date: Sat, 18 Aug 2007 23:40:40 +0200
Subject: r1234 - trunk/fwcutter
Message-ID: <200708182140.l7ILeekb019228@sheep.berlios.de>

Author: tuxbuesch
Date: 2007-08-18 23:40:40 +0200 (Sat, 18 Aug 2007)
New Revision: 1234

Modified:
   trunk/fwcutter/b43-fwcutter.1
Log:
Fix manpage text


Modified: trunk/fwcutter/b43-fwcutter.1
===================================================================
--- trunk/fwcutter/b43-fwcutter.1	2007-08-18 21:37:22 UTC (rev 1233)
+++ trunk/fwcutter/b43-fwcutter.1	2007-08-18 21:40:40 UTC (rev 1234)
@@ -1,18 +1,18 @@
 .\" Initially generated by help2man 1.36.
-.TH BCM43XX-FWCUTTER "1" "September 2006" "bcm43xx-fwcutter" "User Commands"
+.TH B43-FWCUTTER "1" "2007" "b43-fwcutter" "User Commands"
 .SH NAME
-bcm43xx-fwcutter \- manual page for bcm43xx-fwcutter
+b43-fwcutter \- manual page for b43-fwcutter
 .SH SYNOPSIS
-.B bcm43xx-fwcutter
+.B b43-fwcutter
 [\fIOPTION\fR] [\fIDRIVER\fR]
 .SH DESCRIPTION
-Bcm43xx-fwcutter can extract the firmware for your Broadcom 43xx hardware from different closed source drivers. The bcm43xx driver depends on this firmware files and can't work without them.
+b43-fwcutter can extract the firmware for your Broadcom 43xx hardware from different closed source drivers. The b43 driver depends on this firmware files and can't work without them.
 .PP
-Currently bcm43xx-fwcutter supports Apple MacOS X, Microsoft Windows 98/ME/2000/XP and Linux drivers, but keep in mind that bcm43xx-fwcutter doesn't support all driver versions.
+Currently b43-fwcutter supports Apple MacOS X, Microsoft Windows 98/ME/2000/XP and Linux drivers, but keep in mind that b43-fwcutter doesn't support all driver versions.
 .PP
 Example:
 .IP
-bcm43xx-fwcutter bcmwl5.sys
+b43-fwcutter bcmwl5.sys
 .PP
 to cut the firmware out of bcmwl5.sys
 .SH OPTIONS
@@ -33,71 +33,9 @@
 Postfix for firmware filenames (.FOO.fw)
 .TP
 \fB\-v\fR|\-\-version
-Print bcm43xx-fwcutter version
+Print b43-fwcutter version
 .TP
 \fB\-h\fR|\-\-help
 Print help information
-.SH DRIVERS
-.TP
-\fBAppleAirPort2\fR
-Apple MacOS 10.x driver file (ppc, x86)
-.TP
-\fBAppleAirPort3\fR
-Apple MacOS 10.x driver file (ppc)
-.TP
-\fBAppleAirPortBrcm4311\fR
-Apple MacOS 10.4 driver file (x86)
-.TP
-\fBbcmwl5.sys\fR
-Microsoft Windows driver file, 32bit (x86)
-.TP
-\fBbcmwl564.sys\fR
-Microsoft Windows driver file, 64bit (x86-64)
-.TP
-\fBbcmwl5a.sys\fR
-Microsoft Windows driver file, 32bit (x86)
-.TP
-\fBmn720-50.sys\fR
-This is a renamed bcmwl5.sys driver for Microsoft Wireless MN-720 Notebook Adapter 
-and MN-730 PCI Adapter 
-.TP
-\fBn54gnds.sys\fR
-This is a renamed bcmwl5.sys driver for Planex GW-NS54G 54Mbps Wireless LAN Cards
-.TP
-\fBwmp11v27.sys\fR
-This is a renamed bcmwl5.sys driver for Linksys WMP-11 802.11b PCI Cards
-.TP
-\fBwn511b.sys\fR
-This is a renamed bcmwl5.sys driver for Netgear WN511B Cards
-.TP
-\fBap_d11ucode.o\fR
-Linux 2.4.x driver file (mips)
-.TP
-\fBapsta_d11ucode.o\fR
-Linux 2.4.x driver file (mips)
-.TP
-\fBsta_d11ucode.o\fR
-Linux 2.4.x driver file (mips)
-.TP
-\fBwl.o\fR
-Linux 2.4.x driver file (mips)
-.TP
-\fBwl_ap.o\fR
-Linux 2.4.x driver file (mips)
-.TP
-\fBwl_apsta.o\fR
-Linux 2.4.x driver file (mips)
-.TP
-\fBwl_sta.o\fR
-Linux 2.4.x driver file (mips)
-.TP
-\fBwl96345GW.o_save\fR
-Linux 2.6.x driver file (mips, bcm6345)
-.TP
-\fBwl96348GW.o_save\fR
-Linux 2.6.x driver file (mips, bcm6348)
-.TP
-\fBwl96348GWV_DT.o_save\fR
-Linux 2.6.x driver file (mips, bcm6348)
 .SH AUTHORS
-BCM43xx development team, http://bcm43xx.berlios.de
+b43 development team, http://bcm43xx.berlios.de



From tuxbuesch at mail.berlios.de  Thu Aug 23 00:24:28 2007
From: tuxbuesch at mail.berlios.de (tuxbuesch at BerliOS)
Date: Thu, 23 Aug 2007 00:24:28 +0200
Subject: r1235 - tags/fwcutter
Message-ID: <200708222224.l7MMOSno032620@sheep.berlios.de>

Author: tuxbuesch
Date: 2007-08-23 00:24:28 +0200 (Thu, 23 Aug 2007)
New Revision: 1235

Added:
   tags/fwcutter/008/
Log:
Tag fwcutter-008



Copied: tags/fwcutter/008 (from rev 1234, trunk/fwcutter)



